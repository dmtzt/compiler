
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASGMT BOOL CHAR COLON COMMA CONST_CHAR CONST_INT CONST_REAL CONST_STRING DIVIDE ELSE EQUAL FALSE FROM FUNCTION GLOBAL GTHAN GTHAN_EQUAL ID IF INT LBRACE LBRACKET LOCAL LPAREN LTHAN LTHAN_EQUAL MINUS MODULO NEQUAL NOT OR PLUS PRINT RBRACE RBRACKET READ REAL RETURN RPAREN SEMI START TIMES TRUE VARIABLES VOID WHILEprogram : init startinit :start : global_variables_declaration functions_definition entry_point_definitionstart : global_variables_declaration entry_point_definitionstart : functions_definition entry_point_definitionstart : entry_point_definitionglobal_variables_declaration : GLOBAL parsed_global_scope variables_declarationparsed_global_scope :functions_definition : functions_definition single_function_definitionfunctions_definition : single_function_definitionsingle_function_definition : FUNCTION type parsed_function_return_type ID parsed_function_id LPAREN function_definition_params RPAREN local_variables_declaration instruction_blocksingle_function_definition : FUNCTION type parsed_function_return_type ID parsed_function_id LPAREN function_definition_params RPAREN instruction_blocksingle_function_definition : FUNCTION type parsed_function_return_type ID parsed_function_id LPAREN RPAREN local_variables_declaration instruction_blocksingle_function_definition : FUNCTION type parsed_function_return_type ID parsed_function_id LPAREN RPAREN instruction_blocksingle_function_definition : FUNCTION VOID parsed_function_void_return_type ID parsed_function_id LPAREN function_definition_params RPAREN local_variables_declaration instruction_blocksingle_function_definition : FUNCTION VOID parsed_function_void_return_type ID parsed_function_id LPAREN function_definition_params RPAREN instruction_blocksingle_function_definition : FUNCTION VOID parsed_function_void_return_type ID parsed_function_id LPAREN RPAREN local_variables_declaration instruction_blocksingle_function_definition : FUNCTION VOID parsed_function_void_return_type ID parsed_function_id LPAREN RPAREN instruction_blockparsed_function_id :parsed_function_return_type :parsed_function_void_return_type  :function_definition_params : function_definition_params COMMA single_function_definition_paramfunction_definition_params : single_function_definition_paramsingle_function_definition_param : type IDentry_point_definition : START parsed_main_id LPAREN RPAREN local_variables_declaration instruction_blockentry_point_definition : START parsed_main_id LPAREN RPAREN instruction_blockparsed_main_id :local_variables_declaration : LOCAL variables_declarationvariables_declaration : VARIABLES COLON distinct_type_variables_declarationdistinct_type_variables_declaration : distinct_type_variables_declaration shared_type_variables_declarationdistinct_type_variables_declaration : shared_type_variables_declarationshared_type_variables_declaration : type parsed_type shared_type_variables_declaration_list SEMIparsed_type :shared_type_variables_declaration_list : shared_type_variables_declaration_list COMMA single_variable_declarationshared_type_variables_declaration_list : single_variable_declarationsingle_variable_declaration : ID dim_definition dim_definitionsingle_variable_declaration : ID dim_definitionsingle_variable_declaration : IDdim_definition : LBRACKET CONST_INT RBRACKETinstruction_block : LBRACE statements RBRACEinstruction_block : LBRACE RBRACEstatements : statements single_statementstatements : single_statementsingle_statement : assignmentsingle_statement : function_callsingle_statement : readsingle_statement : printsingle_statement : conditionalsingle_statement : loopsingle_statement : returnassignment : variable_access ASGMT parsed_asgmt expr SEMIassignment : variable_access ASGMT parsed_asgmt readparsed_asgmt :variable_access : ID parsed_id_variable_access dims_accessparsed_id_variable_access :dims_access : single_dim_access single_dim_accessdims_access : single_dim_accessdims_access : emptysingle_dim_access : LBRACKET expr RBRACKETfunction_call : ID LPAREN function_call_params RPAREN SEMIfunction_call : ID LPAREN RPAREN SEMIfunction_call_params : function_call_params COMMA single_function_call_paramfunction_call_params : single_function_call_paramsingle_function_call_param : exprread : READ LPAREN RPAREN SEMIprint : PRINT LPAREN print_params RPAREN SEMIprint : PRINT LPAREN RPAREN SEMIprint_params : print_params COMMA single_print_paramprint_params : single_print_paramsingle_print_param : exprsingle_print_param : CONST_STRINGconditional : IF LPAREN expr RPAREN instruction_block ELSE instruction_blockconditional : IF LPAREN expr RPAREN instruction_blockloop : whileloop : forwhile : WHILE LPAREN expr RPAREN instruction_blockfor : FROM LPAREN ID ASGMT CONST_INT COLON CONST_INT COLON CONST_INT RPAREN instruction_blockfor : FROM LPAREN ID ASGMT CONST_INT COLON CONST_INT RPAREN instruction_blockreturn : RETURN expr SEMIreturn : RETURN SEMIexpr : expr OR and_exprexpr : and_exprand_expr : equality_expr AND equality_exprand_expr : equality_exprequality_expr : relational_expr EQUAL relational_exprequality_expr : relational_expr NEQUAL relational_exprequality_expr : relational_exprrelational_expr : additive_expr LTHAN_EQUAL additive_exprrelational_expr : additive_expr LTHAN additive_exprrelational_expr : additive_expr GTHAN_EQUAL additive_exprrelational_expr : additive_expr GTHAN additive_exprrelational_expr : additive_expradditive_expr : additive_expr PLUS parsed_plus multiplicative_exprparsed_plus :additive_expr : additive_expr MINUS parsed_minus multiplicative_exprparsed_minus :additive_expr : multiplicative_exprmultiplicative_expr : multiplicative_expr TIMES parsed_times unary_exprparsed_times :multiplicative_expr : multiplicative_expr DIVIDE parsed_divide unary_exprparsed_divide :multiplicative_expr : multiplicative_expr MODULO parsed_modulo unary_exprparsed_modulo :multiplicative_expr : unary_exprunary_expr : MINUS postfix_exprunary_expr : PLUS postfix_exprunary_expr : NOT postfix_exprunary_expr : postfix_exprpostfix_expr : LPAREN expr RPARENpostfix_expr : variable_accesspostfix_expr : function_callpostfix_expr : constantconstant : CONST_INTconstant : CONST_REALconstant : CONST_CHARconstant : constant_boolconstant_bool : TRUEconstant_bool : FALSEtype : INTtype : REALtype : CHARtype : BOOLempty :'
    
_lr_action_items = {'GLOBAL':([0,2,],[-2,7,]),'START':([0,2,4,5,8,11,14,24,33,34,42,47,71,110,154,157,190,192,194,195,211,212,],[-2,9,9,9,-10,9,-9,-7,-29,-31,-30,-41,-40,-32,-14,-18,-12,-13,-16,-17,-11,-15,]),'FUNCTION':([0,2,4,5,8,11,14,24,33,34,42,47,71,110,154,157,190,192,194,195,211,212,],[-2,10,10,10,-10,10,-9,-7,-29,-31,-30,-41,-40,-32,-14,-18,-12,-13,-16,-17,-11,-15,]),'$end':([1,3,6,12,13,23,37,44,47,71,],[0,-1,-6,-4,-5,-3,-26,-25,-41,-40,]),'VARIABLES':([7,15,38,],[-8,25,25,]),'LPAREN':([9,16,31,32,40,41,57,58,59,60,63,64,65,73,74,77,78,85,87,90,91,95,102,114,122,131,132,133,134,135,136,137,138,139,140,142,143,144,164,170,181,182,183,184,185,],[-27,26,-19,-19,66,67,74,76,77,78,91,102,103,-53,91,91,91,91,91,91,91,74,91,91,91,91,91,91,91,91,91,91,91,-94,-96,-99,-101,-103,91,91,91,91,91,91,91,]),'VOID':([10,],[18,]),'INT':([10,29,33,34,42,66,67,110,152,],[19,19,19,-31,-30,19,19,-32,19,]),'REAL':([10,29,33,34,42,66,67,110,152,],[20,20,20,-31,-30,20,20,-32,20,]),'CHAR':([10,29,33,34,42,66,67,110,152,],[21,21,21,-31,-30,21,21,-32,21,]),'BOOL':([10,29,33,34,42,66,67,110,152,],[22,22,22,-31,-30,22,22,-32,22,]),'ID':([17,18,19,20,21,22,27,28,35,39,43,46,47,48,49,50,51,52,53,54,55,61,62,63,71,72,73,74,77,78,80,85,87,90,91,102,103,104,111,114,122,130,131,132,133,134,135,136,137,138,139,140,142,143,144,162,164,165,168,170,171,181,182,183,184,185,197,198,201,203,209,215,220,222,],[-20,-21,-119,-120,-121,-122,31,32,-33,57,70,57,-41,-43,-44,-45,-46,-47,-48,-49,-50,-74,-75,95,-40,-42,-53,95,95,95,-80,95,95,95,95,95,149,150,70,95,95,-79,95,95,95,95,95,95,95,95,-94,-96,-99,-101,-103,-52,95,-61,-65,95,-67,95,95,95,95,95,-51,-60,-66,-73,-76,-72,-78,-77,]),'COLON':([25,210,216,],[29,214,217,]),'RPAREN':([26,66,67,74,75,76,77,81,82,83,84,86,88,89,92,93,94,95,96,97,98,99,100,101,105,107,108,115,117,118,119,120,121,124,126,127,128,129,141,145,146,147,148,150,165,166,173,174,175,176,177,178,179,180,186,191,198,199,200,202,204,205,206,207,208,216,219,],[30,106,109,116,-123,123,125,-82,-84,-87,-92,-97,-104,-108,-110,-111,-112,-55,-113,-114,-115,-116,-117,-118,151,-23,155,163,-63,-64,-54,-57,-58,169,-69,-70,-71,172,-106,-105,-107,186,187,-24,-61,-56,-81,-83,-85,-86,-88,-89,-90,-91,-109,-22,-60,-62,-59,-68,-93,-95,-98,-100,-102,218,221,]),'LOCAL':([30,106,109,151,155,],[38,38,38,38,38,]),'LBRACE':([30,33,34,36,42,45,106,109,110,151,153,155,156,172,187,189,193,213,218,221,],[39,-29,-31,39,-30,-28,39,39,-32,39,39,39,39,39,39,39,39,39,39,39,]),'RBRACE':([39,46,47,48,49,50,51,52,53,54,55,61,62,71,72,80,130,162,165,168,171,197,198,201,203,209,215,220,222,],[47,71,-41,-43,-44,-45,-46,-47,-48,-49,-50,-74,-75,-40,-42,-80,-79,-52,-61,-65,-67,-51,-60,-66,-73,-76,-72,-78,-77,]),'READ':([39,46,47,48,49,50,51,52,53,54,55,61,62,71,72,73,80,114,130,162,165,168,171,197,198,201,203,209,215,220,222,],[58,58,-41,-43,-44,-45,-46,-47,-48,-49,-50,-74,-75,-40,-42,-53,-80,58,-79,-52,-61,-65,-67,-51,-60,-66,-73,-76,-72,-78,-77,]),'PRINT':([39,46,47,48,49,50,51,52,53,54,55,61,62,71,72,80,130,162,165,168,171,197,198,201,203,209,215,220,222,],[59,59,-41,-43,-44,-45,-46,-47,-48,-49,-50,-74,-75,-40,-42,-80,-79,-52,-61,-65,-67,-51,-60,-66,-73,-76,-72,-78,-77,]),'IF':([39,46,47,48,49,50,51,52,53,54,55,61,62,71,72,80,130,162,165,168,171,197,198,201,203,209,215,220,222,],[60,60,-41,-43,-44,-45,-46,-47,-48,-49,-50,-74,-75,-40,-42,-80,-79,-52,-61,-65,-67,-51,-60,-66,-73,-76,-72,-78,-77,]),'RETURN':([39,46,47,48,49,50,51,52,53,54,55,61,62,71,72,80,130,162,165,168,171,197,198,201,203,209,215,220,222,],[63,63,-41,-43,-44,-45,-46,-47,-48,-49,-50,-74,-75,-40,-42,-80,-79,-52,-61,-65,-67,-51,-60,-66,-73,-76,-72,-78,-77,]),'WHILE':([39,46,47,48,49,50,51,52,53,54,55,61,62,71,72,80,130,162,165,168,171,197,198,201,203,209,215,220,222,],[64,64,-41,-43,-44,-45,-46,-47,-48,-49,-50,-74,-75,-40,-42,-80,-79,-52,-61,-65,-67,-51,-60,-66,-73,-76,-72,-78,-77,]),'FROM':([39,46,47,48,49,50,51,52,53,54,55,61,62,71,72,80,130,162,165,168,171,197,198,201,203,209,215,220,222,],[65,65,-41,-43,-44,-45,-46,-47,-48,-49,-50,-74,-75,-40,-42,-80,-79,-52,-61,-65,-67,-51,-60,-66,-73,-76,-72,-78,-77,]),'ELSE':([47,71,203,],[-41,-40,213,]),'ASGMT':([56,57,75,119,120,121,149,166,200,],[73,-55,-123,-54,-57,-58,188,-56,-59,]),'LBRACKET':([57,70,75,95,112,120,196,200,],[-55,113,122,-55,113,122,-39,-59,]),'SEMI':([63,68,69,70,75,79,81,82,83,84,86,88,89,92,93,94,95,96,97,98,99,100,101,112,116,119,120,121,123,125,141,145,146,158,159,161,163,165,166,169,173,174,175,176,177,178,179,180,186,196,198,200,204,205,206,207,208,],[80,110,-35,-38,-123,130,-82,-84,-87,-92,-97,-104,-108,-110,-111,-112,-55,-113,-114,-115,-116,-117,-118,-37,165,-54,-57,-58,168,171,-106,-105,-107,-34,-36,197,198,-61,-56,201,-81,-83,-85,-86,-88,-89,-90,-91,-109,-39,-60,-59,-93,-95,-98,-100,-102,]),'MINUS':([63,73,74,75,77,78,84,86,88,89,91,92,93,94,95,96,97,98,99,100,101,102,114,119,120,121,122,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,164,165,166,170,177,178,179,180,181,182,183,184,185,186,198,200,204,205,206,207,208,],[87,-53,87,-123,87,87,140,-97,-104,-108,87,-110,-111,-112,-55,-113,-114,-115,-116,-117,-118,87,87,-54,-57,-58,87,87,87,87,87,87,87,87,87,-94,-96,-106,-99,-101,-103,-105,-107,87,-61,-56,87,140,140,140,140,87,87,87,87,87,-109,-60,-59,-93,-95,-98,-100,-102,]),'PLUS':([63,73,74,75,77,78,84,86,88,89,91,92,93,94,95,96,97,98,99,100,101,102,114,119,120,121,122,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,164,165,166,170,177,178,179,180,181,182,183,184,185,186,198,200,204,205,206,207,208,],[85,-53,85,-123,85,85,139,-97,-104,-108,85,-110,-111,-112,-55,-113,-114,-115,-116,-117,-118,85,85,-54,-57,-58,85,85,85,85,85,85,85,85,85,-94,-96,-106,-99,-101,-103,-105,-107,85,-61,-56,85,139,139,139,139,85,85,85,85,85,-109,-60,-59,-93,-95,-98,-100,-102,]),'NOT':([63,73,74,77,78,91,102,114,122,131,132,133,134,135,136,137,138,139,140,142,143,144,164,170,181,182,183,184,185,],[90,-53,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,-94,-96,-99,-101,-103,90,90,90,90,90,90,90,]),'CONST_INT':([63,73,74,77,78,85,87,90,91,102,113,114,122,131,132,133,134,135,136,137,138,139,140,142,143,144,164,170,181,182,183,184,185,188,214,217,],[96,-53,96,96,96,96,96,96,96,96,160,96,96,96,96,96,96,96,96,96,96,-94,-96,-99,-101,-103,96,96,96,96,96,96,96,210,216,219,]),'CONST_REAL':([63,73,74,77,78,85,87,90,91,102,114,122,131,132,133,134,135,136,137,138,139,140,142,143,144,164,170,181,182,183,184,185,],[97,-53,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-94,-96,-99,-101,-103,97,97,97,97,97,97,97,]),'CONST_CHAR':([63,73,74,77,78,85,87,90,91,102,114,122,131,132,133,134,135,136,137,138,139,140,142,143,144,164,170,181,182,183,184,185,],[98,-53,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,-94,-96,-99,-101,-103,98,98,98,98,98,98,98,]),'TRUE':([63,73,74,77,78,85,87,90,91,102,114,122,131,132,133,134,135,136,137,138,139,140,142,143,144,164,170,181,182,183,184,185,],[100,-53,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-94,-96,-99,-101,-103,100,100,100,100,100,100,100,]),'FALSE':([63,73,74,77,78,85,87,90,91,102,114,122,131,132,133,134,135,136,137,138,139,140,142,143,144,164,170,181,182,183,184,185,],[101,-53,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,-94,-96,-99,-101,-103,101,101,101,101,101,101,101,]),'COMMA':([68,69,70,75,81,82,83,84,86,88,89,92,93,94,95,96,97,98,99,100,101,105,107,108,112,115,117,118,119,120,121,124,126,127,128,141,145,146,150,158,159,165,166,173,174,175,176,177,178,179,180,186,191,196,198,199,200,202,204,205,206,207,208,],[111,-35,-38,-123,-82,-84,-87,-92,-97,-104,-108,-110,-111,-112,-55,-113,-114,-115,-116,-117,-118,152,-23,152,-37,164,-63,-64,-54,-57,-58,170,-69,-70,-71,-106,-105,-107,-24,-34,-36,-61,-56,-81,-83,-85,-86,-88,-89,-90,-91,-109,-22,-39,-60,-62,-59,-68,-93,-95,-98,-100,-102,]),'TIMES':([75,86,88,89,92,93,94,95,96,97,98,99,100,101,119,120,121,141,145,146,165,166,186,198,200,204,205,206,207,208,],[-123,142,-104,-108,-110,-111,-112,-55,-113,-114,-115,-116,-117,-118,-54,-57,-58,-106,-105,-107,-61,-56,-109,-60,-59,142,142,-98,-100,-102,]),'DIVIDE':([75,86,88,89,92,93,94,95,96,97,98,99,100,101,119,120,121,141,145,146,165,166,186,198,200,204,205,206,207,208,],[-123,143,-104,-108,-110,-111,-112,-55,-113,-114,-115,-116,-117,-118,-54,-57,-58,-106,-105,-107,-61,-56,-109,-60,-59,143,143,-98,-100,-102,]),'MODULO':([75,86,88,89,92,93,94,95,96,97,98,99,100,101,119,120,121,141,145,146,165,166,186,198,200,204,205,206,207,208,],[-123,144,-104,-108,-110,-111,-112,-55,-113,-114,-115,-116,-117,-118,-54,-57,-58,-106,-105,-107,-61,-56,-109,-60,-59,144,144,-98,-100,-102,]),'LTHAN_EQUAL':([75,84,86,88,89,92,93,94,95,96,97,98,99,100,101,119,120,121,141,145,146,165,166,186,198,200,204,205,206,207,208,],[-123,135,-97,-104,-108,-110,-111,-112,-55,-113,-114,-115,-116,-117,-118,-54,-57,-58,-106,-105,-107,-61,-56,-109,-60,-59,-93,-95,-98,-100,-102,]),'LTHAN':([75,84,86,88,89,92,93,94,95,96,97,98,99,100,101,119,120,121,141,145,146,165,166,186,198,200,204,205,206,207,208,],[-123,136,-97,-104,-108,-110,-111,-112,-55,-113,-114,-115,-116,-117,-118,-54,-57,-58,-106,-105,-107,-61,-56,-109,-60,-59,-93,-95,-98,-100,-102,]),'GTHAN_EQUAL':([75,84,86,88,89,92,93,94,95,96,97,98,99,100,101,119,120,121,141,145,146,165,166,186,198,200,204,205,206,207,208,],[-123,137,-97,-104,-108,-110,-111,-112,-55,-113,-114,-115,-116,-117,-118,-54,-57,-58,-106,-105,-107,-61,-56,-109,-60,-59,-93,-95,-98,-100,-102,]),'GTHAN':([75,84,86,88,89,92,93,94,95,96,97,98,99,100,101,119,120,121,141,145,146,165,166,186,198,200,204,205,206,207,208,],[-123,138,-97,-104,-108,-110,-111,-112,-55,-113,-114,-115,-116,-117,-118,-54,-57,-58,-106,-105,-107,-61,-56,-109,-60,-59,-93,-95,-98,-100,-102,]),'EQUAL':([75,83,84,86,88,89,92,93,94,95,96,97,98,99,100,101,119,120,121,141,145,146,165,166,177,178,179,180,186,198,200,204,205,206,207,208,],[-123,133,-92,-97,-104,-108,-110,-111,-112,-55,-113,-114,-115,-116,-117,-118,-54,-57,-58,-106,-105,-107,-61,-56,-88,-89,-90,-91,-109,-60,-59,-93,-95,-98,-100,-102,]),'NEQUAL':([75,83,84,86,88,89,92,93,94,95,96,97,98,99,100,101,119,120,121,141,145,146,165,166,177,178,179,180,186,198,200,204,205,206,207,208,],[-123,134,-92,-97,-104,-108,-110,-111,-112,-55,-113,-114,-115,-116,-117,-118,-54,-57,-58,-106,-105,-107,-61,-56,-88,-89,-90,-91,-109,-60,-59,-93,-95,-98,-100,-102,]),'AND':([75,82,83,84,86,88,89,92,93,94,95,96,97,98,99,100,101,119,120,121,141,145,146,165,166,175,176,177,178,179,180,186,198,200,204,205,206,207,208,],[-123,132,-87,-92,-97,-104,-108,-110,-111,-112,-55,-113,-114,-115,-116,-117,-118,-54,-57,-58,-106,-105,-107,-61,-56,-85,-86,-88,-89,-90,-91,-109,-60,-59,-93,-95,-98,-100,-102,]),'OR':([75,79,81,82,83,84,86,88,89,92,93,94,95,96,97,98,99,100,101,118,119,120,121,127,129,141,145,146,147,148,161,165,166,167,173,174,175,176,177,178,179,180,186,198,200,204,205,206,207,208,],[-123,131,-82,-84,-87,-92,-97,-104,-108,-110,-111,-112,-55,-113,-114,-115,-116,-117,-118,131,-54,-57,-58,131,131,-106,-105,-107,131,131,131,-61,-56,131,-81,-83,-85,-86,-88,-89,-90,-91,-109,-60,-59,-93,-95,-98,-100,-102,]),'RBRACKET':([75,81,82,83,84,86,88,89,92,93,94,95,96,97,98,99,100,101,119,120,121,141,145,146,160,165,166,167,173,174,175,176,177,178,179,180,186,198,200,204,205,206,207,208,],[-123,-82,-84,-87,-92,-97,-104,-108,-110,-111,-112,-55,-113,-114,-115,-116,-117,-118,-54,-57,-58,-106,-105,-107,196,-61,-56,200,-81,-83,-85,-86,-88,-89,-90,-91,-109,-60,-59,-93,-95,-98,-100,-102,]),'CONST_STRING':([77,170,],[128,128,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'init':([0,],[2,]),'start':([2,],[3,]),'global_variables_declaration':([2,],[4,]),'functions_definition':([2,4,],[5,11,]),'entry_point_definition':([2,4,5,11,],[6,12,13,23,]),'single_function_definition':([2,4,5,11,],[8,8,14,14,]),'parsed_global_scope':([7,],[15,]),'parsed_main_id':([9,],[16,]),'type':([10,29,33,66,67,152,],[17,35,35,104,104,104,]),'variables_declaration':([15,38,],[24,45,]),'parsed_function_return_type':([17,],[27,]),'parsed_function_void_return_type':([18,],[28,]),'distinct_type_variables_declaration':([29,],[33,]),'shared_type_variables_declaration':([29,33,],[34,42,]),'local_variables_declaration':([30,106,109,151,155,],[36,153,156,189,193,]),'instruction_block':([30,36,106,109,151,153,155,156,172,187,189,193,213,218,221,],[37,44,154,157,190,192,194,195,203,209,211,212,215,220,222,]),'parsed_function_id':([31,32,],[40,41,]),'parsed_type':([35,],[43,]),'statements':([39,],[46,]),'single_statement':([39,46,],[48,72,]),'assignment':([39,46,],[49,49,]),'function_call':([39,46,63,74,77,78,85,87,90,91,102,114,122,131,132,133,134,135,136,137,138,164,170,181,182,183,184,185,],[50,50,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'read':([39,46,114,],[51,51,162,]),'print':([39,46,],[52,52,]),'conditional':([39,46,],[53,53,]),'loop':([39,46,],[54,54,]),'return':([39,46,],[55,55,]),'variable_access':([39,46,63,74,77,78,85,87,90,91,102,114,122,131,132,133,134,135,136,137,138,164,170,181,182,183,184,185,],[56,56,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'while':([39,46,],[61,61,]),'for':([39,46,],[62,62,]),'shared_type_variables_declaration_list':([43,],[68,]),'single_variable_declaration':([43,111,],[69,158,]),'parsed_id_variable_access':([57,95,],[75,75,]),'expr':([63,74,77,78,91,102,114,122,164,170,],[79,118,127,129,147,148,161,167,118,127,]),'and_expr':([63,74,77,78,91,102,114,122,131,164,170,],[81,81,81,81,81,81,81,81,173,81,81,]),'equality_expr':([63,74,77,78,91,102,114,122,131,132,164,170,],[82,82,82,82,82,82,82,82,82,174,82,82,]),'relational_expr':([63,74,77,78,91,102,114,122,131,132,133,134,164,170,],[83,83,83,83,83,83,83,83,83,83,175,176,83,83,]),'additive_expr':([63,74,77,78,91,102,114,122,131,132,133,134,135,136,137,138,164,170,],[84,84,84,84,84,84,84,84,84,84,84,84,177,178,179,180,84,84,]),'multiplicative_expr':([63,74,77,78,91,102,114,122,131,132,133,134,135,136,137,138,164,170,181,182,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,204,205,]),'unary_expr':([63,74,77,78,91,102,114,122,131,132,133,134,135,136,137,138,164,170,181,182,183,184,185,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,206,207,208,]),'postfix_expr':([63,74,77,78,85,87,90,91,102,114,122,131,132,133,134,135,136,137,138,164,170,181,182,183,184,185,],[89,89,89,89,141,145,146,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'constant':([63,74,77,78,85,87,90,91,102,114,122,131,132,133,134,135,136,137,138,164,170,181,182,183,184,185,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'constant_bool':([63,74,77,78,85,87,90,91,102,114,122,131,132,133,134,135,136,137,138,164,170,181,182,183,184,185,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'function_definition_params':([66,67,],[105,108,]),'single_function_definition_param':([66,67,152,],[107,107,191,]),'dim_definition':([70,112,],[112,159,]),'parsed_asgmt':([73,],[114,]),'function_call_params':([74,],[115,]),'single_function_call_param':([74,164,],[117,199,]),'dims_access':([75,],[119,]),'single_dim_access':([75,120,],[120,166,]),'empty':([75,],[121,]),'print_params':([77,],[124,]),'single_print_param':([77,170,],[126,202,]),'parsed_plus':([139,],[181,]),'parsed_minus':([140,],[182,]),'parsed_times':([142,],[183,]),'parsed_divide':([143,],[184,]),'parsed_modulo':([144,],[185,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> init start','program',2,'p_program','parser.py',571),
  ('init -> <empty>','init',0,'p_init','parser.py',579),
  ('start -> global_variables_declaration functions_definition entry_point_definition','start',3,'p_start_1','parser.py',585),
  ('start -> global_variables_declaration entry_point_definition','start',2,'p_start_2','parser.py',589),
  ('start -> functions_definition entry_point_definition','start',2,'p_start_3','parser.py',593),
  ('start -> entry_point_definition','start',1,'p_start_4','parser.py',597),
  ('global_variables_declaration -> GLOBAL parsed_global_scope variables_declaration','global_variables_declaration',3,'p_global_variables_declaration','parser.py',601),
  ('parsed_global_scope -> <empty>','parsed_global_scope',0,'p_parsed_global_scope','parser.py',605),
  ('functions_definition -> functions_definition single_function_definition','functions_definition',2,'p_functions_definition_1','parser.py',610),
  ('functions_definition -> single_function_definition','functions_definition',1,'p_functions_definition_2','parser.py',614),
  ('single_function_definition -> FUNCTION type parsed_function_return_type ID parsed_function_id LPAREN function_definition_params RPAREN local_variables_declaration instruction_block','single_function_definition',10,'p_single_function_definition_primitive_type_1','parser.py',618),
  ('single_function_definition -> FUNCTION type parsed_function_return_type ID parsed_function_id LPAREN function_definition_params RPAREN instruction_block','single_function_definition',9,'p_single_function_definition_primitive_type_2','parser.py',622),
  ('single_function_definition -> FUNCTION type parsed_function_return_type ID parsed_function_id LPAREN RPAREN local_variables_declaration instruction_block','single_function_definition',9,'p_single_function_definition_primitive_type_3','parser.py',626),
  ('single_function_definition -> FUNCTION type parsed_function_return_type ID parsed_function_id LPAREN RPAREN instruction_block','single_function_definition',8,'p_single_function_definition_primitive_type_4','parser.py',630),
  ('single_function_definition -> FUNCTION VOID parsed_function_void_return_type ID parsed_function_id LPAREN function_definition_params RPAREN local_variables_declaration instruction_block','single_function_definition',10,'p_single_function_definition_void_type_1','parser.py',634),
  ('single_function_definition -> FUNCTION VOID parsed_function_void_return_type ID parsed_function_id LPAREN function_definition_params RPAREN instruction_block','single_function_definition',9,'p_single_function_definition_void_type_2','parser.py',638),
  ('single_function_definition -> FUNCTION VOID parsed_function_void_return_type ID parsed_function_id LPAREN RPAREN local_variables_declaration instruction_block','single_function_definition',9,'p_single_function_definition_void_type_3','parser.py',642),
  ('single_function_definition -> FUNCTION VOID parsed_function_void_return_type ID parsed_function_id LPAREN RPAREN instruction_block','single_function_definition',8,'p_single_function_definition_void_type_4','parser.py',646),
  ('parsed_function_id -> <empty>','parsed_function_id',0,'p_parsed_function_id','parser.py',650),
  ('parsed_function_return_type -> <empty>','parsed_function_return_type',0,'p_parsed_function_return_type','parser.py',661),
  ('parsed_function_void_return_type -> <empty>','parsed_function_void_return_type',0,'p_parsed_function_void_return_type','parser.py',667),
  ('function_definition_params -> function_definition_params COMMA single_function_definition_param','function_definition_params',3,'p_function_definition_params_1','parser.py',673),
  ('function_definition_params -> single_function_definition_param','function_definition_params',1,'p_function_definition_params_2','parser.py',677),
  ('single_function_definition_param -> type ID','single_function_definition_param',2,'p_single_function_definition_param','parser.py',681),
  ('entry_point_definition -> START parsed_main_id LPAREN RPAREN local_variables_declaration instruction_block','entry_point_definition',6,'p_entry_point_definition_1','parser.py',695),
  ('entry_point_definition -> START parsed_main_id LPAREN RPAREN instruction_block','entry_point_definition',5,'p_entry_point_definition_2','parser.py',699),
  ('parsed_main_id -> <empty>','parsed_main_id',0,'p_parsed_main_id','parser.py',703),
  ('local_variables_declaration -> LOCAL variables_declaration','local_variables_declaration',2,'p_local_variables_declaration','parser.py',708),
  ('variables_declaration -> VARIABLES COLON distinct_type_variables_declaration','variables_declaration',3,'p_variables_declaration','parser.py',712),
  ('distinct_type_variables_declaration -> distinct_type_variables_declaration shared_type_variables_declaration','distinct_type_variables_declaration',2,'p_distinct_type_variables_declaration_1','parser.py',716),
  ('distinct_type_variables_declaration -> shared_type_variables_declaration','distinct_type_variables_declaration',1,'p_distinct_type_variables_declaration_2','parser.py',720),
  ('shared_type_variables_declaration -> type parsed_type shared_type_variables_declaration_list SEMI','shared_type_variables_declaration',4,'p_shared_type_variables_declaration','parser.py',724),
  ('parsed_type -> <empty>','parsed_type',0,'p_parsed_type','parser.py',728),
  ('shared_type_variables_declaration_list -> shared_type_variables_declaration_list COMMA single_variable_declaration','shared_type_variables_declaration_list',3,'p_shared_type_variables_declaration_list_1','parser.py',734),
  ('shared_type_variables_declaration_list -> single_variable_declaration','shared_type_variables_declaration_list',1,'p_shared_type_variables_declaration_list_2','parser.py',738),
  ('single_variable_declaration -> ID dim_definition dim_definition','single_variable_declaration',3,'p_single_variable_declaration_1','parser.py',742),
  ('single_variable_declaration -> ID dim_definition','single_variable_declaration',2,'p_single_variable_declaration_2','parser.py',746),
  ('single_variable_declaration -> ID','single_variable_declaration',1,'p_single_variable_declaration_3','parser.py',750),
  ('dim_definition -> LBRACKET CONST_INT RBRACKET','dim_definition',3,'p_dim_definition','parser.py',765),
  ('instruction_block -> LBRACE statements RBRACE','instruction_block',3,'p_instruction_block_1','parser.py',769),
  ('instruction_block -> LBRACE RBRACE','instruction_block',2,'p_instruction_block_2','parser.py',773),
  ('statements -> statements single_statement','statements',2,'p_statements_1','parser.py',777),
  ('statements -> single_statement','statements',1,'p_statements_2','parser.py',781),
  ('single_statement -> assignment','single_statement',1,'p_single_statement_1','parser.py',785),
  ('single_statement -> function_call','single_statement',1,'p_single_statement_2','parser.py',789),
  ('single_statement -> read','single_statement',1,'p_single_statement_3','parser.py',793),
  ('single_statement -> print','single_statement',1,'p_single_statement_4','parser.py',797),
  ('single_statement -> conditional','single_statement',1,'p_single_statement_5','parser.py',801),
  ('single_statement -> loop','single_statement',1,'p_single_statement_6','parser.py',805),
  ('single_statement -> return','single_statement',1,'p_single_statement_7','parser.py',809),
  ('assignment -> variable_access ASGMT parsed_asgmt expr SEMI','assignment',5,'p_assignment_1','parser.py',813),
  ('assignment -> variable_access ASGMT parsed_asgmt read','assignment',4,'p_assignment_2','parser.py',817),
  ('parsed_asgmt -> <empty>','parsed_asgmt',0,'p_parsed_asgmt','parser.py',821),
  ('variable_access -> ID parsed_id_variable_access dims_access','variable_access',3,'p_variable_access','parser.py',826),
  ('parsed_id_variable_access -> <empty>','parsed_id_variable_access',0,'p_parsed_id_variable_access','parser.py',830),
  ('dims_access -> single_dim_access single_dim_access','dims_access',2,'p_dims_access_1','parser.py',840),
  ('dims_access -> single_dim_access','dims_access',1,'p_dims_access_2','parser.py',844),
  ('dims_access -> empty','dims_access',1,'p_dims_access_3','parser.py',848),
  ('single_dim_access -> LBRACKET expr RBRACKET','single_dim_access',3,'p_single_dim_access','parser.py',852),
  ('function_call -> ID LPAREN function_call_params RPAREN SEMI','function_call',5,'p_function_call_1','parser.py',856),
  ('function_call -> ID LPAREN RPAREN SEMI','function_call',4,'p_function_call_2','parser.py',860),
  ('function_call_params -> function_call_params COMMA single_function_call_param','function_call_params',3,'p_function_call_params_1','parser.py',864),
  ('function_call_params -> single_function_call_param','function_call_params',1,'p_function_call_params_2','parser.py',868),
  ('single_function_call_param -> expr','single_function_call_param',1,'p_single_function_call_param','parser.py',872),
  ('read -> READ LPAREN RPAREN SEMI','read',4,'p_read','parser.py',876),
  ('print -> PRINT LPAREN print_params RPAREN SEMI','print',5,'p_print_1','parser.py',880),
  ('print -> PRINT LPAREN RPAREN SEMI','print',4,'p_print_2','parser.py',884),
  ('print_params -> print_params COMMA single_print_param','print_params',3,'p_print_params_1','parser.py',888),
  ('print_params -> single_print_param','print_params',1,'p_print_params_2','parser.py',892),
  ('single_print_param -> expr','single_print_param',1,'p_single_print_param_1','parser.py',896),
  ('single_print_param -> CONST_STRING','single_print_param',1,'p_single_print_param_2','parser.py',900),
  ('conditional -> IF LPAREN expr RPAREN instruction_block ELSE instruction_block','conditional',7,'p_conditional_1','parser.py',904),
  ('conditional -> IF LPAREN expr RPAREN instruction_block','conditional',5,'p_conditional_2','parser.py',908),
  ('loop -> while','loop',1,'p_loop_1','parser.py',912),
  ('loop -> for','loop',1,'p_loop_2','parser.py',916),
  ('while -> WHILE LPAREN expr RPAREN instruction_block','while',5,'p_while','parser.py',920),
  ('for -> FROM LPAREN ID ASGMT CONST_INT COLON CONST_INT COLON CONST_INT RPAREN instruction_block','for',11,'p_for_1','parser.py',924),
  ('for -> FROM LPAREN ID ASGMT CONST_INT COLON CONST_INT RPAREN instruction_block','for',9,'p_for_2','parser.py',928),
  ('return -> RETURN expr SEMI','return',3,'p_return_1','parser.py',932),
  ('return -> RETURN SEMI','return',2,'p_return_2','parser.py',936),
  ('expr -> expr OR and_expr','expr',3,'p_expr_1','parser.py',940),
  ('expr -> and_expr','expr',1,'p_expr_2','parser.py',944),
  ('and_expr -> equality_expr AND equality_expr','and_expr',3,'p_and_expr_1','parser.py',948),
  ('and_expr -> equality_expr','and_expr',1,'p_and_expr_2','parser.py',952),
  ('equality_expr -> relational_expr EQUAL relational_expr','equality_expr',3,'p_equality_expr_1','parser.py',956),
  ('equality_expr -> relational_expr NEQUAL relational_expr','equality_expr',3,'p_equality_expr_2','parser.py',960),
  ('equality_expr -> relational_expr','equality_expr',1,'p_equality_expr_3','parser.py',964),
  ('relational_expr -> additive_expr LTHAN_EQUAL additive_expr','relational_expr',3,'p_relational_expr_1','parser.py',968),
  ('relational_expr -> additive_expr LTHAN additive_expr','relational_expr',3,'p_relational_expr_2','parser.py',972),
  ('relational_expr -> additive_expr GTHAN_EQUAL additive_expr','relational_expr',3,'p_relational_expr_3','parser.py',976),
  ('relational_expr -> additive_expr GTHAN additive_expr','relational_expr',3,'p_relational_expr_4','parser.py',980),
  ('relational_expr -> additive_expr','relational_expr',1,'p_relational_expr_5','parser.py',984),
  ('additive_expr -> additive_expr PLUS parsed_plus multiplicative_expr','additive_expr',4,'p_additive_expr_1','parser.py',988),
  ('parsed_plus -> <empty>','parsed_plus',0,'p_parsed_plus','parser.py',995),
  ('additive_expr -> additive_expr MINUS parsed_minus multiplicative_expr','additive_expr',4,'p_additive_expr_2','parser.py',1000),
  ('parsed_minus -> <empty>','parsed_minus',0,'p_parsed_minus','parser.py',1007),
  ('additive_expr -> multiplicative_expr','additive_expr',1,'p_additive_expr_3','parser.py',1012),
  ('multiplicative_expr -> multiplicative_expr TIMES parsed_times unary_expr','multiplicative_expr',4,'p_multiplicative_expr_1','parser.py',1016),
  ('parsed_times -> <empty>','parsed_times',0,'p_parsed_times','parser.py',1023),
  ('multiplicative_expr -> multiplicative_expr DIVIDE parsed_divide unary_expr','multiplicative_expr',4,'p_multiplicative_expr_2','parser.py',1028),
  ('parsed_divide -> <empty>','parsed_divide',0,'p_parsed_divide','parser.py',1035),
  ('multiplicative_expr -> multiplicative_expr MODULO parsed_modulo unary_expr','multiplicative_expr',4,'p_multiplicative_expr_3','parser.py',1040),
  ('parsed_modulo -> <empty>','parsed_modulo',0,'p_parsed_modulo','parser.py',1047),
  ('multiplicative_expr -> unary_expr','multiplicative_expr',1,'p_multiplicative_expr_4','parser.py',1052),
  ('unary_expr -> MINUS postfix_expr','unary_expr',2,'p_unary_expr_1','parser.py',1056),
  ('unary_expr -> PLUS postfix_expr','unary_expr',2,'p_unary_expr_2','parser.py',1060),
  ('unary_expr -> NOT postfix_expr','unary_expr',2,'p_unary_expr_3','parser.py',1064),
  ('unary_expr -> postfix_expr','unary_expr',1,'p_unary_expr_4','parser.py',1068),
  ('postfix_expr -> LPAREN expr RPAREN','postfix_expr',3,'p_postfix_expr_1','parser.py',1072),
  ('postfix_expr -> variable_access','postfix_expr',1,'p_postfix_expr_2','parser.py',1076),
  ('postfix_expr -> function_call','postfix_expr',1,'p_postfix_expr_3','parser.py',1080),
  ('postfix_expr -> constant','postfix_expr',1,'p_postfix_expr_4','parser.py',1084),
  ('constant -> CONST_INT','constant',1,'p_constant_1','parser.py',1088),
  ('constant -> CONST_REAL','constant',1,'p_constant_2','parser.py',1092),
  ('constant -> CONST_CHAR','constant',1,'p_constant_3','parser.py',1096),
  ('constant -> constant_bool','constant',1,'p_constant_4','parser.py',1100),
  ('constant_bool -> TRUE','constant_bool',1,'p_constant_bool_1','parser.py',1104),
  ('constant_bool -> FALSE','constant_bool',1,'p_constant_bool_2','parser.py',1108),
  ('type -> INT','type',1,'p_type_1','parser.py',1112),
  ('type -> REAL','type',1,'p_type_2','parser.py',1117),
  ('type -> CHAR','type',1,'p_type_3','parser.py',1122),
  ('type -> BOOL','type',1,'p_type_4','parser.py',1127),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',1132),
]
