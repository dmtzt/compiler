
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASGMT BOOL CHAR COLON COMMA CONST_CHAR CONST_INT CONST_REAL CONST_STRING DIVIDE ELSE EQUAL FALSE FROM FUNCTION GLOBAL GTHAN GTHAN_EQUAL ID IF INT LBRACE LBRACKET LOCAL LPAREN LTHAN LTHAN_EQUAL MINUS MODULO NEQUAL NOT OR PLUS PRINT RBRACE RBRACKET READ REAL RETURN RPAREN SEMI START TIMES TRUE VARIABLES VOID WHILEprogram : init startinit :start : global_variables_declaration functions_definition entry_point_definitionstart : global_variables_declaration entry_point_definitionstart : functions_definition entry_point_definitionstart : entry_point_definitionglobal_variables_declaration : GLOBAL parsed_global_scope variables_declarationparsed_global_scope :functions_definition : functions_definition single_function_definitionfunctions_definition : single_function_definitionsingle_function_definition : FUNCTION type parsed_function_return_type ID parsed_function_id LPAREN function_definition_params RPAREN local_variables_declaration instruction_blocksingle_function_definition : FUNCTION type parsed_function_return_type ID parsed_function_id LPAREN function_definition_params RPAREN instruction_blocksingle_function_definition : FUNCTION type parsed_function_return_type ID parsed_function_id LPAREN RPAREN local_variables_declaration instruction_blocksingle_function_definition : FUNCTION type parsed_function_return_type ID parsed_function_id LPAREN RPAREN instruction_blocksingle_function_definition : FUNCTION VOID parsed_function_void_return_type ID parsed_function_id LPAREN function_definition_params RPAREN local_variables_declaration instruction_blocksingle_function_definition : FUNCTION VOID parsed_function_void_return_type ID parsed_function_id LPAREN function_definition_params RPAREN instruction_blocksingle_function_definition : FUNCTION VOID parsed_function_void_return_type ID parsed_function_id LPAREN RPAREN local_variables_declaration instruction_blocksingle_function_definition : FUNCTION VOID parsed_function_void_return_type ID parsed_function_id LPAREN RPAREN instruction_blockparsed_function_id :parsed_function_return_type :parsed_function_void_return_type  :function_definition_params : function_definition_params COMMA single_function_definition_paramfunction_definition_params : single_function_definition_paramsingle_function_definition_param : type IDentry_point_definition : START parsed_main_id LPAREN RPAREN local_variables_declaration instruction_blockentry_point_definition : START parsed_main_id LPAREN RPAREN instruction_blockparsed_main_id :local_variables_declaration : LOCAL variables_declarationvariables_declaration : VARIABLES COLON distinct_type_variables_declarationdistinct_type_variables_declaration : distinct_type_variables_declaration shared_type_variables_declarationdistinct_type_variables_declaration : shared_type_variables_declarationshared_type_variables_declaration : type parsed_type shared_type_variables_declaration_list SEMIparsed_type :shared_type_variables_declaration_list : shared_type_variables_declaration_list COMMA single_variable_declarationshared_type_variables_declaration_list : single_variable_declarationsingle_variable_declaration : ID dim_definition dim_definitionsingle_variable_declaration : ID dim_definitionsingle_variable_declaration : IDdim_definition : LBRACKET CONST_INT RBRACKETinstruction_block : LBRACE statements RBRACEinstruction_block : LBRACE RBRACEstatements : statements single_statementstatements : single_statementsingle_statement : assignmentsingle_statement : function_callsingle_statement : printsingle_statement : conditionalsingle_statement : loopsingle_statement : returnassignment : variable_access ASGMT expr SEMIassignment : variable_access ASGMT READ LPAREN RPAREN SEMIvariable_access : ID parsed_id_variable_access dims_accessparsed_id_variable_access :dims_access : single_dim_access single_dim_accessdims_access : single_dim_accessdims_access : emptysingle_dim_access : LBRACKET expr RBRACKETfunction_call : ID parsed_function_call_id LPAREN function_call_params RPAREN SEMIfunction_call : ID parsed_function_call_id LPAREN RPAREN SEMIparsed_function_call_id :function_call_params : function_call_params COMMA single_function_call_paramfunction_call_params : single_function_call_paramsingle_function_call_param : exprprint : PRINT LPAREN print_params RPAREN SEMIprint : PRINT LPAREN RPAREN SEMIprint_params : print_params COMMA single_print_paramprint_params : single_print_paramsingle_print_param : exprconditional : IF LPAREN expr RPAREN parsed_if_expr instruction_block ELSE parsed_else instruction_blockconditional : IF LPAREN expr RPAREN parsed_if_expr instruction_blockparsed_if_expr :parsed_else :loop : whileloop : forwhile : WHILE parsed_while LPAREN expr parsed_while_expr RPAREN instruction_blockparsed_while :parsed_while_expr :for : FROM LPAREN for_index COLON for_limit COLON for_step RPAREN instruction_blockfor : FROM LPAREN for_index COLON for_limit for_no_step RPAREN instruction_blockfor_index : ID ASGMT CONST_INTfor_index : ID ASGMT MINUS CONST_INTfor_limit : CONST_INTfor_limit : MINUS CONST_INTfor_no_step :for_step : CONST_INTfor_step : MINUS CONST_INTreturn : RETURN expr SEMIreturn : RETURN SEMIexpr : expr OR and_exprexpr : and_exprand_expr : equality_expr AND equality_exprand_expr : equality_exprequality_expr : relational_expr EQUAL parsed_equal relational_exprparsed_equal :equality_expr : relational_expr NEQUAL parsed_nequal relational_exprparsed_nequal :equality_expr : relational_exprrelational_expr : additive_expr LTHAN_EQUAL parsed_lthan_equal additive_exprparsed_lthan_equal :relational_expr : additive_expr LTHAN parsed_lthan additive_exprparsed_lthan :relational_expr : additive_expr GTHAN_EQUAL parsed_gthan_equal additive_exprparsed_gthan_equal :relational_expr : additive_expr GTHAN parsed_gthan additive_exprparsed_gthan :relational_expr : additive_expradditive_expr : additive_expr PLUS parsed_plus multiplicative_exprparsed_plus :additive_expr : additive_expr MINUS parsed_minus multiplicative_exprparsed_minus :additive_expr : multiplicative_exprmultiplicative_expr : multiplicative_expr TIMES parsed_times unary_exprparsed_times :multiplicative_expr : multiplicative_expr DIVIDE parsed_divide unary_exprparsed_divide :multiplicative_expr : multiplicative_expr MODULO parsed_modulo unary_exprparsed_modulo :multiplicative_expr : unary_exprunary_expr : MINUS postfix_exprunary_expr : PLUS postfix_exprunary_expr : NOT postfix_exprunary_expr : postfix_exprpostfix_expr : LPAREN expr RPARENpostfix_expr : variable_accesspostfix_expr : function_callpostfix_expr : constantconstant : CONST_INTconstant : CONST_REALconstant : CONST_CHARconstant : CONST_STRINGconstant : constant_boolconstant_bool : TRUEconstant_bool : FALSEtype : INTtype : REALtype : CHARtype : BOOLempty :'
    
_lr_action_items = {'GLOBAL':([0,2,],[-2,7,]),'START':([0,2,4,5,8,11,14,24,33,34,42,47,69,108,149,152,186,188,190,191,218,219,],[-2,9,9,9,-10,9,-9,-7,-29,-31,-30,-41,-40,-32,-14,-18,-12,-13,-16,-17,-11,-15,]),'FUNCTION':([0,2,4,5,8,11,14,24,33,34,42,47,69,108,149,152,186,188,190,191,218,219,],[-2,10,10,10,-10,10,-9,-7,-29,-31,-30,-41,-40,-32,-14,-18,-12,-13,-16,-17,-11,-15,]),'$end':([1,3,6,12,13,23,37,44,47,69,],[0,-1,-6,-4,-5,-3,-26,-25,-41,-40,]),'VARIABLES':([7,15,38,],[-8,25,25,]),'LPAREN':([9,16,31,32,40,41,56,57,58,61,62,63,71,72,74,75,82,84,87,88,92,100,113,114,118,125,126,127,128,129,130,131,132,133,134,136,137,138,142,165,170,171,172,173,174,175,176,177,178,179,180,195,],[-27,26,-19,-19,64,65,-60,74,75,88,-76,101,88,114,88,88,88,88,88,88,-60,142,157,88,88,88,88,-94,-96,-99,-101,-103,-105,-108,-110,-113,-115,-117,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'VOID':([10,],[18,]),'INT':([10,29,33,34,42,64,65,108,147,],[19,19,19,-31,-30,19,19,-32,19,]),'REAL':([10,29,33,34,42,64,65,108,147,],[20,20,20,-31,-30,20,20,-32,20,]),'CHAR':([10,29,33,34,42,64,65,108,147,],[21,21,21,-31,-30,21,21,-32,21,]),'BOOL':([10,29,33,34,42,64,65,108,147,],[22,22,22,-31,-30,22,22,-32,22,]),'ID':([17,18,19,20,21,22,27,28,35,39,43,46,47,48,49,50,51,52,53,54,59,60,61,69,70,71,74,75,77,82,84,87,88,101,102,109,114,118,124,125,126,127,128,129,130,131,132,133,134,136,137,138,142,156,165,166,170,171,172,173,174,175,176,177,178,179,180,195,196,198,220,221,223,230,238,239,240,],[-20,-21,-134,-135,-136,-137,31,32,-33,56,68,56,-41,-43,-44,-45,-46,-47,-48,-49,-73,-74,92,-40,-42,92,92,92,-88,92,92,92,92,144,145,68,92,92,-87,92,92,-94,-96,-99,-101,-103,-105,-108,-110,-113,-115,-117,92,-50,92,-65,92,92,92,92,92,92,92,92,92,92,92,92,-59,-64,-51,-58,-70,-75,-79,-69,-78,]),'COLON':([25,143,213,214,216,227,228,],[29,183,225,-82,-80,-83,-81,]),'RPAREN':([26,64,65,73,74,78,79,80,81,83,85,86,89,90,91,92,93,94,95,96,97,98,99,103,105,106,114,115,116,117,119,121,122,123,135,139,140,141,145,157,158,160,161,162,168,169,181,182,187,196,197,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,221,222,226,227,231,232,237,],[30,104,107,-138,120,-90,-92,-97,-106,-111,-118,-122,-124,-125,-126,-53,-127,-128,-129,-130,-131,-132,-133,146,-23,150,159,-52,-55,-56,164,-67,-68,167,-120,-119,-121,181,-24,193,194,-62,-63,-54,-89,-91,-123,-77,-22,-59,-57,-66,-93,-95,-98,-100,-102,-104,-107,-109,-112,-114,-116,224,-84,-82,-58,-61,234,-83,236,-85,-86,]),'LOCAL':([30,104,107,146,150,],[38,38,38,38,38,]),'LBRACE':([30,33,34,36,42,45,104,107,108,146,148,150,151,167,185,189,200,224,229,234,235,236,],[39,-29,-31,39,-30,-28,39,39,-32,39,39,39,39,-71,39,39,39,39,-72,39,39,39,]),'RBRACE':([39,46,47,48,49,50,51,52,53,54,59,60,69,70,77,124,156,166,196,198,220,221,223,230,238,239,240,],[47,69,-41,-43,-44,-45,-46,-47,-48,-49,-73,-74,-40,-42,-88,-87,-50,-65,-59,-64,-51,-58,-70,-75,-79,-69,-78,]),'PRINT':([39,46,47,48,49,50,51,52,53,54,59,60,69,70,77,124,156,166,196,198,220,221,223,230,238,239,240,],[57,57,-41,-43,-44,-45,-46,-47,-48,-49,-73,-74,-40,-42,-88,-87,-50,-65,-59,-64,-51,-58,-70,-75,-79,-69,-78,]),'IF':([39,46,47,48,49,50,51,52,53,54,59,60,69,70,77,124,156,166,196,198,220,221,223,230,238,239,240,],[58,58,-41,-43,-44,-45,-46,-47,-48,-49,-73,-74,-40,-42,-88,-87,-50,-65,-59,-64,-51,-58,-70,-75,-79,-69,-78,]),'RETURN':([39,46,47,48,49,50,51,52,53,54,59,60,69,70,77,124,156,166,196,198,220,221,223,230,238,239,240,],[61,61,-41,-43,-44,-45,-46,-47,-48,-49,-73,-74,-40,-42,-88,-87,-50,-65,-59,-64,-51,-58,-70,-75,-79,-69,-78,]),'WHILE':([39,46,47,48,49,50,51,52,53,54,59,60,69,70,77,124,156,166,196,198,220,221,223,230,238,239,240,],[62,62,-41,-43,-44,-45,-46,-47,-48,-49,-73,-74,-40,-42,-88,-87,-50,-65,-59,-64,-51,-58,-70,-75,-79,-69,-78,]),'FROM':([39,46,47,48,49,50,51,52,53,54,59,60,69,70,77,124,156,166,196,198,220,221,223,230,238,239,240,],[63,63,-41,-43,-44,-45,-46,-47,-48,-49,-73,-74,-40,-42,-88,-87,-50,-65,-59,-64,-51,-58,-70,-75,-79,-69,-78,]),'ELSE':([47,69,223,],[-41,-40,229,]),'ASGMT':([55,56,73,115,116,117,144,162,197,],[71,-53,-138,-52,-55,-56,184,-54,-57,]),'LBRACKET':([56,68,73,92,110,116,192,197,],[-53,111,118,-53,111,118,-39,-57,]),'SEMI':([61,66,67,68,73,76,78,79,80,81,83,85,86,89,90,91,92,93,94,95,96,97,98,99,110,112,115,116,117,120,135,139,140,153,154,159,162,164,168,169,181,192,193,194,196,197,201,202,203,204,205,206,207,208,209,210,211,221,],[77,108,-35,-38,-138,124,-90,-92,-97,-106,-111,-118,-122,-124,-125,-126,-53,-127,-128,-129,-130,-131,-132,-133,-37,156,-52,-55,-56,166,-120,-119,-121,-34,-36,196,-54,198,-89,-91,-123,-39,220,221,-59,-57,-93,-95,-98,-100,-102,-104,-107,-109,-112,-114,-116,-58,]),'MINUS':([61,71,73,74,75,81,83,85,86,88,89,90,91,92,93,94,95,96,97,98,99,114,115,116,117,118,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,162,165,170,171,172,173,174,175,176,177,178,179,180,181,183,184,195,196,197,203,204,205,206,207,208,209,210,211,221,225,],[84,84,-138,84,84,134,-111,-118,-122,84,-124,-125,-126,-53,-127,-128,-129,-130,-131,-132,-133,84,-52,-55,-56,84,84,84,-94,-96,-99,-101,-103,-105,-108,-110,-120,-113,-115,-117,-119,-121,84,-54,84,84,84,84,84,84,84,84,84,84,84,84,-123,215,217,84,-59,-57,134,134,134,134,-107,-109,-112,-114,-116,-58,233,]),'PLUS':([61,71,73,74,75,81,83,85,86,88,89,90,91,92,93,94,95,96,97,98,99,114,115,116,117,118,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,162,165,170,171,172,173,174,175,176,177,178,179,180,181,195,196,197,203,204,205,206,207,208,209,210,211,221,],[82,82,-138,82,82,133,-111,-118,-122,82,-124,-125,-126,-53,-127,-128,-129,-130,-131,-132,-133,82,-52,-55,-56,82,82,82,-94,-96,-99,-101,-103,-105,-108,-110,-120,-113,-115,-117,-119,-121,82,-54,82,82,82,82,82,82,82,82,82,82,82,82,-123,82,-59,-57,133,133,133,133,-107,-109,-112,-114,-116,-58,]),'NOT':([61,71,74,75,88,114,118,125,126,127,128,129,130,131,132,133,134,136,137,138,142,165,170,171,172,173,174,175,176,177,178,179,180,195,],[87,87,87,87,87,87,87,87,87,-94,-96,-99,-101,-103,-105,-108,-110,-113,-115,-117,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'CONST_INT':([61,71,74,75,82,84,87,88,111,114,118,125,126,127,128,129,130,131,132,133,134,136,137,138,142,165,170,171,172,173,174,175,176,177,178,179,180,183,184,195,215,217,225,233,],[93,93,93,93,93,93,93,93,155,93,93,93,93,-94,-96,-99,-101,-103,-105,-108,-110,-113,-115,-117,93,93,93,93,93,93,93,93,93,93,93,93,93,214,216,93,227,228,232,237,]),'CONST_REAL':([61,71,74,75,82,84,87,88,114,118,125,126,127,128,129,130,131,132,133,134,136,137,138,142,165,170,171,172,173,174,175,176,177,178,179,180,195,],[94,94,94,94,94,94,94,94,94,94,94,94,-94,-96,-99,-101,-103,-105,-108,-110,-113,-115,-117,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'CONST_CHAR':([61,71,74,75,82,84,87,88,114,118,125,126,127,128,129,130,131,132,133,134,136,137,138,142,165,170,171,172,173,174,175,176,177,178,179,180,195,],[95,95,95,95,95,95,95,95,95,95,95,95,-94,-96,-99,-101,-103,-105,-108,-110,-113,-115,-117,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'CONST_STRING':([61,71,74,75,82,84,87,88,114,118,125,126,127,128,129,130,131,132,133,134,136,137,138,142,165,170,171,172,173,174,175,176,177,178,179,180,195,],[96,96,96,96,96,96,96,96,96,96,96,96,-94,-96,-99,-101,-103,-105,-108,-110,-113,-115,-117,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'TRUE':([61,71,74,75,82,84,87,88,114,118,125,126,127,128,129,130,131,132,133,134,136,137,138,142,165,170,171,172,173,174,175,176,177,178,179,180,195,],[98,98,98,98,98,98,98,98,98,98,98,98,-94,-96,-99,-101,-103,-105,-108,-110,-113,-115,-117,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'FALSE':([61,71,74,75,82,84,87,88,114,118,125,126,127,128,129,130,131,132,133,134,136,137,138,142,165,170,171,172,173,174,175,176,177,178,179,180,195,],[99,99,99,99,99,99,99,99,99,99,99,99,-94,-96,-99,-101,-103,-105,-108,-110,-113,-115,-117,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'COMMA':([66,67,68,73,78,79,80,81,83,85,86,89,90,91,92,93,94,95,96,97,98,99,103,105,106,110,115,116,117,119,121,122,135,139,140,145,153,154,158,160,161,162,168,169,181,187,192,196,197,199,201,202,203,204,205,206,207,208,209,210,211,221,222,],[109,-35,-38,-138,-90,-92,-97,-106,-111,-118,-122,-124,-125,-126,-53,-127,-128,-129,-130,-131,-132,-133,147,-23,147,-37,-52,-55,-56,165,-67,-68,-120,-119,-121,-24,-34,-36,195,-62,-63,-54,-89,-91,-123,-22,-39,-59,-57,-66,-93,-95,-98,-100,-102,-104,-107,-109,-112,-114,-116,-58,-61,]),'READ':([71,],[113,]),'TIMES':([73,83,85,86,89,90,91,92,93,94,95,96,97,98,99,115,116,117,135,139,140,162,181,196,197,207,208,209,210,211,221,],[-138,136,-118,-122,-124,-125,-126,-53,-127,-128,-129,-130,-131,-132,-133,-52,-55,-56,-120,-119,-121,-54,-123,-59,-57,136,136,-112,-114,-116,-58,]),'DIVIDE':([73,83,85,86,89,90,91,92,93,94,95,96,97,98,99,115,116,117,135,139,140,162,181,196,197,207,208,209,210,211,221,],[-138,137,-118,-122,-124,-125,-126,-53,-127,-128,-129,-130,-131,-132,-133,-52,-55,-56,-120,-119,-121,-54,-123,-59,-57,137,137,-112,-114,-116,-58,]),'MODULO':([73,83,85,86,89,90,91,92,93,94,95,96,97,98,99,115,116,117,135,139,140,162,181,196,197,207,208,209,210,211,221,],[-138,138,-118,-122,-124,-125,-126,-53,-127,-128,-129,-130,-131,-132,-133,-52,-55,-56,-120,-119,-121,-54,-123,-59,-57,138,138,-112,-114,-116,-58,]),'LTHAN_EQUAL':([73,81,83,85,86,89,90,91,92,93,94,95,96,97,98,99,115,116,117,135,139,140,162,181,196,197,207,208,209,210,211,221,],[-138,129,-111,-118,-122,-124,-125,-126,-53,-127,-128,-129,-130,-131,-132,-133,-52,-55,-56,-120,-119,-121,-54,-123,-59,-57,-107,-109,-112,-114,-116,-58,]),'LTHAN':([73,81,83,85,86,89,90,91,92,93,94,95,96,97,98,99,115,116,117,135,139,140,162,181,196,197,207,208,209,210,211,221,],[-138,130,-111,-118,-122,-124,-125,-126,-53,-127,-128,-129,-130,-131,-132,-133,-52,-55,-56,-120,-119,-121,-54,-123,-59,-57,-107,-109,-112,-114,-116,-58,]),'GTHAN_EQUAL':([73,81,83,85,86,89,90,91,92,93,94,95,96,97,98,99,115,116,117,135,139,140,162,181,196,197,207,208,209,210,211,221,],[-138,131,-111,-118,-122,-124,-125,-126,-53,-127,-128,-129,-130,-131,-132,-133,-52,-55,-56,-120,-119,-121,-54,-123,-59,-57,-107,-109,-112,-114,-116,-58,]),'GTHAN':([73,81,83,85,86,89,90,91,92,93,94,95,96,97,98,99,115,116,117,135,139,140,162,181,196,197,207,208,209,210,211,221,],[-138,132,-111,-118,-122,-124,-125,-126,-53,-127,-128,-129,-130,-131,-132,-133,-52,-55,-56,-120,-119,-121,-54,-123,-59,-57,-107,-109,-112,-114,-116,-58,]),'EQUAL':([73,80,81,83,85,86,89,90,91,92,93,94,95,96,97,98,99,115,116,117,135,139,140,162,181,196,197,203,204,205,206,207,208,209,210,211,221,],[-138,127,-106,-111,-118,-122,-124,-125,-126,-53,-127,-128,-129,-130,-131,-132,-133,-52,-55,-56,-120,-119,-121,-54,-123,-59,-57,-98,-100,-102,-104,-107,-109,-112,-114,-116,-58,]),'NEQUAL':([73,80,81,83,85,86,89,90,91,92,93,94,95,96,97,98,99,115,116,117,135,139,140,162,181,196,197,203,204,205,206,207,208,209,210,211,221,],[-138,128,-106,-111,-118,-122,-124,-125,-126,-53,-127,-128,-129,-130,-131,-132,-133,-52,-55,-56,-120,-119,-121,-54,-123,-59,-57,-98,-100,-102,-104,-107,-109,-112,-114,-116,-58,]),'AND':([73,79,80,81,83,85,86,89,90,91,92,93,94,95,96,97,98,99,115,116,117,135,139,140,162,181,196,197,201,202,203,204,205,206,207,208,209,210,211,221,],[-138,126,-97,-106,-111,-118,-122,-124,-125,-126,-53,-127,-128,-129,-130,-131,-132,-133,-52,-55,-56,-120,-119,-121,-54,-123,-59,-57,-93,-95,-98,-100,-102,-104,-107,-109,-112,-114,-116,-58,]),'OR':([73,76,78,79,80,81,83,85,86,89,90,91,92,93,94,95,96,97,98,99,112,115,116,117,122,123,135,139,140,141,161,162,163,168,169,181,182,196,197,201,202,203,204,205,206,207,208,209,210,211,221,],[-138,125,-90,-92,-97,-106,-111,-118,-122,-124,-125,-126,-53,-127,-128,-129,-130,-131,-132,-133,125,-52,-55,-56,125,125,-120,-119,-121,125,125,-54,125,-89,-91,-123,125,-59,-57,-93,-95,-98,-100,-102,-104,-107,-109,-112,-114,-116,-58,]),'RBRACKET':([73,78,79,80,81,83,85,86,89,90,91,92,93,94,95,96,97,98,99,115,116,117,135,139,140,155,162,163,168,169,181,196,197,201,202,203,204,205,206,207,208,209,210,211,221,],[-138,-90,-92,-97,-106,-111,-118,-122,-124,-125,-126,-53,-127,-128,-129,-130,-131,-132,-133,-52,-55,-56,-120,-119,-121,192,-54,197,-89,-91,-123,-59,-57,-93,-95,-98,-100,-102,-104,-107,-109,-112,-114,-116,-58,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'init':([0,],[2,]),'start':([2,],[3,]),'global_variables_declaration':([2,],[4,]),'functions_definition':([2,4,],[5,11,]),'entry_point_definition':([2,4,5,11,],[6,12,13,23,]),'single_function_definition':([2,4,5,11,],[8,8,14,14,]),'parsed_global_scope':([7,],[15,]),'parsed_main_id':([9,],[16,]),'type':([10,29,33,64,65,147,],[17,35,35,102,102,102,]),'variables_declaration':([15,38,],[24,45,]),'parsed_function_return_type':([17,],[27,]),'parsed_function_void_return_type':([18,],[28,]),'distinct_type_variables_declaration':([29,],[33,]),'shared_type_variables_declaration':([29,33,],[34,42,]),'local_variables_declaration':([30,104,107,146,150,],[36,148,151,185,189,]),'instruction_block':([30,36,104,107,146,148,150,151,185,189,200,224,234,235,236,],[37,44,149,152,186,188,190,191,218,219,223,230,238,239,240,]),'parsed_function_id':([31,32,],[40,41,]),'parsed_type':([35,],[43,]),'statements':([39,],[46,]),'single_statement':([39,46,],[48,70,]),'assignment':([39,46,],[49,49,]),'function_call':([39,46,61,71,74,75,82,84,87,88,114,118,125,126,142,165,170,171,172,173,174,175,176,177,178,179,180,195,],[50,50,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'print':([39,46,],[51,51,]),'conditional':([39,46,],[52,52,]),'loop':([39,46,],[53,53,]),'return':([39,46,],[54,54,]),'variable_access':([39,46,61,71,74,75,82,84,87,88,114,118,125,126,142,165,170,171,172,173,174,175,176,177,178,179,180,195,],[55,55,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'while':([39,46,],[59,59,]),'for':([39,46,],[60,60,]),'shared_type_variables_declaration_list':([43,],[66,]),'single_variable_declaration':([43,109,],[67,153,]),'parsed_function_call_id':([56,92,],[72,72,]),'parsed_id_variable_access':([56,92,],[73,73,]),'expr':([61,71,74,75,88,114,118,142,165,195,],[76,112,122,123,141,161,163,182,122,161,]),'and_expr':([61,71,74,75,88,114,118,125,142,165,195,],[78,78,78,78,78,78,78,168,78,78,78,]),'equality_expr':([61,71,74,75,88,114,118,125,126,142,165,195,],[79,79,79,79,79,79,79,79,169,79,79,79,]),'relational_expr':([61,71,74,75,88,114,118,125,126,142,165,170,171,195,],[80,80,80,80,80,80,80,80,80,80,80,201,202,80,]),'additive_expr':([61,71,74,75,88,114,118,125,126,142,165,170,171,172,173,174,175,195,],[81,81,81,81,81,81,81,81,81,81,81,81,81,203,204,205,206,81,]),'multiplicative_expr':([61,71,74,75,88,114,118,125,126,142,165,170,171,172,173,174,175,176,177,195,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,207,208,83,]),'unary_expr':([61,71,74,75,88,114,118,125,126,142,165,170,171,172,173,174,175,176,177,178,179,180,195,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,209,210,211,85,]),'postfix_expr':([61,71,74,75,82,84,87,88,114,118,125,126,142,165,170,171,172,173,174,175,176,177,178,179,180,195,],[86,86,86,86,135,139,140,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'constant':([61,71,74,75,82,84,87,88,114,118,125,126,142,165,170,171,172,173,174,175,176,177,178,179,180,195,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'constant_bool':([61,71,74,75,82,84,87,88,114,118,125,126,142,165,170,171,172,173,174,175,176,177,178,179,180,195,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'parsed_while':([62,],[100,]),'function_definition_params':([64,65,],[103,106,]),'single_function_definition_param':([64,65,147,],[105,105,187,]),'dim_definition':([68,110,],[110,154,]),'dims_access':([73,],[115,]),'single_dim_access':([73,116,],[116,162,]),'empty':([73,],[117,]),'print_params':([74,],[119,]),'single_print_param':([74,165,],[121,199,]),'for_index':([101,],[143,]),'function_call_params':([114,],[158,]),'single_function_call_param':([114,195,],[160,222,]),'parsed_equal':([127,],[170,]),'parsed_nequal':([128,],[171,]),'parsed_lthan_equal':([129,],[172,]),'parsed_lthan':([130,],[173,]),'parsed_gthan_equal':([131,],[174,]),'parsed_gthan':([132,],[175,]),'parsed_plus':([133,],[176,]),'parsed_minus':([134,],[177,]),'parsed_times':([136,],[178,]),'parsed_divide':([137,],[179,]),'parsed_modulo':([138,],[180,]),'parsed_if_expr':([167,],[200,]),'parsed_while_expr':([182,],[212,]),'for_limit':([183,],[213,]),'for_no_step':([213,],[226,]),'for_step':([225,],[231,]),'parsed_else':([229,],[235,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> init start','program',2,'p_program','parser.py',407),
  ('init -> <empty>','init',0,'p_init','parser.py',417),
  ('start -> global_variables_declaration functions_definition entry_point_definition','start',3,'p_start_1','parser.py',428),
  ('start -> global_variables_declaration entry_point_definition','start',2,'p_start_2','parser.py',432),
  ('start -> functions_definition entry_point_definition','start',2,'p_start_3','parser.py',436),
  ('start -> entry_point_definition','start',1,'p_start_4','parser.py',440),
  ('global_variables_declaration -> GLOBAL parsed_global_scope variables_declaration','global_variables_declaration',3,'p_global_variables_declaration','parser.py',444),
  ('parsed_global_scope -> <empty>','parsed_global_scope',0,'p_parsed_global_scope','parser.py',448),
  ('functions_definition -> functions_definition single_function_definition','functions_definition',2,'p_functions_definition_1','parser.py',453),
  ('functions_definition -> single_function_definition','functions_definition',1,'p_functions_definition_2','parser.py',457),
  ('single_function_definition -> FUNCTION type parsed_function_return_type ID parsed_function_id LPAREN function_definition_params RPAREN local_variables_declaration instruction_block','single_function_definition',10,'p_single_function_definition_primitive_type_1','parser.py',464),
  ('single_function_definition -> FUNCTION type parsed_function_return_type ID parsed_function_id LPAREN function_definition_params RPAREN instruction_block','single_function_definition',9,'p_single_function_definition_primitive_type_2','parser.py',468),
  ('single_function_definition -> FUNCTION type parsed_function_return_type ID parsed_function_id LPAREN RPAREN local_variables_declaration instruction_block','single_function_definition',9,'p_single_function_definition_primitive_type_3','parser.py',472),
  ('single_function_definition -> FUNCTION type parsed_function_return_type ID parsed_function_id LPAREN RPAREN instruction_block','single_function_definition',8,'p_single_function_definition_primitive_type_4','parser.py',476),
  ('single_function_definition -> FUNCTION VOID parsed_function_void_return_type ID parsed_function_id LPAREN function_definition_params RPAREN local_variables_declaration instruction_block','single_function_definition',10,'p_single_function_definition_void_type_1','parser.py',480),
  ('single_function_definition -> FUNCTION VOID parsed_function_void_return_type ID parsed_function_id LPAREN function_definition_params RPAREN instruction_block','single_function_definition',9,'p_single_function_definition_void_type_2','parser.py',484),
  ('single_function_definition -> FUNCTION VOID parsed_function_void_return_type ID parsed_function_id LPAREN RPAREN local_variables_declaration instruction_block','single_function_definition',9,'p_single_function_definition_void_type_3','parser.py',488),
  ('single_function_definition -> FUNCTION VOID parsed_function_void_return_type ID parsed_function_id LPAREN RPAREN instruction_block','single_function_definition',8,'p_single_function_definition_void_type_4','parser.py',492),
  ('parsed_function_id -> <empty>','parsed_function_id',0,'p_parsed_function_id','parser.py',496),
  ('parsed_function_return_type -> <empty>','parsed_function_return_type',0,'p_parsed_function_return_type','parser.py',509),
  ('parsed_function_void_return_type -> <empty>','parsed_function_void_return_type',0,'p_parsed_function_void_return_type','parser.py',515),
  ('function_definition_params -> function_definition_params COMMA single_function_definition_param','function_definition_params',3,'p_function_definition_params_1','parser.py',521),
  ('function_definition_params -> single_function_definition_param','function_definition_params',1,'p_function_definition_params_2','parser.py',525),
  ('single_function_definition_param -> type ID','single_function_definition_param',2,'p_single_function_definition_param','parser.py',529),
  ('entry_point_definition -> START parsed_main_id LPAREN RPAREN local_variables_declaration instruction_block','entry_point_definition',6,'p_entry_point_definition_1','parser.py',546),
  ('entry_point_definition -> START parsed_main_id LPAREN RPAREN instruction_block','entry_point_definition',5,'p_entry_point_definition_2','parser.py',550),
  ('parsed_main_id -> <empty>','parsed_main_id',0,'p_parsed_main_id','parser.py',554),
  ('local_variables_declaration -> LOCAL variables_declaration','local_variables_declaration',2,'p_local_variables_declaration','parser.py',564),
  ('variables_declaration -> VARIABLES COLON distinct_type_variables_declaration','variables_declaration',3,'p_variables_declaration','parser.py',568),
  ('distinct_type_variables_declaration -> distinct_type_variables_declaration shared_type_variables_declaration','distinct_type_variables_declaration',2,'p_distinct_type_variables_declaration_1','parser.py',572),
  ('distinct_type_variables_declaration -> shared_type_variables_declaration','distinct_type_variables_declaration',1,'p_distinct_type_variables_declaration_2','parser.py',576),
  ('shared_type_variables_declaration -> type parsed_type shared_type_variables_declaration_list SEMI','shared_type_variables_declaration',4,'p_shared_type_variables_declaration','parser.py',580),
  ('parsed_type -> <empty>','parsed_type',0,'p_parsed_type','parser.py',584),
  ('shared_type_variables_declaration_list -> shared_type_variables_declaration_list COMMA single_variable_declaration','shared_type_variables_declaration_list',3,'p_shared_type_variables_declaration_list_1','parser.py',590),
  ('shared_type_variables_declaration_list -> single_variable_declaration','shared_type_variables_declaration_list',1,'p_shared_type_variables_declaration_list_2','parser.py',594),
  ('single_variable_declaration -> ID dim_definition dim_definition','single_variable_declaration',3,'p_single_variable_declaration_1','parser.py',598),
  ('single_variable_declaration -> ID dim_definition','single_variable_declaration',2,'p_single_variable_declaration_2','parser.py',602),
  ('single_variable_declaration -> ID','single_variable_declaration',1,'p_single_variable_declaration_3','parser.py',606),
  ('dim_definition -> LBRACKET CONST_INT RBRACKET','dim_definition',3,'p_dim_definition','parser.py',621),
  ('instruction_block -> LBRACE statements RBRACE','instruction_block',3,'p_instruction_block_1','parser.py',625),
  ('instruction_block -> LBRACE RBRACE','instruction_block',2,'p_instruction_block_2','parser.py',629),
  ('statements -> statements single_statement','statements',2,'p_statements_1','parser.py',633),
  ('statements -> single_statement','statements',1,'p_statements_2','parser.py',637),
  ('single_statement -> assignment','single_statement',1,'p_single_statement_1','parser.py',641),
  ('single_statement -> function_call','single_statement',1,'p_single_statement_2','parser.py',645),
  ('single_statement -> print','single_statement',1,'p_single_statement_3','parser.py',649),
  ('single_statement -> conditional','single_statement',1,'p_single_statement_4','parser.py',653),
  ('single_statement -> loop','single_statement',1,'p_single_statement_5','parser.py',657),
  ('single_statement -> return','single_statement',1,'p_single_statement_6','parser.py',661),
  ('assignment -> variable_access ASGMT expr SEMI','assignment',4,'p_assignment_1','parser.py',665),
  ('assignment -> variable_access ASGMT READ LPAREN RPAREN SEMI','assignment',6,'p_assignment_2','parser.py',681),
  ('variable_access -> ID parsed_id_variable_access dims_access','variable_access',3,'p_variable_access','parser.py',690),
  ('parsed_id_variable_access -> <empty>','parsed_id_variable_access',0,'p_parsed_id_variable_access','parser.py',694),
  ('dims_access -> single_dim_access single_dim_access','dims_access',2,'p_dims_access_1','parser.py',704),
  ('dims_access -> single_dim_access','dims_access',1,'p_dims_access_2','parser.py',708),
  ('dims_access -> empty','dims_access',1,'p_dims_access_3','parser.py',712),
  ('single_dim_access -> LBRACKET expr RBRACKET','single_dim_access',3,'p_single_dim_access','parser.py',716),
  ('function_call -> ID parsed_function_call_id LPAREN function_call_params RPAREN SEMI','function_call',6,'p_function_call_1','parser.py',720),
  ('function_call -> ID parsed_function_call_id LPAREN RPAREN SEMI','function_call',5,'p_function_call_2','parser.py',724),
  ('parsed_function_call_id -> <empty>','parsed_function_call_id',0,'p_parsed_function_call_id','parser.py',728),
  ('function_call_params -> function_call_params COMMA single_function_call_param','function_call_params',3,'p_function_call_params_1','parser.py',733),
  ('function_call_params -> single_function_call_param','function_call_params',1,'p_function_call_params_2','parser.py',737),
  ('single_function_call_param -> expr','single_function_call_param',1,'p_single_function_call_param','parser.py',741),
  ('print -> PRINT LPAREN print_params RPAREN SEMI','print',5,'p_print_1','parser.py',745),
  ('print -> PRINT LPAREN RPAREN SEMI','print',4,'p_print_2','parser.py',749),
  ('print_params -> print_params COMMA single_print_param','print_params',3,'p_print_params_1','parser.py',753),
  ('print_params -> single_print_param','print_params',1,'p_print_params_2','parser.py',757),
  ('single_print_param -> expr','single_print_param',1,'p_single_print_param_1','parser.py',761),
  ('conditional -> IF LPAREN expr RPAREN parsed_if_expr instruction_block ELSE parsed_else instruction_block','conditional',9,'p_conditional_1','parser.py',770),
  ('conditional -> IF LPAREN expr RPAREN parsed_if_expr instruction_block','conditional',6,'p_conditional_2','parser.py',779),
  ('parsed_if_expr -> <empty>','parsed_if_expr',0,'p_parsed_if_expr','parser.py',788),
  ('parsed_else -> <empty>','parsed_else',0,'p_parsed_else','parser.py',800),
  ('loop -> while','loop',1,'p_loop_1','parser.py',813),
  ('loop -> for','loop',1,'p_loop_2','parser.py',817),
  ('while -> WHILE parsed_while LPAREN expr parsed_while_expr RPAREN instruction_block','while',7,'p_while','parser.py',821),
  ('parsed_while -> <empty>','parsed_while',0,'p_parsed_while','parser.py',834),
  ('parsed_while_expr -> <empty>','parsed_while_expr',0,'p_parsed_while_expr','parser.py',839),
  ('for -> FROM LPAREN for_index COLON for_limit COLON for_step RPAREN instruction_block','for',9,'p_for_1','parser.py',850),
  ('for -> FROM LPAREN for_index COLON for_limit for_no_step RPAREN instruction_block','for',8,'p_for_2','parser.py',881),
  ('for_index -> ID ASGMT CONST_INT','for_index',3,'p_for_index_1','parser.py',912),
  ('for_index -> ID ASGMT MINUS CONST_INT','for_index',4,'p_for_index_2','parser.py',940),
  ('for_limit -> CONST_INT','for_limit',1,'p_for_limit_1','parser.py',976),
  ('for_limit -> MINUS CONST_INT','for_limit',2,'p_for_limit_2','parser.py',992),
  ('for_no_step -> <empty>','for_no_step',0,'p_for_no_step','parser.py',1016),
  ('for_step -> CONST_INT','for_step',1,'p_for_step_1','parser.py',1053),
  ('for_step -> MINUS CONST_INT','for_step',2,'p_for_step_2','parser.py',1090),
  ('return -> RETURN expr SEMI','return',3,'p_return_1','parser.py',1135),
  ('return -> RETURN SEMI','return',2,'p_return_2','parser.py',1139),
  ('expr -> expr OR and_expr','expr',3,'p_expr_1','parser.py',1143),
  ('expr -> and_expr','expr',1,'p_expr_2','parser.py',1147),
  ('and_expr -> equality_expr AND equality_expr','and_expr',3,'p_and_expr_1','parser.py',1151),
  ('and_expr -> equality_expr','and_expr',1,'p_and_expr_2','parser.py',1155),
  ('equality_expr -> relational_expr EQUAL parsed_equal relational_expr','equality_expr',4,'p_equality_expr_1','parser.py',1159),
  ('parsed_equal -> <empty>','parsed_equal',0,'p_parsed_equal','parser.py',1181),
  ('equality_expr -> relational_expr NEQUAL parsed_nequal relational_expr','equality_expr',4,'p_equality_expr_2','parser.py',1186),
  ('parsed_nequal -> <empty>','parsed_nequal',0,'p_parsed_nequal','parser.py',1208),
  ('equality_expr -> relational_expr','equality_expr',1,'p_equality_expr_3','parser.py',1213),
  ('relational_expr -> additive_expr LTHAN_EQUAL parsed_lthan_equal additive_expr','relational_expr',4,'p_relational_expr_1','parser.py',1217),
  ('parsed_lthan_equal -> <empty>','parsed_lthan_equal',0,'p_parsed_lthan_equal','parser.py',1239),
  ('relational_expr -> additive_expr LTHAN parsed_lthan additive_expr','relational_expr',4,'p_relational_expr_2','parser.py',1244),
  ('parsed_lthan -> <empty>','parsed_lthan',0,'p_parsed_lthan','parser.py',1266),
  ('relational_expr -> additive_expr GTHAN_EQUAL parsed_gthan_equal additive_expr','relational_expr',4,'p_relational_expr_3','parser.py',1271),
  ('parsed_gthan_equal -> <empty>','parsed_gthan_equal',0,'p_parsed_gthan_equal','parser.py',1293),
  ('relational_expr -> additive_expr GTHAN parsed_gthan additive_expr','relational_expr',4,'p_relational_expr_4','parser.py',1298),
  ('parsed_gthan -> <empty>','parsed_gthan',0,'p_parsed_gthan','parser.py',1320),
  ('relational_expr -> additive_expr','relational_expr',1,'p_relational_expr_5','parser.py',1325),
  ('additive_expr -> additive_expr PLUS parsed_plus multiplicative_expr','additive_expr',4,'p_additive_expr_1','parser.py',1329),
  ('parsed_plus -> <empty>','parsed_plus',0,'p_parsed_plus','parser.py',1351),
  ('additive_expr -> additive_expr MINUS parsed_minus multiplicative_expr','additive_expr',4,'p_additive_expr_2','parser.py',1356),
  ('parsed_minus -> <empty>','parsed_minus',0,'p_parsed_minus','parser.py',1378),
  ('additive_expr -> multiplicative_expr','additive_expr',1,'p_additive_expr_3','parser.py',1383),
  ('multiplicative_expr -> multiplicative_expr TIMES parsed_times unary_expr','multiplicative_expr',4,'p_multiplicative_expr_1','parser.py',1387),
  ('parsed_times -> <empty>','parsed_times',0,'p_parsed_times','parser.py',1409),
  ('multiplicative_expr -> multiplicative_expr DIVIDE parsed_divide unary_expr','multiplicative_expr',4,'p_multiplicative_expr_2','parser.py',1414),
  ('parsed_divide -> <empty>','parsed_divide',0,'p_parsed_divide','parser.py',1436),
  ('multiplicative_expr -> multiplicative_expr MODULO parsed_modulo unary_expr','multiplicative_expr',4,'p_multiplicative_expr_3','parser.py',1441),
  ('parsed_modulo -> <empty>','parsed_modulo',0,'p_parsed_modulo','parser.py',1463),
  ('multiplicative_expr -> unary_expr','multiplicative_expr',1,'p_multiplicative_expr_4','parser.py',1468),
  ('unary_expr -> MINUS postfix_expr','unary_expr',2,'p_unary_expr_1','parser.py',1472),
  ('unary_expr -> PLUS postfix_expr','unary_expr',2,'p_unary_expr_2','parser.py',1482),
  ('unary_expr -> NOT postfix_expr','unary_expr',2,'p_unary_expr_3','parser.py',1492),
  ('unary_expr -> postfix_expr','unary_expr',1,'p_unary_expr_4','parser.py',1496),
  ('postfix_expr -> LPAREN expr RPAREN','postfix_expr',3,'p_postfix_expr_1','parser.py',1500),
  ('postfix_expr -> variable_access','postfix_expr',1,'p_postfix_expr_2','parser.py',1504),
  ('postfix_expr -> function_call','postfix_expr',1,'p_postfix_expr_3','parser.py',1508),
  ('postfix_expr -> constant','postfix_expr',1,'p_postfix_expr_4','parser.py',1512),
  ('constant -> CONST_INT','constant',1,'p_constant_1','parser.py',1516),
  ('constant -> CONST_REAL','constant',1,'p_constant_2','parser.py',1531),
  ('constant -> CONST_CHAR','constant',1,'p_constant_3','parser.py',1546),
  ('constant -> CONST_STRING','constant',1,'p_constant_4','parser.py',1561),
  ('constant -> constant_bool','constant',1,'p_constant_5','parser.py',1576),
  ('constant_bool -> TRUE','constant_bool',1,'p_constant_bool_1','parser.py',1591),
  ('constant_bool -> FALSE','constant_bool',1,'p_constant_bool_2','parser.py',1596),
  ('type -> INT','type',1,'p_type_1','parser.py',1601),
  ('type -> REAL','type',1,'p_type_2','parser.py',1606),
  ('type -> CHAR','type',1,'p_type_3','parser.py',1611),
  ('type -> BOOL','type',1,'p_type_4','parser.py',1616),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',1621),
]
