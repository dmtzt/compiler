
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASGMT BOOL CHAR COLON COMMA CONST_CHAR CONST_INT CONST_REAL CONST_STRING DIVIDE ELSE EQUAL FALSE FROM FUNCTION GLOBAL GTHAN GTHAN_EQUAL ID IF INT LBRACE LBRACKET LOCAL LPAREN LTHAN LTHAN_EQUAL MINUS MODULO NEQUAL NOT OR PLUS PRINT RBRACE RBRACKET READ REAL RETURN RPAREN SEMI START TIMES TRUE VARIABLES VOID WHILEprogram : init startinit :start : global_variables_declaration functions_definition entry_point_definitionstart : global_variables_declaration entry_point_definitionstart : functions_definition entry_point_definitionstart : entry_point_definitionglobal_variables_declaration : GLOBAL parsed_global_scope variables_declarationparsed_global_scope :functions_definition : functions_definition single_function_definitionfunctions_definition : single_function_definitionsingle_function_definition : FUNCTION type parsed_function_return_type ID parsed_type_function_id LPAREN function_definition_params RPAREN local_variables_declaration instruction_blocksingle_function_definition : FUNCTION type parsed_function_return_type ID parsed_type_function_id LPAREN function_definition_params RPAREN instruction_blocksingle_function_definition : FUNCTION type parsed_function_return_type ID parsed_type_function_id LPAREN RPAREN local_variables_declaration instruction_blocksingle_function_definition : FUNCTION type parsed_function_return_type ID parsed_type_function_id LPAREN RPAREN instruction_blocksingle_function_definition : FUNCTION VOID parsed_function_void_return_type ID parsed_void_function_id LPAREN function_definition_params RPAREN local_variables_declaration instruction_blocksingle_function_definition : FUNCTION VOID parsed_function_void_return_type ID parsed_void_function_id LPAREN function_definition_params RPAREN instruction_blocksingle_function_definition : FUNCTION VOID parsed_function_void_return_type ID parsed_void_function_id LPAREN RPAREN local_variables_declaration instruction_blocksingle_function_definition : FUNCTION VOID parsed_function_void_return_type ID parsed_void_function_id LPAREN RPAREN instruction_blockparsed_type_function_id :parsed_void_function_id :parsed_function_return_type :parsed_function_void_return_type  :function_definition_params : function_definition_params COMMA single_function_definition_paramfunction_definition_params : single_function_definition_paramsingle_function_definition_param : type IDentry_point_definition : START parsed_main_id LPAREN RPAREN local_variables_declaration instruction_blockentry_point_definition : START parsed_main_id LPAREN RPAREN instruction_blockparsed_main_id :local_variables_declaration : LOCAL variables_declarationvariables_declaration : VARIABLES COLON distinct_type_variables_declarationdistinct_type_variables_declaration : distinct_type_variables_declaration shared_type_variables_declarationdistinct_type_variables_declaration : shared_type_variables_declarationshared_type_variables_declaration : type parsed_type shared_type_variables_declaration_list SEMIparsed_type :shared_type_variables_declaration_list : shared_type_variables_declaration_list COMMA single_variable_declarationshared_type_variables_declaration_list : single_variable_declarationsingle_variable_declaration : variable_id_declaration variable_dim_definition variable_dim_definitionsingle_variable_declaration : variable_id_declaration variable_dim_definitionsingle_variable_declaration : variable_id_declarationvariable_id_declaration : IDvariable_dim_definition : LBRACKET CONST_INT RBRACKETinstruction_block : LBRACE statements RBRACEinstruction_block : LBRACE RBRACEstatements : statements single_statementstatements : single_statementsingle_statement : assignmentsingle_statement : function_call_stmtsingle_statement : printsingle_statement : conditionalsingle_statement : loopsingle_statement : returnassignment : variable_access ASGMT expr SEMIassignment : variable_access ASGMT READ LPAREN RPAREN SEMIvariable_access : ID parsed_id_variable_access dims_accessparsed_id_variable_access :dims_access : single_dim_access single_dim_accessdims_access : single_dim_accessdims_access : emptysingle_dim_access : LBRACKET expr RBRACKETfunction_call_stmt : function_call SEMIfunction_call : ID parsed_function_call_id LPAREN function_call_params RPARENfunction_call : ID parsed_function_call_id LPAREN RPARENparsed_function_call_id :function_call_params : function_call_params COMMA single_function_call_paramfunction_call_params : single_function_call_paramsingle_function_call_param : exprprint : PRINT LPAREN print_params RPAREN SEMIprint : PRINT LPAREN RPAREN SEMIprint_params : print_params COMMA single_print_paramprint_params : single_print_paramsingle_print_param : exprconditional : IF LPAREN expr RPAREN parsed_if_expr instruction_block ELSE parsed_else instruction_blockconditional : IF LPAREN expr RPAREN parsed_if_expr instruction_blockparsed_if_expr :parsed_else :loop : whileloop : forwhile : WHILE parsed_while LPAREN expr parsed_while_expr RPAREN instruction_blockparsed_while :parsed_while_expr :for : FROM LPAREN for_index COLON for_limit COLON for_step RPAREN instruction_blockfor : FROM LPAREN for_index COLON for_limit for_no_step RPAREN instruction_blockfor_index : ID ASGMT CONST_INTfor_index : ID ASGMT MINUS CONST_INTfor_limit : CONST_INTfor_limit : MINUS CONST_INTfor_no_step :for_step : CONST_INTfor_step : MINUS CONST_INTreturn : RETURN expr SEMIreturn : RETURN SEMIexpr : expr OR and_exprexpr : and_exprand_expr : equality_expr AND equality_exprand_expr : equality_exprequality_expr : relational_expr EQUAL parsed_equal relational_exprparsed_equal :equality_expr : relational_expr NEQUAL parsed_nequal relational_exprparsed_nequal :equality_expr : relational_exprrelational_expr : additive_expr LTHAN_EQUAL parsed_lthan_equal additive_exprparsed_lthan_equal :relational_expr : additive_expr LTHAN parsed_lthan additive_exprparsed_lthan :relational_expr : additive_expr GTHAN_EQUAL parsed_gthan_equal additive_exprparsed_gthan_equal :relational_expr : additive_expr GTHAN parsed_gthan additive_exprparsed_gthan :relational_expr : additive_expradditive_expr : additive_expr PLUS parsed_plus multiplicative_exprparsed_plus :additive_expr : additive_expr MINUS parsed_minus multiplicative_exprparsed_minus :additive_expr : multiplicative_exprmultiplicative_expr : multiplicative_expr TIMES parsed_times unary_exprparsed_times :multiplicative_expr : multiplicative_expr DIVIDE parsed_divide unary_exprparsed_divide :multiplicative_expr : multiplicative_expr MODULO parsed_modulo unary_exprparsed_modulo :multiplicative_expr : unary_exprunary_expr : MINUS postfix_exprunary_expr : PLUS postfix_exprunary_expr : NOT postfix_exprunary_expr : postfix_exprpostfix_expr : LPAREN expr RPARENpostfix_expr : variable_accesspostfix_expr : function_callpostfix_expr : constantconstant : CONST_INTconstant : CONST_REALconstant : CONST_CHARconstant : CONST_STRINGconstant : constant_boolconstant_bool : TRUEconstant_bool : FALSEtype : INTtype : REALtype : CHARtype : BOOLempty :'
    
_lr_action_items = {'GLOBAL':([0,2,],[-2,7,]),'START':([0,2,4,5,8,11,14,24,33,34,42,47,71,110,151,154,188,190,192,193,219,220,],[-2,9,9,9,-10,9,-9,-7,-30,-32,-31,-43,-42,-33,-14,-18,-12,-13,-16,-17,-11,-15,]),'FUNCTION':([0,2,4,5,8,11,14,24,33,34,42,47,71,110,151,154,188,190,192,193,219,220,],[-2,10,10,10,-10,10,-9,-7,-30,-32,-31,-43,-42,-33,-14,-18,-12,-13,-16,-17,-11,-15,]),'$end':([1,3,6,12,13,23,37,44,47,71,],[0,-1,-6,-4,-5,-3,-27,-26,-43,-42,]),'VARIABLES':([7,15,38,],[-8,25,25,]),'LPAREN':([9,16,31,32,40,41,57,58,61,62,63,64,73,75,76,83,85,88,89,101,102,115,122,123,124,125,126,127,128,129,130,131,133,134,135,142,143,144,161,166,167,168,169,170,171,172,173,174,175,176,212,],[-28,26,-19,-20,65,66,75,76,89,-63,-79,103,89,89,89,89,89,89,89,143,144,159,89,89,-97,-99,-102,-104,-106,-108,-111,-113,-116,-118,-120,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'VOID':([10,],[18,]),'INT':([10,29,33,34,42,65,66,110,149,],[19,19,19,-32,-31,19,19,-33,19,]),'REAL':([10,29,33,34,42,65,66,110,149,],[20,20,20,-32,-31,20,20,-33,20,]),'CHAR':([10,29,33,34,42,65,66,110,149,],[21,21,21,-32,-31,21,21,-33,21,]),'BOOL':([10,29,33,34,42,65,66,110,149,],[22,22,22,-32,-31,22,22,-33,22,]),'ID':([17,18,19,20,21,22,27,28,35,39,43,46,47,48,49,50,51,52,53,54,59,60,61,71,72,73,74,75,76,78,83,85,88,89,103,104,111,121,122,123,124,125,126,127,128,129,130,131,133,134,135,142,143,144,158,161,162,166,167,168,169,170,171,172,173,174,175,176,196,212,221,222,230,238,239,240,],[-21,-22,-137,-138,-139,-140,31,32,-34,62,70,62,-43,-45,-46,-47,-48,-49,-50,-51,-76,-77,62,-42,-44,62,-60,62,62,-91,62,62,62,62,146,147,70,-90,62,62,-97,-99,-102,-104,-106,-108,-111,-113,-116,-118,-120,62,62,62,-52,62,-68,62,62,62,62,62,62,62,62,62,62,62,-67,62,-53,-73,-78,-82,-72,-81,]),'COLON':([25,145,214,215,217,227,228,],[29,185,225,-85,-83,-86,-84,]),'RPAREN':([26,62,65,66,75,79,80,81,82,84,86,87,90,91,92,93,94,95,96,97,98,99,100,105,107,108,116,118,119,120,132,136,137,138,139,140,141,143,147,159,164,165,177,178,180,181,182,183,184,189,197,199,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,223,226,227,231,232,237,],[30,-55,106,109,117,-93,-95,-100,-109,-114,-121,-125,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-141,148,-24,152,160,-70,-71,163,-123,-122,-124,177,-54,-57,-58,181,-25,195,-92,-94,-126,-56,211,-62,-65,-66,-80,-23,-69,-96,-98,-101,-103,-105,-107,-110,-112,-115,-117,-119,-59,-61,224,-87,-85,-64,234,-86,236,-88,-89,]),'LOCAL':([30,106,109,148,152,],[38,38,38,38,38,]),'LBRACE':([30,33,34,36,42,45,106,109,110,148,150,152,153,163,187,191,198,224,229,234,235,236,],[39,-30,-32,39,-31,-29,39,39,-33,39,39,39,39,-74,39,39,39,39,-75,39,39,39,]),'RBRACE':([39,46,47,48,49,50,51,52,53,54,59,60,71,72,74,78,121,158,162,196,221,222,230,238,239,240,],[47,71,-43,-45,-46,-47,-48,-49,-50,-51,-76,-77,-42,-44,-60,-91,-90,-52,-68,-67,-53,-73,-78,-82,-72,-81,]),'PRINT':([39,46,47,48,49,50,51,52,53,54,59,60,71,72,74,78,121,158,162,196,221,222,230,238,239,240,],[57,57,-43,-45,-46,-47,-48,-49,-50,-51,-76,-77,-42,-44,-60,-91,-90,-52,-68,-67,-53,-73,-78,-82,-72,-81,]),'IF':([39,46,47,48,49,50,51,52,53,54,59,60,71,72,74,78,121,158,162,196,221,222,230,238,239,240,],[58,58,-43,-45,-46,-47,-48,-49,-50,-51,-76,-77,-42,-44,-60,-91,-90,-52,-68,-67,-53,-73,-78,-82,-72,-81,]),'RETURN':([39,46,47,48,49,50,51,52,53,54,59,60,71,72,74,78,121,158,162,196,221,222,230,238,239,240,],[61,61,-43,-45,-46,-47,-48,-49,-50,-51,-76,-77,-42,-44,-60,-91,-90,-52,-68,-67,-53,-73,-78,-82,-72,-81,]),'WHILE':([39,46,47,48,49,50,51,52,53,54,59,60,71,72,74,78,121,158,162,196,221,222,230,238,239,240,],[63,63,-43,-45,-46,-47,-48,-49,-50,-51,-76,-77,-42,-44,-60,-91,-90,-52,-68,-67,-53,-73,-78,-82,-72,-81,]),'FROM':([39,46,47,48,49,50,51,52,53,54,59,60,71,72,74,78,121,158,162,196,221,222,230,238,239,240,],[64,64,-43,-45,-46,-47,-48,-49,-50,-51,-76,-77,-42,-44,-60,-91,-90,-52,-68,-67,-53,-73,-78,-82,-72,-81,]),'ELSE':([47,71,222,],[-43,-42,229,]),'ASGMT':([55,62,100,139,140,141,146,178,210,],[73,-55,-141,-54,-57,-58,186,-56,-59,]),'SEMI':([56,61,62,67,68,69,70,77,79,80,81,82,84,86,87,90,91,92,93,94,95,96,97,98,99,100,112,114,117,132,136,137,139,140,141,155,156,160,164,165,177,178,181,194,195,199,200,201,202,203,204,205,206,207,208,209,210,211,],[74,78,-55,110,-36,-39,-40,121,-93,-95,-100,-109,-114,-121,-125,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-141,-38,158,162,-123,-122,-124,-54,-57,-58,-35,-37,196,-92,-94,-126,-56,-62,-41,221,-96,-98,-101,-103,-105,-107,-110,-112,-115,-117,-119,-59,-61,]),'MINUS':([61,62,73,75,76,82,84,86,87,89,90,91,92,93,94,95,96,97,98,99,100,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,161,166,167,168,169,170,171,172,173,174,175,176,177,178,181,185,186,201,202,203,204,205,206,207,208,209,210,211,212,225,],[85,-55,85,85,85,131,-114,-121,-125,85,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-141,85,85,-97,-99,-102,-104,-106,-108,-111,-113,-123,-116,-118,-120,-122,-124,-54,-57,-58,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,-126,-56,-62,216,218,131,131,131,131,-110,-112,-115,-117,-119,-59,-61,85,233,]),'PLUS':([61,62,73,75,76,82,84,86,87,89,90,91,92,93,94,95,96,97,98,99,100,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,161,166,167,168,169,170,171,172,173,174,175,176,177,178,181,201,202,203,204,205,206,207,208,209,210,211,212,],[83,-55,83,83,83,130,-114,-121,-125,83,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-141,83,83,-97,-99,-102,-104,-106,-108,-111,-113,-123,-116,-118,-120,-122,-124,-54,-57,-58,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-126,-56,-62,130,130,130,130,-110,-112,-115,-117,-119,-59,-61,83,]),'NOT':([61,73,75,76,89,122,123,124,125,126,127,128,129,130,131,133,134,135,142,143,144,161,166,167,168,169,170,171,172,173,174,175,176,212,],[88,88,88,88,88,88,88,-97,-99,-102,-104,-106,-108,-111,-113,-116,-118,-120,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'CONST_INT':([61,73,75,76,83,85,88,89,113,122,123,124,125,126,127,128,129,130,131,133,134,135,142,143,144,161,166,167,168,169,170,171,172,173,174,175,176,185,186,212,216,218,225,233,],[93,93,93,93,93,93,93,93,157,93,93,-97,-99,-102,-104,-106,-108,-111,-113,-116,-118,-120,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,215,217,93,227,228,232,237,]),'CONST_REAL':([61,73,75,76,83,85,88,89,122,123,124,125,126,127,128,129,130,131,133,134,135,142,143,144,161,166,167,168,169,170,171,172,173,174,175,176,212,],[94,94,94,94,94,94,94,94,94,94,-97,-99,-102,-104,-106,-108,-111,-113,-116,-118,-120,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'CONST_CHAR':([61,73,75,76,83,85,88,89,122,123,124,125,126,127,128,129,130,131,133,134,135,142,143,144,161,166,167,168,169,170,171,172,173,174,175,176,212,],[95,95,95,95,95,95,95,95,95,95,-97,-99,-102,-104,-106,-108,-111,-113,-116,-118,-120,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'CONST_STRING':([61,73,75,76,83,85,88,89,122,123,124,125,126,127,128,129,130,131,133,134,135,142,143,144,161,166,167,168,169,170,171,172,173,174,175,176,212,],[96,96,96,96,96,96,96,96,96,96,-97,-99,-102,-104,-106,-108,-111,-113,-116,-118,-120,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'TRUE':([61,73,75,76,83,85,88,89,122,123,124,125,126,127,128,129,130,131,133,134,135,142,143,144,161,166,167,168,169,170,171,172,173,174,175,176,212,],[98,98,98,98,98,98,98,98,98,98,-97,-99,-102,-104,-106,-108,-111,-113,-116,-118,-120,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'FALSE':([61,73,75,76,83,85,88,89,122,123,124,125,126,127,128,129,130,131,133,134,135,142,143,144,161,166,167,168,169,170,171,172,173,174,175,176,212,],[99,99,99,99,99,99,99,99,99,99,-97,-99,-102,-104,-106,-108,-111,-113,-116,-118,-120,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'LBRACKET':([62,69,70,100,112,140,194,210,],[-55,113,-40,142,113,142,-41,-59,]),'TIMES':([62,84,86,87,90,91,92,93,94,95,96,97,98,99,100,132,136,137,139,140,141,177,178,181,205,206,207,208,209,210,211,],[-55,133,-121,-125,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-141,-123,-122,-124,-54,-57,-58,-126,-56,-62,133,133,-115,-117,-119,-59,-61,]),'DIVIDE':([62,84,86,87,90,91,92,93,94,95,96,97,98,99,100,132,136,137,139,140,141,177,178,181,205,206,207,208,209,210,211,],[-55,134,-121,-125,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-141,-123,-122,-124,-54,-57,-58,-126,-56,-62,134,134,-115,-117,-119,-59,-61,]),'MODULO':([62,84,86,87,90,91,92,93,94,95,96,97,98,99,100,132,136,137,139,140,141,177,178,181,205,206,207,208,209,210,211,],[-55,135,-121,-125,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-141,-123,-122,-124,-54,-57,-58,-126,-56,-62,135,135,-115,-117,-119,-59,-61,]),'LTHAN_EQUAL':([62,82,84,86,87,90,91,92,93,94,95,96,97,98,99,100,132,136,137,139,140,141,177,178,181,205,206,207,208,209,210,211,],[-55,126,-114,-121,-125,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-141,-123,-122,-124,-54,-57,-58,-126,-56,-62,-110,-112,-115,-117,-119,-59,-61,]),'LTHAN':([62,82,84,86,87,90,91,92,93,94,95,96,97,98,99,100,132,136,137,139,140,141,177,178,181,205,206,207,208,209,210,211,],[-55,127,-114,-121,-125,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-141,-123,-122,-124,-54,-57,-58,-126,-56,-62,-110,-112,-115,-117,-119,-59,-61,]),'GTHAN_EQUAL':([62,82,84,86,87,90,91,92,93,94,95,96,97,98,99,100,132,136,137,139,140,141,177,178,181,205,206,207,208,209,210,211,],[-55,128,-114,-121,-125,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-141,-123,-122,-124,-54,-57,-58,-126,-56,-62,-110,-112,-115,-117,-119,-59,-61,]),'GTHAN':([62,82,84,86,87,90,91,92,93,94,95,96,97,98,99,100,132,136,137,139,140,141,177,178,181,205,206,207,208,209,210,211,],[-55,129,-114,-121,-125,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-141,-123,-122,-124,-54,-57,-58,-126,-56,-62,-110,-112,-115,-117,-119,-59,-61,]),'EQUAL':([62,81,82,84,86,87,90,91,92,93,94,95,96,97,98,99,100,132,136,137,139,140,141,177,178,181,201,202,203,204,205,206,207,208,209,210,211,],[-55,124,-109,-114,-121,-125,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-141,-123,-122,-124,-54,-57,-58,-126,-56,-62,-101,-103,-105,-107,-110,-112,-115,-117,-119,-59,-61,]),'NEQUAL':([62,81,82,84,86,87,90,91,92,93,94,95,96,97,98,99,100,132,136,137,139,140,141,177,178,181,201,202,203,204,205,206,207,208,209,210,211,],[-55,125,-109,-114,-121,-125,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-141,-123,-122,-124,-54,-57,-58,-126,-56,-62,-101,-103,-105,-107,-110,-112,-115,-117,-119,-59,-61,]),'AND':([62,80,81,82,84,86,87,90,91,92,93,94,95,96,97,98,99,100,132,136,137,139,140,141,177,178,181,199,200,201,202,203,204,205,206,207,208,209,210,211,],[-55,123,-100,-109,-114,-121,-125,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-141,-123,-122,-124,-54,-57,-58,-126,-56,-62,-96,-98,-101,-103,-105,-107,-110,-112,-115,-117,-119,-59,-61,]),'OR':([62,77,79,80,81,82,84,86,87,90,91,92,93,94,95,96,97,98,99,100,114,119,120,132,136,137,138,139,140,141,164,165,177,178,179,181,183,184,199,200,201,202,203,204,205,206,207,208,209,210,211,],[-55,122,-93,-95,-100,-109,-114,-121,-125,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-141,122,122,122,-123,-122,-124,122,-54,-57,-58,-92,-94,-126,-56,122,-62,122,122,-96,-98,-101,-103,-105,-107,-110,-112,-115,-117,-119,-59,-61,]),'COMMA':([62,67,68,69,70,79,80,81,82,84,86,87,90,91,92,93,94,95,96,97,98,99,100,105,107,108,112,116,118,119,132,136,137,139,140,141,147,155,156,164,165,177,178,180,181,182,183,189,194,197,199,200,201,202,203,204,205,206,207,208,209,210,211,223,],[-55,111,-36,-39,-40,-93,-95,-100,-109,-114,-121,-125,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-141,149,-24,149,-38,161,-70,-71,-123,-122,-124,-54,-57,-58,-25,-35,-37,-92,-94,-126,-56,212,-62,-65,-66,-23,-41,-69,-96,-98,-101,-103,-105,-107,-110,-112,-115,-117,-119,-59,-61,-64,]),'RBRACKET':([62,79,80,81,82,84,86,87,90,91,92,93,94,95,96,97,98,99,100,132,136,137,139,140,141,157,164,165,177,178,179,181,199,200,201,202,203,204,205,206,207,208,209,210,211,],[-55,-93,-95,-100,-109,-114,-121,-125,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-141,-123,-122,-124,-54,-57,-58,194,-92,-94,-126,-56,210,-62,-96,-98,-101,-103,-105,-107,-110,-112,-115,-117,-119,-59,-61,]),'READ':([73,],[115,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'init':([0,],[2,]),'start':([2,],[3,]),'global_variables_declaration':([2,],[4,]),'functions_definition':([2,4,],[5,11,]),'entry_point_definition':([2,4,5,11,],[6,12,13,23,]),'single_function_definition':([2,4,5,11,],[8,8,14,14,]),'parsed_global_scope':([7,],[15,]),'parsed_main_id':([9,],[16,]),'type':([10,29,33,65,66,149,],[17,35,35,104,104,104,]),'variables_declaration':([15,38,],[24,45,]),'parsed_function_return_type':([17,],[27,]),'parsed_function_void_return_type':([18,],[28,]),'distinct_type_variables_declaration':([29,],[33,]),'shared_type_variables_declaration':([29,33,],[34,42,]),'local_variables_declaration':([30,106,109,148,152,],[36,150,153,187,191,]),'instruction_block':([30,36,106,109,148,150,152,153,187,191,198,224,234,235,236,],[37,44,151,154,188,190,192,193,219,220,222,230,238,239,240,]),'parsed_type_function_id':([31,],[40,]),'parsed_void_function_id':([32,],[41,]),'parsed_type':([35,],[43,]),'statements':([39,],[46,]),'single_statement':([39,46,],[48,72,]),'assignment':([39,46,],[49,49,]),'function_call_stmt':([39,46,],[50,50,]),'print':([39,46,],[51,51,]),'conditional':([39,46,],[52,52,]),'loop':([39,46,],[53,53,]),'return':([39,46,],[54,54,]),'variable_access':([39,46,61,73,75,76,83,85,88,89,122,123,142,143,144,161,166,167,168,169,170,171,172,173,174,175,176,212,],[55,55,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'function_call':([39,46,61,73,75,76,83,85,88,89,122,123,142,143,144,161,166,167,168,169,170,171,172,173,174,175,176,212,],[56,56,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'while':([39,46,],[59,59,]),'for':([39,46,],[60,60,]),'shared_type_variables_declaration_list':([43,],[67,]),'single_variable_declaration':([43,111,],[68,155,]),'variable_id_declaration':([43,111,],[69,69,]),'expr':([61,73,75,76,89,142,143,144,161,212,],[77,114,119,120,138,179,183,184,119,183,]),'and_expr':([61,73,75,76,89,122,142,143,144,161,212,],[79,79,79,79,79,164,79,79,79,79,79,]),'equality_expr':([61,73,75,76,89,122,123,142,143,144,161,212,],[80,80,80,80,80,80,165,80,80,80,80,80,]),'relational_expr':([61,73,75,76,89,122,123,142,143,144,161,166,167,212,],[81,81,81,81,81,81,81,81,81,81,81,199,200,81,]),'additive_expr':([61,73,75,76,89,122,123,142,143,144,161,166,167,168,169,170,171,212,],[82,82,82,82,82,82,82,82,82,82,82,82,82,201,202,203,204,82,]),'multiplicative_expr':([61,73,75,76,89,122,123,142,143,144,161,166,167,168,169,170,171,172,173,212,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,205,206,84,]),'unary_expr':([61,73,75,76,89,122,123,142,143,144,161,166,167,168,169,170,171,172,173,174,175,176,212,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,207,208,209,86,]),'postfix_expr':([61,73,75,76,83,85,88,89,122,123,142,143,144,161,166,167,168,169,170,171,172,173,174,175,176,212,],[87,87,87,87,132,136,137,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'constant':([61,73,75,76,83,85,88,89,122,123,142,143,144,161,166,167,168,169,170,171,172,173,174,175,176,212,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'constant_bool':([61,73,75,76,83,85,88,89,122,123,142,143,144,161,166,167,168,169,170,171,172,173,174,175,176,212,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'parsed_id_variable_access':([62,],[100,]),'parsed_function_call_id':([62,],[101,]),'parsed_while':([63,],[102,]),'function_definition_params':([65,66,],[105,108,]),'single_function_definition_param':([65,66,149,],[107,107,189,]),'variable_dim_definition':([69,112,],[112,156,]),'print_params':([75,],[116,]),'single_print_param':([75,161,],[118,197,]),'dims_access':([100,],[139,]),'single_dim_access':([100,140,],[140,178,]),'empty':([100,],[141,]),'for_index':([103,],[145,]),'parsed_equal':([124,],[166,]),'parsed_nequal':([125,],[167,]),'parsed_lthan_equal':([126,],[168,]),'parsed_lthan':([127,],[169,]),'parsed_gthan_equal':([128,],[170,]),'parsed_gthan':([129,],[171,]),'parsed_plus':([130,],[172,]),'parsed_minus':([131,],[173,]),'parsed_times':([133,],[174,]),'parsed_divide':([134,],[175,]),'parsed_modulo':([135,],[176,]),'function_call_params':([143,],[180,]),'single_function_call_param':([143,212,],[182,223,]),'parsed_if_expr':([163,],[198,]),'parsed_while_expr':([184,],[213,]),'for_limit':([185,],[214,]),'for_no_step':([214,],[226,]),'for_step':([225,],[231,]),'parsed_else':([229,],[235,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> init start','program',2,'p_program','parser.py',512),
  ('init -> <empty>','init',0,'p_init','parser.py',522),
  ('start -> global_variables_declaration functions_definition entry_point_definition','start',3,'p_start_1','parser.py',531),
  ('start -> global_variables_declaration entry_point_definition','start',2,'p_start_2','parser.py',535),
  ('start -> functions_definition entry_point_definition','start',2,'p_start_3','parser.py',539),
  ('start -> entry_point_definition','start',1,'p_start_4','parser.py',543),
  ('global_variables_declaration -> GLOBAL parsed_global_scope variables_declaration','global_variables_declaration',3,'p_global_variables_declaration','parser.py',547),
  ('parsed_global_scope -> <empty>','parsed_global_scope',0,'p_parsed_global_scope','parser.py',551),
  ('functions_definition -> functions_definition single_function_definition','functions_definition',2,'p_functions_definition_1','parser.py',557),
  ('functions_definition -> single_function_definition','functions_definition',1,'p_functions_definition_2','parser.py',564),
  ('single_function_definition -> FUNCTION type parsed_function_return_type ID parsed_type_function_id LPAREN function_definition_params RPAREN local_variables_declaration instruction_block','single_function_definition',10,'p_single_function_definition_primitive_type_1','parser.py',571),
  ('single_function_definition -> FUNCTION type parsed_function_return_type ID parsed_type_function_id LPAREN function_definition_params RPAREN instruction_block','single_function_definition',9,'p_single_function_definition_primitive_type_2','parser.py',575),
  ('single_function_definition -> FUNCTION type parsed_function_return_type ID parsed_type_function_id LPAREN RPAREN local_variables_declaration instruction_block','single_function_definition',9,'p_single_function_definition_primitive_type_3','parser.py',579),
  ('single_function_definition -> FUNCTION type parsed_function_return_type ID parsed_type_function_id LPAREN RPAREN instruction_block','single_function_definition',8,'p_single_function_definition_primitive_type_4','parser.py',583),
  ('single_function_definition -> FUNCTION VOID parsed_function_void_return_type ID parsed_void_function_id LPAREN function_definition_params RPAREN local_variables_declaration instruction_block','single_function_definition',10,'p_single_function_definition_void_type_1','parser.py',587),
  ('single_function_definition -> FUNCTION VOID parsed_function_void_return_type ID parsed_void_function_id LPAREN function_definition_params RPAREN instruction_block','single_function_definition',9,'p_single_function_definition_void_type_2','parser.py',591),
  ('single_function_definition -> FUNCTION VOID parsed_function_void_return_type ID parsed_void_function_id LPAREN RPAREN local_variables_declaration instruction_block','single_function_definition',9,'p_single_function_definition_void_type_3','parser.py',595),
  ('single_function_definition -> FUNCTION VOID parsed_function_void_return_type ID parsed_void_function_id LPAREN RPAREN instruction_block','single_function_definition',8,'p_single_function_definition_void_type_4','parser.py',599),
  ('parsed_type_function_id -> <empty>','parsed_type_function_id',0,'p_parsed_type_function_id','parser.py',603),
  ('parsed_void_function_id -> <empty>','parsed_void_function_id',0,'p_parsed_void_function_id','parser.py',621),
  ('parsed_function_return_type -> <empty>','parsed_function_return_type',0,'p_parsed_function_return_type','parser.py',634),
  ('parsed_function_void_return_type -> <empty>','parsed_function_void_return_type',0,'p_parsed_function_void_return_type','parser.py',640),
  ('function_definition_params -> function_definition_params COMMA single_function_definition_param','function_definition_params',3,'p_function_definition_params_1','parser.py',646),
  ('function_definition_params -> single_function_definition_param','function_definition_params',1,'p_function_definition_params_2','parser.py',650),
  ('single_function_definition_param -> type ID','single_function_definition_param',2,'p_single_function_definition_param','parser.py',654),
  ('entry_point_definition -> START parsed_main_id LPAREN RPAREN local_variables_declaration instruction_block','entry_point_definition',6,'p_entry_point_definition_1','parser.py',671),
  ('entry_point_definition -> START parsed_main_id LPAREN RPAREN instruction_block','entry_point_definition',5,'p_entry_point_definition_2','parser.py',675),
  ('parsed_main_id -> <empty>','parsed_main_id',0,'p_parsed_main_id','parser.py',679),
  ('local_variables_declaration -> LOCAL variables_declaration','local_variables_declaration',2,'p_local_variables_declaration','parser.py',689),
  ('variables_declaration -> VARIABLES COLON distinct_type_variables_declaration','variables_declaration',3,'p_variables_declaration','parser.py',693),
  ('distinct_type_variables_declaration -> distinct_type_variables_declaration shared_type_variables_declaration','distinct_type_variables_declaration',2,'p_distinct_type_variables_declaration_1','parser.py',697),
  ('distinct_type_variables_declaration -> shared_type_variables_declaration','distinct_type_variables_declaration',1,'p_distinct_type_variables_declaration_2','parser.py',701),
  ('shared_type_variables_declaration -> type parsed_type shared_type_variables_declaration_list SEMI','shared_type_variables_declaration',4,'p_shared_type_variables_declaration','parser.py',705),
  ('parsed_type -> <empty>','parsed_type',0,'p_parsed_type','parser.py',709),
  ('shared_type_variables_declaration_list -> shared_type_variables_declaration_list COMMA single_variable_declaration','shared_type_variables_declaration_list',3,'p_shared_type_variables_declaration_list_1','parser.py',715),
  ('shared_type_variables_declaration_list -> single_variable_declaration','shared_type_variables_declaration_list',1,'p_shared_type_variables_declaration_list_2','parser.py',719),
  ('single_variable_declaration -> variable_id_declaration variable_dim_definition variable_dim_definition','single_variable_declaration',3,'p_single_variable_declaration_1','parser.py',723),
  ('single_variable_declaration -> variable_id_declaration variable_dim_definition','single_variable_declaration',2,'p_single_variable_declaration_2','parser.py',743),
  ('single_variable_declaration -> variable_id_declaration','single_variable_declaration',1,'p_single_variable_declaration_3','parser.py',760),
  ('variable_id_declaration -> ID','variable_id_declaration',1,'p_variable_id_declaration','parser.py',774),
  ('variable_dim_definition -> LBRACKET CONST_INT RBRACKET','variable_dim_definition',3,'p_variable_dim_definition','parser.py',798),
  ('instruction_block -> LBRACE statements RBRACE','instruction_block',3,'p_instruction_block_1','parser.py',809),
  ('instruction_block -> LBRACE RBRACE','instruction_block',2,'p_instruction_block_2','parser.py',813),
  ('statements -> statements single_statement','statements',2,'p_statements_1','parser.py',817),
  ('statements -> single_statement','statements',1,'p_statements_2','parser.py',821),
  ('single_statement -> assignment','single_statement',1,'p_single_statement_1','parser.py',825),
  ('single_statement -> function_call_stmt','single_statement',1,'p_single_statement_2','parser.py',829),
  ('single_statement -> print','single_statement',1,'p_single_statement_3','parser.py',833),
  ('single_statement -> conditional','single_statement',1,'p_single_statement_4','parser.py',837),
  ('single_statement -> loop','single_statement',1,'p_single_statement_5','parser.py',841),
  ('single_statement -> return','single_statement',1,'p_single_statement_6','parser.py',845),
  ('assignment -> variable_access ASGMT expr SEMI','assignment',4,'p_assignment_1','parser.py',849),
  ('assignment -> variable_access ASGMT READ LPAREN RPAREN SEMI','assignment',6,'p_assignment_2','parser.py',865),
  ('variable_access -> ID parsed_id_variable_access dims_access','variable_access',3,'p_variable_access','parser.py',874),
  ('parsed_id_variable_access -> <empty>','parsed_id_variable_access',0,'p_parsed_id_variable_access','parser.py',878),
  ('dims_access -> single_dim_access single_dim_access','dims_access',2,'p_dims_access_1','parser.py',891),
  ('dims_access -> single_dim_access','dims_access',1,'p_dims_access_2','parser.py',895),
  ('dims_access -> empty','dims_access',1,'p_dims_access_3','parser.py',899),
  ('single_dim_access -> LBRACKET expr RBRACKET','single_dim_access',3,'p_single_dim_access','parser.py',903),
  ('function_call_stmt -> function_call SEMI','function_call_stmt',2,'p_function_call_stmt','parser.py',907),
  ('function_call -> ID parsed_function_call_id LPAREN function_call_params RPAREN','function_call',5,'p_function_call_1','parser.py',911),
  ('function_call -> ID parsed_function_call_id LPAREN RPAREN','function_call',4,'p_function_call_2','parser.py',938),
  ('parsed_function_call_id -> <empty>','parsed_function_call_id',0,'p_parsed_function_call_id','parser.py',965),
  ('function_call_params -> function_call_params COMMA single_function_call_param','function_call_params',3,'p_function_call_params_1','parser.py',976),
  ('function_call_params -> single_function_call_param','function_call_params',1,'p_function_call_params_2','parser.py',980),
  ('single_function_call_param -> expr','single_function_call_param',1,'p_single_function_call_param','parser.py',984),
  ('print -> PRINT LPAREN print_params RPAREN SEMI','print',5,'p_print_1','parser.py',1008),
  ('print -> PRINT LPAREN RPAREN SEMI','print',4,'p_print_2','parser.py',1012),
  ('print_params -> print_params COMMA single_print_param','print_params',3,'p_print_params_1','parser.py',1016),
  ('print_params -> single_print_param','print_params',1,'p_print_params_2','parser.py',1020),
  ('single_print_param -> expr','single_print_param',1,'p_single_print_param_1','parser.py',1024),
  ('conditional -> IF LPAREN expr RPAREN parsed_if_expr instruction_block ELSE parsed_else instruction_block','conditional',9,'p_conditional_1','parser.py',1033),
  ('conditional -> IF LPAREN expr RPAREN parsed_if_expr instruction_block','conditional',6,'p_conditional_2','parser.py',1041),
  ('parsed_if_expr -> <empty>','parsed_if_expr',0,'p_parsed_if_expr','parser.py',1049),
  ('parsed_else -> <empty>','parsed_else',0,'p_parsed_else','parser.py',1061),
  ('loop -> while','loop',1,'p_loop_1','parser.py',1073),
  ('loop -> for','loop',1,'p_loop_2','parser.py',1077),
  ('while -> WHILE parsed_while LPAREN expr parsed_while_expr RPAREN instruction_block','while',7,'p_while','parser.py',1081),
  ('parsed_while -> <empty>','parsed_while',0,'p_parsed_while','parser.py',1094),
  ('parsed_while_expr -> <empty>','parsed_while_expr',0,'p_parsed_while_expr','parser.py',1099),
  ('for -> FROM LPAREN for_index COLON for_limit COLON for_step RPAREN instruction_block','for',9,'p_for_1','parser.py',1110),
  ('for -> FROM LPAREN for_index COLON for_limit for_no_step RPAREN instruction_block','for',8,'p_for_2','parser.py',1141),
  ('for_index -> ID ASGMT CONST_INT','for_index',3,'p_for_index_1','parser.py',1172),
  ('for_index -> ID ASGMT MINUS CONST_INT','for_index',4,'p_for_index_2','parser.py',1200),
  ('for_limit -> CONST_INT','for_limit',1,'p_for_limit_1','parser.py',1236),
  ('for_limit -> MINUS CONST_INT','for_limit',2,'p_for_limit_2','parser.py',1252),
  ('for_no_step -> <empty>','for_no_step',0,'p_for_no_step','parser.py',1276),
  ('for_step -> CONST_INT','for_step',1,'p_for_step_1','parser.py',1313),
  ('for_step -> MINUS CONST_INT','for_step',2,'p_for_step_2','parser.py',1350),
  ('return -> RETURN expr SEMI','return',3,'p_return_1','parser.py',1395),
  ('return -> RETURN SEMI','return',2,'p_return_2','parser.py',1413),
  ('expr -> expr OR and_expr','expr',3,'p_expr_1','parser.py',1428),
  ('expr -> and_expr','expr',1,'p_expr_2','parser.py',1432),
  ('and_expr -> equality_expr AND equality_expr','and_expr',3,'p_and_expr_1','parser.py',1436),
  ('and_expr -> equality_expr','and_expr',1,'p_and_expr_2','parser.py',1440),
  ('equality_expr -> relational_expr EQUAL parsed_equal relational_expr','equality_expr',4,'p_equality_expr_1','parser.py',1444),
  ('parsed_equal -> <empty>','parsed_equal',0,'p_parsed_equal','parser.py',1466),
  ('equality_expr -> relational_expr NEQUAL parsed_nequal relational_expr','equality_expr',4,'p_equality_expr_2','parser.py',1471),
  ('parsed_nequal -> <empty>','parsed_nequal',0,'p_parsed_nequal','parser.py',1493),
  ('equality_expr -> relational_expr','equality_expr',1,'p_equality_expr_3','parser.py',1498),
  ('relational_expr -> additive_expr LTHAN_EQUAL parsed_lthan_equal additive_expr','relational_expr',4,'p_relational_expr_1','parser.py',1502),
  ('parsed_lthan_equal -> <empty>','parsed_lthan_equal',0,'p_parsed_lthan_equal','parser.py',1524),
  ('relational_expr -> additive_expr LTHAN parsed_lthan additive_expr','relational_expr',4,'p_relational_expr_2','parser.py',1529),
  ('parsed_lthan -> <empty>','parsed_lthan',0,'p_parsed_lthan','parser.py',1551),
  ('relational_expr -> additive_expr GTHAN_EQUAL parsed_gthan_equal additive_expr','relational_expr',4,'p_relational_expr_3','parser.py',1556),
  ('parsed_gthan_equal -> <empty>','parsed_gthan_equal',0,'p_parsed_gthan_equal','parser.py',1578),
  ('relational_expr -> additive_expr GTHAN parsed_gthan additive_expr','relational_expr',4,'p_relational_expr_4','parser.py',1583),
  ('parsed_gthan -> <empty>','parsed_gthan',0,'p_parsed_gthan','parser.py',1605),
  ('relational_expr -> additive_expr','relational_expr',1,'p_relational_expr_5','parser.py',1610),
  ('additive_expr -> additive_expr PLUS parsed_plus multiplicative_expr','additive_expr',4,'p_additive_expr_1','parser.py',1614),
  ('parsed_plus -> <empty>','parsed_plus',0,'p_parsed_plus','parser.py',1636),
  ('additive_expr -> additive_expr MINUS parsed_minus multiplicative_expr','additive_expr',4,'p_additive_expr_2','parser.py',1641),
  ('parsed_minus -> <empty>','parsed_minus',0,'p_parsed_minus','parser.py',1663),
  ('additive_expr -> multiplicative_expr','additive_expr',1,'p_additive_expr_3','parser.py',1668),
  ('multiplicative_expr -> multiplicative_expr TIMES parsed_times unary_expr','multiplicative_expr',4,'p_multiplicative_expr_1','parser.py',1672),
  ('parsed_times -> <empty>','parsed_times',0,'p_parsed_times','parser.py',1694),
  ('multiplicative_expr -> multiplicative_expr DIVIDE parsed_divide unary_expr','multiplicative_expr',4,'p_multiplicative_expr_2','parser.py',1699),
  ('parsed_divide -> <empty>','parsed_divide',0,'p_parsed_divide','parser.py',1721),
  ('multiplicative_expr -> multiplicative_expr MODULO parsed_modulo unary_expr','multiplicative_expr',4,'p_multiplicative_expr_3','parser.py',1726),
  ('parsed_modulo -> <empty>','parsed_modulo',0,'p_parsed_modulo','parser.py',1748),
  ('multiplicative_expr -> unary_expr','multiplicative_expr',1,'p_multiplicative_expr_4','parser.py',1753),
  ('unary_expr -> MINUS postfix_expr','unary_expr',2,'p_unary_expr_1','parser.py',1757),
  ('unary_expr -> PLUS postfix_expr','unary_expr',2,'p_unary_expr_2','parser.py',1767),
  ('unary_expr -> NOT postfix_expr','unary_expr',2,'p_unary_expr_3','parser.py',1777),
  ('unary_expr -> postfix_expr','unary_expr',1,'p_unary_expr_4','parser.py',1781),
  ('postfix_expr -> LPAREN expr RPAREN','postfix_expr',3,'p_postfix_expr_1','parser.py',1785),
  ('postfix_expr -> variable_access','postfix_expr',1,'p_postfix_expr_2','parser.py',1789),
  ('postfix_expr -> function_call','postfix_expr',1,'p_postfix_expr_3','parser.py',1793),
  ('postfix_expr -> constant','postfix_expr',1,'p_postfix_expr_4','parser.py',1797),
  ('constant -> CONST_INT','constant',1,'p_constant_1','parser.py',1801),
  ('constant -> CONST_REAL','constant',1,'p_constant_2','parser.py',1816),
  ('constant -> CONST_CHAR','constant',1,'p_constant_3','parser.py',1831),
  ('constant -> CONST_STRING','constant',1,'p_constant_4','parser.py',1846),
  ('constant -> constant_bool','constant',1,'p_constant_5','parser.py',1861),
  ('constant_bool -> TRUE','constant_bool',1,'p_constant_bool_1','parser.py',1876),
  ('constant_bool -> FALSE','constant_bool',1,'p_constant_bool_2','parser.py',1881),
  ('type -> INT','type',1,'p_type_1','parser.py',1886),
  ('type -> REAL','type',1,'p_type_2','parser.py',1891),
  ('type -> CHAR','type',1,'p_type_3','parser.py',1896),
  ('type -> BOOL','type',1,'p_type_4','parser.py',1901),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',1906),
]
