
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASGMT BOOL CHAR COLON COMMA CONST_CHAR CONST_INT CONST_REAL CONST_STRING DIVIDE ELSE EQUAL FALSE FROM FUNCTION GLOBAL GTHAN GTHAN_EQUAL ID IF INT LBRACE LBRACKET LOCAL LPAREN LTHAN LTHAN_EQUAL MINUS MODULO NEQUAL NOT OR PLUS PRINT RBRACE RBRACKET READ REAL RETURN RPAREN SEMI START TIMES TRUE VARIABLES VOID WHILEprogram : init startinit :start : global_variables_declaration functions_definition entry_point_definitionstart : global_variables_declaration entry_point_definitionstart : functions_definition entry_point_definitionstart : entry_point_definitionglobal_variables_declaration : GLOBAL parsed_global_scope variables_declarationparsed_global_scope :functions_definition : functions_definition single_function_definitionfunctions_definition : single_function_definitionsingle_function_definition : FUNCTION type parsed_function_return_type ID parsed_function_id LPAREN function_definition_params RPAREN local_variables_declaration instruction_blocksingle_function_definition : FUNCTION type parsed_function_return_type ID parsed_function_id LPAREN function_definition_params RPAREN instruction_blocksingle_function_definition : FUNCTION type parsed_function_return_type ID parsed_function_id LPAREN RPAREN local_variables_declaration instruction_blocksingle_function_definition : FUNCTION type parsed_function_return_type ID parsed_function_id LPAREN RPAREN instruction_blocksingle_function_definition : FUNCTION VOID parsed_function_void_return_type ID parsed_function_id LPAREN function_definition_params RPAREN local_variables_declaration instruction_blocksingle_function_definition : FUNCTION VOID parsed_function_void_return_type ID parsed_function_id LPAREN function_definition_params RPAREN instruction_blocksingle_function_definition : FUNCTION VOID parsed_function_void_return_type ID parsed_function_id LPAREN RPAREN local_variables_declaration instruction_blocksingle_function_definition : FUNCTION VOID parsed_function_void_return_type ID parsed_function_id LPAREN RPAREN instruction_blockparsed_function_id :parsed_function_return_type :parsed_function_void_return_type  :function_definition_params : function_definition_params COMMA single_function_definition_paramfunction_definition_params : single_function_definition_paramsingle_function_definition_param : type IDentry_point_definition : START parsed_main_id LPAREN RPAREN local_variables_declaration instruction_blockentry_point_definition : START parsed_main_id LPAREN RPAREN instruction_blockparsed_main_id :local_variables_declaration : LOCAL variables_declarationvariables_declaration : VARIABLES COLON distinct_type_variables_declarationdistinct_type_variables_declaration : distinct_type_variables_declaration shared_type_variables_declarationdistinct_type_variables_declaration : shared_type_variables_declarationshared_type_variables_declaration : type parsed_type shared_type_variables_declaration_list SEMIparsed_type :shared_type_variables_declaration_list : shared_type_variables_declaration_list COMMA single_variable_declarationshared_type_variables_declaration_list : single_variable_declarationsingle_variable_declaration : ID dim_definition dim_definitionsingle_variable_declaration : ID dim_definitionsingle_variable_declaration : IDdim_definition : LBRACKET CONST_INT RBRACKETinstruction_block : LBRACE statements RBRACEinstruction_block : LBRACE RBRACEstatements : statements single_statementstatements : single_statementsingle_statement : assignmentsingle_statement : function_callsingle_statement : readsingle_statement : printsingle_statement : conditionalsingle_statement : loopsingle_statement : returnassignment : variable_access ASGMT expr SEMIassignment : variable_access ASGMT readvariable_access : ID dim_access dim_accessvariable_access : ID dim_accessvariable_access : IDdim_access : LBRACKET expr RBRACKETfunction_call : ID LPAREN function_call_params RPAREN SEMIfunction_call : ID LPAREN RPAREN SEMIfunction_call_params : function_call_params COMMA single_function_call_paramfunction_call_params : single_function_call_paramsingle_function_call_param : exprread : READ LPAREN RPAREN SEMIprint : PRINT LPAREN print_params RPAREN SEMIprint : PRINT LPAREN RPAREN SEMIprint_params : print_params COMMA single_print_paramprint_params : single_print_paramsingle_print_param : exprsingle_print_param : CONST_STRINGconditional : IF LPAREN expr RPAREN instruction_block ELSE instruction_blockconditional : IF LPAREN expr RPAREN instruction_blockloop : whileloop : forwhile : WHILE LPAREN expr RPAREN instruction_blockfor : FROM LPAREN ID ASGMT CONST_INT COLON CONST_INT COLON CONST_INT RPAREN instruction_blockfor : FROM LPAREN ID ASGMT CONST_INT COLON CONST_INT RPAREN instruction_blockreturn : RETURN expr SEMIreturn : RETURN SEMIexpr : expr OR and_exprexpr : and_exprand_expr : equality_expr AND equality_exprand_expr : equality_exprequality_expr : relational_expr EQUAL relational_exprequality_expr : relational_expr NEQUAL relational_exprequality_expr : relational_exprrelational_expr : additive_expr LTHAN_EQUAL additive_exprrelational_expr : additive_expr LTHAN additive_exprrelational_expr : additive_expr GTHAN_EQUAL additive_exprrelational_expr : additive_expr GTHAN additive_exprrelational_expr : additive_expradditive_expr : multiplicative_expr PLUS multiplicative_expradditive_expr : multiplicative_expr MINUS multiplicative_expradditive_expr : multiplicative_exprmultiplicative_expr : unary_expr TIMES unary_exprmultiplicative_expr : unary_expr DIVIDE unary_exprmultiplicative_expr : unary_expr MODULO unary_exprmultiplicative_expr : unary_exprunary_expr : MINUS postfix_exprunary_expr : PLUS postfix_exprunary_expr : NOT postfix_exprunary_expr : postfix_exprpostfix_expr : LPAREN expr RPARENpostfix_expr : variable_accesspostfix_expr : function_callpostfix_expr : constantconstant : CONST_INTconstant : CONST_REALconstant : CONST_CHARconstant : constant_boolconstant_bool : TRUEconstant_bool : FALSEtype : INTtype : REALtype : CHARtype : BOOL'
    
_lr_action_items = {'GLOBAL':([0,2,],[-2,7,]),'START':([0,2,4,5,8,11,14,24,33,34,42,47,71,111,154,157,188,190,192,193,202,203,],[-2,9,9,9,-10,9,-9,-7,-29,-31,-30,-41,-40,-32,-14,-18,-12,-13,-16,-17,-11,-15,]),'FUNCTION':([0,2,4,5,8,11,14,24,33,34,42,47,71,111,154,157,188,190,192,193,202,203,],[-2,10,10,10,-10,10,-9,-7,-29,-31,-30,-41,-40,-32,-14,-18,-12,-13,-16,-17,-11,-15,]),'$end':([1,3,6,12,13,23,37,44,47,71,],[0,-1,-6,-4,-5,-3,-26,-25,-41,-40,]),'VARIABLES':([7,15,38,],[-8,25,25,]),'LPAREN':([9,16,31,32,40,41,57,58,59,60,63,64,65,73,74,76,78,79,87,88,91,92,96,103,131,132,133,134,135,136,137,138,139,140,143,144,145,163,168,],[-27,26,-19,-19,66,67,74,77,78,79,92,103,104,92,92,92,92,92,92,92,92,92,74,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'VOID':([10,],[18,]),'INT':([10,29,33,34,42,66,67,111,152,],[19,19,19,-31,-30,19,19,-32,19,]),'REAL':([10,29,33,34,42,66,67,111,152,],[20,20,20,-31,-30,20,20,-32,20,]),'CHAR':([10,29,33,34,42,66,67,111,152,],[21,21,21,-31,-30,21,21,-32,21,]),'BOOL':([10,29,33,34,42,66,67,111,152,],[22,22,22,-31,-30,22,22,-32,22,]),'ID':([17,18,19,20,21,22,27,28,35,39,43,46,47,48,49,50,51,52,53,54,55,61,62,63,71,72,73,74,76,78,79,81,87,88,91,92,103,104,105,112,116,130,131,132,133,134,135,136,137,138,139,140,143,144,145,161,163,164,166,168,169,195,197,199,200,206,211,213,],[-20,-21,-111,-112,-113,-114,31,32,-33,57,70,57,-41,-43,-44,-45,-46,-47,-48,-49,-50,-71,-72,96,-40,-42,96,96,96,96,96,-77,96,96,96,96,96,149,150,70,-52,-76,96,96,96,96,96,96,96,96,96,96,96,96,96,-51,96,-58,-62,96,-64,-57,-63,-70,-73,-69,-75,-74,]),'COLON':([25,201,207,],[29,205,208,]),'RPAREN':([26,66,67,74,75,77,78,82,83,84,85,86,89,90,93,94,95,96,97,98,99,100,101,102,106,108,109,117,119,120,121,124,126,127,128,129,141,142,146,147,148,150,164,165,171,172,173,174,175,176,177,178,179,180,181,182,183,184,189,195,196,198,207,210,],[30,107,110,118,-54,123,125,-79,-81,-84,-89,-92,-96,-100,-102,-103,-104,-55,-105,-106,-107,-108,-109,-110,151,-23,155,162,-60,-61,-53,167,-66,-67,-68,170,-98,-97,-99,184,185,-24,-58,-56,-78,-80,-82,-83,-85,-86,-87,-88,-90,-91,-93,-94,-95,-101,-22,-57,-59,-65,209,212,]),'LOCAL':([30,107,110,151,155,],[38,38,38,38,38,]),'LBRACE':([30,33,34,36,42,45,107,110,111,151,153,155,156,170,185,187,191,204,209,212,],[39,-29,-31,39,-30,-28,39,39,-32,39,39,39,39,39,39,39,39,39,39,39,]),'RBRACE':([39,46,47,48,49,50,51,52,53,54,55,61,62,71,72,81,116,130,161,164,166,169,195,197,199,200,206,211,213,],[47,71,-41,-43,-44,-45,-46,-47,-48,-49,-50,-71,-72,-40,-42,-77,-52,-76,-51,-58,-62,-64,-57,-63,-70,-73,-69,-75,-74,]),'READ':([39,46,47,48,49,50,51,52,53,54,55,61,62,71,72,73,81,116,130,161,164,166,169,195,197,199,200,206,211,213,],[58,58,-41,-43,-44,-45,-46,-47,-48,-49,-50,-71,-72,-40,-42,58,-77,-52,-76,-51,-58,-62,-64,-57,-63,-70,-73,-69,-75,-74,]),'PRINT':([39,46,47,48,49,50,51,52,53,54,55,61,62,71,72,81,116,130,161,164,166,169,195,197,199,200,206,211,213,],[59,59,-41,-43,-44,-45,-46,-47,-48,-49,-50,-71,-72,-40,-42,-77,-52,-76,-51,-58,-62,-64,-57,-63,-70,-73,-69,-75,-74,]),'IF':([39,46,47,48,49,50,51,52,53,54,55,61,62,71,72,81,116,130,161,164,166,169,195,197,199,200,206,211,213,],[60,60,-41,-43,-44,-45,-46,-47,-48,-49,-50,-71,-72,-40,-42,-77,-52,-76,-51,-58,-62,-64,-57,-63,-70,-73,-69,-75,-74,]),'RETURN':([39,46,47,48,49,50,51,52,53,54,55,61,62,71,72,81,116,130,161,164,166,169,195,197,199,200,206,211,213,],[63,63,-41,-43,-44,-45,-46,-47,-48,-49,-50,-71,-72,-40,-42,-77,-52,-76,-51,-58,-62,-64,-57,-63,-70,-73,-69,-75,-74,]),'WHILE':([39,46,47,48,49,50,51,52,53,54,55,61,62,71,72,81,116,130,161,164,166,169,195,197,199,200,206,211,213,],[64,64,-41,-43,-44,-45,-46,-47,-48,-49,-50,-71,-72,-40,-42,-77,-52,-76,-51,-58,-62,-64,-57,-63,-70,-73,-69,-75,-74,]),'FROM':([39,46,47,48,49,50,51,52,53,54,55,61,62,71,72,81,116,130,161,164,166,169,195,197,199,200,206,211,213,],[65,65,-41,-43,-44,-45,-46,-47,-48,-49,-50,-71,-72,-40,-42,-77,-52,-76,-51,-58,-62,-64,-57,-63,-70,-73,-69,-75,-74,]),'ELSE':([47,71,199,],[-41,-40,204,]),'ASGMT':([56,57,75,121,149,165,],[73,-55,-54,-53,186,-56,]),'LBRACKET':([57,70,75,96,113,165,194,],[76,114,76,76,114,-56,-39,]),'SEMI':([63,68,69,70,75,80,82,83,84,85,86,89,90,93,94,95,96,97,98,99,100,101,102,113,115,118,121,123,125,141,142,146,158,159,162,164,165,167,171,172,173,174,175,176,177,178,179,180,181,182,183,184,194,195,],[81,111,-35,-38,-54,130,-79,-81,-84,-89,-92,-96,-100,-102,-103,-104,-55,-105,-106,-107,-108,-109,-110,-37,161,164,-53,166,169,-98,-97,-99,-34,-36,195,-58,-56,197,-78,-80,-82,-83,-85,-86,-87,-88,-90,-91,-93,-94,-95,-101,-39,-57,]),'MINUS':([63,73,74,75,76,78,79,86,89,90,92,93,94,95,96,97,98,99,100,101,102,103,121,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,163,164,165,168,181,182,183,184,195,],[88,88,88,-54,88,88,88,140,-96,-100,88,-102,-103,-104,-55,-105,-106,-107,-108,-109,-110,88,-53,88,88,88,88,88,88,88,88,88,88,-98,-97,88,88,88,-99,88,-58,-56,88,-93,-94,-95,-101,-57,]),'PLUS':([63,73,74,75,76,78,79,86,89,90,92,93,94,95,96,97,98,99,100,101,102,103,121,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,163,164,165,168,181,182,183,184,195,],[87,87,87,-54,87,87,87,139,-96,-100,87,-102,-103,-104,-55,-105,-106,-107,-108,-109,-110,87,-53,87,87,87,87,87,87,87,87,87,87,-98,-97,87,87,87,-99,87,-58,-56,87,-93,-94,-95,-101,-57,]),'NOT':([63,73,74,76,78,79,92,103,131,132,133,134,135,136,137,138,139,140,143,144,145,163,168,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'CONST_INT':([63,73,74,76,78,79,87,88,91,92,103,114,131,132,133,134,135,136,137,138,139,140,143,144,145,163,168,186,205,208,],[97,97,97,97,97,97,97,97,97,97,97,160,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,201,207,210,]),'CONST_REAL':([63,73,74,76,78,79,87,88,91,92,103,131,132,133,134,135,136,137,138,139,140,143,144,145,163,168,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'CONST_CHAR':([63,73,74,76,78,79,87,88,91,92,103,131,132,133,134,135,136,137,138,139,140,143,144,145,163,168,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'TRUE':([63,73,74,76,78,79,87,88,91,92,103,131,132,133,134,135,136,137,138,139,140,143,144,145,163,168,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'FALSE':([63,73,74,76,78,79,87,88,91,92,103,131,132,133,134,135,136,137,138,139,140,143,144,145,163,168,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'COMMA':([68,69,70,75,82,83,84,85,86,89,90,93,94,95,96,97,98,99,100,101,102,106,108,109,113,117,119,120,121,124,126,127,128,141,142,146,150,158,159,164,165,171,172,173,174,175,176,177,178,179,180,181,182,183,184,189,194,195,196,198,],[112,-35,-38,-54,-79,-81,-84,-89,-92,-96,-100,-102,-103,-104,-55,-105,-106,-107,-108,-109,-110,152,-23,152,-37,163,-60,-61,-53,168,-66,-67,-68,-98,-97,-99,-24,-34,-36,-58,-56,-78,-80,-82,-83,-85,-86,-87,-88,-90,-91,-93,-94,-95,-101,-22,-39,-57,-59,-65,]),'TIMES':([75,89,90,93,94,95,96,97,98,99,100,101,102,121,141,142,146,164,165,184,195,],[-54,143,-100,-102,-103,-104,-55,-105,-106,-107,-108,-109,-110,-53,-98,-97,-99,-58,-56,-101,-57,]),'DIVIDE':([75,89,90,93,94,95,96,97,98,99,100,101,102,121,141,142,146,164,165,184,195,],[-54,144,-100,-102,-103,-104,-55,-105,-106,-107,-108,-109,-110,-53,-98,-97,-99,-58,-56,-101,-57,]),'MODULO':([75,89,90,93,94,95,96,97,98,99,100,101,102,121,141,142,146,164,165,184,195,],[-54,145,-100,-102,-103,-104,-55,-105,-106,-107,-108,-109,-110,-53,-98,-97,-99,-58,-56,-101,-57,]),'LTHAN_EQUAL':([75,85,86,89,90,93,94,95,96,97,98,99,100,101,102,121,141,142,146,164,165,179,180,181,182,183,184,195,],[-54,135,-92,-96,-100,-102,-103,-104,-55,-105,-106,-107,-108,-109,-110,-53,-98,-97,-99,-58,-56,-90,-91,-93,-94,-95,-101,-57,]),'LTHAN':([75,85,86,89,90,93,94,95,96,97,98,99,100,101,102,121,141,142,146,164,165,179,180,181,182,183,184,195,],[-54,136,-92,-96,-100,-102,-103,-104,-55,-105,-106,-107,-108,-109,-110,-53,-98,-97,-99,-58,-56,-90,-91,-93,-94,-95,-101,-57,]),'GTHAN_EQUAL':([75,85,86,89,90,93,94,95,96,97,98,99,100,101,102,121,141,142,146,164,165,179,180,181,182,183,184,195,],[-54,137,-92,-96,-100,-102,-103,-104,-55,-105,-106,-107,-108,-109,-110,-53,-98,-97,-99,-58,-56,-90,-91,-93,-94,-95,-101,-57,]),'GTHAN':([75,85,86,89,90,93,94,95,96,97,98,99,100,101,102,121,141,142,146,164,165,179,180,181,182,183,184,195,],[-54,138,-92,-96,-100,-102,-103,-104,-55,-105,-106,-107,-108,-109,-110,-53,-98,-97,-99,-58,-56,-90,-91,-93,-94,-95,-101,-57,]),'EQUAL':([75,84,85,86,89,90,93,94,95,96,97,98,99,100,101,102,121,141,142,146,164,165,175,176,177,178,179,180,181,182,183,184,195,],[-54,133,-89,-92,-96,-100,-102,-103,-104,-55,-105,-106,-107,-108,-109,-110,-53,-98,-97,-99,-58,-56,-85,-86,-87,-88,-90,-91,-93,-94,-95,-101,-57,]),'NEQUAL':([75,84,85,86,89,90,93,94,95,96,97,98,99,100,101,102,121,141,142,146,164,165,175,176,177,178,179,180,181,182,183,184,195,],[-54,134,-89,-92,-96,-100,-102,-103,-104,-55,-105,-106,-107,-108,-109,-110,-53,-98,-97,-99,-58,-56,-85,-86,-87,-88,-90,-91,-93,-94,-95,-101,-57,]),'AND':([75,83,84,85,86,89,90,93,94,95,96,97,98,99,100,101,102,121,141,142,146,164,165,173,174,175,176,177,178,179,180,181,182,183,184,195,],[-54,132,-84,-89,-92,-96,-100,-102,-103,-104,-55,-105,-106,-107,-108,-109,-110,-53,-98,-97,-99,-58,-56,-82,-83,-85,-86,-87,-88,-90,-91,-93,-94,-95,-101,-57,]),'OR':([75,80,82,83,84,85,86,89,90,93,94,95,96,97,98,99,100,101,102,115,120,121,122,127,129,141,142,146,147,148,164,165,171,172,173,174,175,176,177,178,179,180,181,182,183,184,195,],[-54,131,-79,-81,-84,-89,-92,-96,-100,-102,-103,-104,-55,-105,-106,-107,-108,-109,-110,131,131,-53,131,131,131,-98,-97,-99,131,131,-58,-56,-78,-80,-82,-83,-85,-86,-87,-88,-90,-91,-93,-94,-95,-101,-57,]),'RBRACKET':([75,82,83,84,85,86,89,90,93,94,95,96,97,98,99,100,101,102,121,122,141,142,146,160,164,165,171,172,173,174,175,176,177,178,179,180,181,182,183,184,195,],[-54,-79,-81,-84,-89,-92,-96,-100,-102,-103,-104,-55,-105,-106,-107,-108,-109,-110,-53,165,-98,-97,-99,194,-58,-56,-78,-80,-82,-83,-85,-86,-87,-88,-90,-91,-93,-94,-95,-101,-57,]),'CONST_STRING':([78,168,],[128,128,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'init':([0,],[2,]),'start':([2,],[3,]),'global_variables_declaration':([2,],[4,]),'functions_definition':([2,4,],[5,11,]),'entry_point_definition':([2,4,5,11,],[6,12,13,23,]),'single_function_definition':([2,4,5,11,],[8,8,14,14,]),'parsed_global_scope':([7,],[15,]),'parsed_main_id':([9,],[16,]),'type':([10,29,33,66,67,152,],[17,35,35,105,105,105,]),'variables_declaration':([15,38,],[24,45,]),'parsed_function_return_type':([17,],[27,]),'parsed_function_void_return_type':([18,],[28,]),'distinct_type_variables_declaration':([29,],[33,]),'shared_type_variables_declaration':([29,33,],[34,42,]),'local_variables_declaration':([30,107,110,151,155,],[36,153,156,187,191,]),'instruction_block':([30,36,107,110,151,153,155,156,170,185,187,191,204,209,212,],[37,44,154,157,188,190,192,193,199,200,202,203,206,211,213,]),'parsed_function_id':([31,32,],[40,41,]),'parsed_type':([35,],[43,]),'statements':([39,],[46,]),'single_statement':([39,46,],[48,72,]),'assignment':([39,46,],[49,49,]),'function_call':([39,46,63,73,74,76,78,79,87,88,91,92,103,131,132,133,134,135,136,137,138,139,140,143,144,145,163,168,],[50,50,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'read':([39,46,73,],[51,51,116,]),'print':([39,46,],[52,52,]),'conditional':([39,46,],[53,53,]),'loop':([39,46,],[54,54,]),'return':([39,46,],[55,55,]),'variable_access':([39,46,63,73,74,76,78,79,87,88,91,92,103,131,132,133,134,135,136,137,138,139,140,143,144,145,163,168,],[56,56,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'while':([39,46,],[61,61,]),'for':([39,46,],[62,62,]),'shared_type_variables_declaration_list':([43,],[68,]),'single_variable_declaration':([43,112,],[69,158,]),'dim_access':([57,75,96,],[75,121,75,]),'expr':([63,73,74,76,78,79,92,103,163,168,],[80,115,120,122,127,129,147,148,120,127,]),'and_expr':([63,73,74,76,78,79,92,103,131,163,168,],[82,82,82,82,82,82,82,82,171,82,82,]),'equality_expr':([63,73,74,76,78,79,92,103,131,132,163,168,],[83,83,83,83,83,83,83,83,83,172,83,83,]),'relational_expr':([63,73,74,76,78,79,92,103,131,132,133,134,163,168,],[84,84,84,84,84,84,84,84,84,84,173,174,84,84,]),'additive_expr':([63,73,74,76,78,79,92,103,131,132,133,134,135,136,137,138,163,168,],[85,85,85,85,85,85,85,85,85,85,85,85,175,176,177,178,85,85,]),'multiplicative_expr':([63,73,74,76,78,79,92,103,131,132,133,134,135,136,137,138,139,140,163,168,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,179,180,86,86,]),'unary_expr':([63,73,74,76,78,79,92,103,131,132,133,134,135,136,137,138,139,140,143,144,145,163,168,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,181,182,183,89,89,]),'postfix_expr':([63,73,74,76,78,79,87,88,91,92,103,131,132,133,134,135,136,137,138,139,140,143,144,145,163,168,],[90,90,90,90,90,90,141,142,146,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'constant':([63,73,74,76,78,79,87,88,91,92,103,131,132,133,134,135,136,137,138,139,140,143,144,145,163,168,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'constant_bool':([63,73,74,76,78,79,87,88,91,92,103,131,132,133,134,135,136,137,138,139,140,143,144,145,163,168,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'function_definition_params':([66,67,],[106,109,]),'single_function_definition_param':([66,67,152,],[108,108,189,]),'dim_definition':([70,113,],[113,159,]),'function_call_params':([74,],[117,]),'single_function_call_param':([74,163,],[119,196,]),'print_params':([78,],[124,]),'single_print_param':([78,168,],[126,198,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> init start','program',2,'p_program','parser.py',504),
  ('init -> <empty>','init',0,'p_init','parser.py',509),
  ('start -> global_variables_declaration functions_definition entry_point_definition','start',3,'p_start_1','parser.py',514),
  ('start -> global_variables_declaration entry_point_definition','start',2,'p_start_2','parser.py',518),
  ('start -> functions_definition entry_point_definition','start',2,'p_start_3','parser.py',522),
  ('start -> entry_point_definition','start',1,'p_start_4','parser.py',526),
  ('global_variables_declaration -> GLOBAL parsed_global_scope variables_declaration','global_variables_declaration',3,'p_global_variables_declaration','parser.py',530),
  ('parsed_global_scope -> <empty>','parsed_global_scope',0,'p_parsed_global_scope','parser.py',534),
  ('functions_definition -> functions_definition single_function_definition','functions_definition',2,'p_functions_definition_1','parser.py',539),
  ('functions_definition -> single_function_definition','functions_definition',1,'p_functions_definition_2','parser.py',543),
  ('single_function_definition -> FUNCTION type parsed_function_return_type ID parsed_function_id LPAREN function_definition_params RPAREN local_variables_declaration instruction_block','single_function_definition',10,'p_single_function_definition_primitive_type_1','parser.py',547),
  ('single_function_definition -> FUNCTION type parsed_function_return_type ID parsed_function_id LPAREN function_definition_params RPAREN instruction_block','single_function_definition',9,'p_single_function_definition_primitive_type_2','parser.py',551),
  ('single_function_definition -> FUNCTION type parsed_function_return_type ID parsed_function_id LPAREN RPAREN local_variables_declaration instruction_block','single_function_definition',9,'p_single_function_definition_primitive_type_3','parser.py',555),
  ('single_function_definition -> FUNCTION type parsed_function_return_type ID parsed_function_id LPAREN RPAREN instruction_block','single_function_definition',8,'p_single_function_definition_primitive_type_4','parser.py',559),
  ('single_function_definition -> FUNCTION VOID parsed_function_void_return_type ID parsed_function_id LPAREN function_definition_params RPAREN local_variables_declaration instruction_block','single_function_definition',10,'p_single_function_definition_void_type_1','parser.py',563),
  ('single_function_definition -> FUNCTION VOID parsed_function_void_return_type ID parsed_function_id LPAREN function_definition_params RPAREN instruction_block','single_function_definition',9,'p_single_function_definition_void_type_2','parser.py',567),
  ('single_function_definition -> FUNCTION VOID parsed_function_void_return_type ID parsed_function_id LPAREN RPAREN local_variables_declaration instruction_block','single_function_definition',9,'p_single_function_definition_void_type_3','parser.py',571),
  ('single_function_definition -> FUNCTION VOID parsed_function_void_return_type ID parsed_function_id LPAREN RPAREN instruction_block','single_function_definition',8,'p_single_function_definition_void_type_4','parser.py',575),
  ('parsed_function_id -> <empty>','parsed_function_id',0,'p_parsed_function_id','parser.py',579),
  ('parsed_function_return_type -> <empty>','parsed_function_return_type',0,'p_parsed_function_return_type','parser.py',591),
  ('parsed_function_void_return_type -> <empty>','parsed_function_void_return_type',0,'p_parsed_function_void_return_type','parser.py',597),
  ('function_definition_params -> function_definition_params COMMA single_function_definition_param','function_definition_params',3,'p_function_definition_params_1','parser.py',603),
  ('function_definition_params -> single_function_definition_param','function_definition_params',1,'p_function_definition_params_2','parser.py',607),
  ('single_function_definition_param -> type ID','single_function_definition_param',2,'p_single_function_definition_param','parser.py',611),
  ('entry_point_definition -> START parsed_main_id LPAREN RPAREN local_variables_declaration instruction_block','entry_point_definition',6,'p_entry_point_definition_1','parser.py',626),
  ('entry_point_definition -> START parsed_main_id LPAREN RPAREN instruction_block','entry_point_definition',5,'p_entry_point_definition_2','parser.py',630),
  ('parsed_main_id -> <empty>','parsed_main_id',0,'p_parsed_main_id','parser.py',634),
  ('local_variables_declaration -> LOCAL variables_declaration','local_variables_declaration',2,'p_local_variables_declaration','parser.py',639),
  ('variables_declaration -> VARIABLES COLON distinct_type_variables_declaration','variables_declaration',3,'p_variables_declaration','parser.py',643),
  ('distinct_type_variables_declaration -> distinct_type_variables_declaration shared_type_variables_declaration','distinct_type_variables_declaration',2,'p_distinct_type_variables_declaration_1','parser.py',647),
  ('distinct_type_variables_declaration -> shared_type_variables_declaration','distinct_type_variables_declaration',1,'p_distinct_type_variables_declaration_2','parser.py',651),
  ('shared_type_variables_declaration -> type parsed_type shared_type_variables_declaration_list SEMI','shared_type_variables_declaration',4,'p_shared_type_variables_declaration','parser.py',655),
  ('parsed_type -> <empty>','parsed_type',0,'p_parsed_type','parser.py',659),
  ('shared_type_variables_declaration_list -> shared_type_variables_declaration_list COMMA single_variable_declaration','shared_type_variables_declaration_list',3,'p_shared_type_variables_declaration_list_1','parser.py',665),
  ('shared_type_variables_declaration_list -> single_variable_declaration','shared_type_variables_declaration_list',1,'p_shared_type_variables_declaration_list_2','parser.py',669),
  ('single_variable_declaration -> ID dim_definition dim_definition','single_variable_declaration',3,'p_single_variable_declaration_1','parser.py',673),
  ('single_variable_declaration -> ID dim_definition','single_variable_declaration',2,'p_single_variable_declaration_2','parser.py',677),
  ('single_variable_declaration -> ID','single_variable_declaration',1,'p_single_variable_declaration_3','parser.py',681),
  ('dim_definition -> LBRACKET CONST_INT RBRACKET','dim_definition',3,'p_dim_definition','parser.py',696),
  ('instruction_block -> LBRACE statements RBRACE','instruction_block',3,'p_instruction_block_1','parser.py',700),
  ('instruction_block -> LBRACE RBRACE','instruction_block',2,'p_instruction_block_2','parser.py',704),
  ('statements -> statements single_statement','statements',2,'p_statements_1','parser.py',708),
  ('statements -> single_statement','statements',1,'p_statements_2','parser.py',712),
  ('single_statement -> assignment','single_statement',1,'p_single_statement_1','parser.py',716),
  ('single_statement -> function_call','single_statement',1,'p_single_statement_2','parser.py',720),
  ('single_statement -> read','single_statement',1,'p_single_statement_3','parser.py',724),
  ('single_statement -> print','single_statement',1,'p_single_statement_4','parser.py',728),
  ('single_statement -> conditional','single_statement',1,'p_single_statement_5','parser.py',732),
  ('single_statement -> loop','single_statement',1,'p_single_statement_6','parser.py',736),
  ('single_statement -> return','single_statement',1,'p_single_statement_7','parser.py',740),
  ('assignment -> variable_access ASGMT expr SEMI','assignment',4,'p_assignment_1','parser.py',744),
  ('assignment -> variable_access ASGMT read','assignment',3,'p_assignment_2','parser.py',748),
  ('variable_access -> ID dim_access dim_access','variable_access',3,'p_variable_access_1','parser.py',752),
  ('variable_access -> ID dim_access','variable_access',2,'p_variable_access_2','parser.py',756),
  ('variable_access -> ID','variable_access',1,'p_variable_access_3','parser.py',760),
  ('dim_access -> LBRACKET expr RBRACKET','dim_access',3,'p_dim_access','parser.py',764),
  ('function_call -> ID LPAREN function_call_params RPAREN SEMI','function_call',5,'p_function_call_1','parser.py',768),
  ('function_call -> ID LPAREN RPAREN SEMI','function_call',4,'p_function_call_2','parser.py',772),
  ('function_call_params -> function_call_params COMMA single_function_call_param','function_call_params',3,'p_function_call_params_1','parser.py',776),
  ('function_call_params -> single_function_call_param','function_call_params',1,'p_function_call_params_2','parser.py',780),
  ('single_function_call_param -> expr','single_function_call_param',1,'p_single_function_call_param','parser.py',784),
  ('read -> READ LPAREN RPAREN SEMI','read',4,'p_read','parser.py',788),
  ('print -> PRINT LPAREN print_params RPAREN SEMI','print',5,'p_print_1','parser.py',792),
  ('print -> PRINT LPAREN RPAREN SEMI','print',4,'p_print_2','parser.py',796),
  ('print_params -> print_params COMMA single_print_param','print_params',3,'p_print_params_1','parser.py',800),
  ('print_params -> single_print_param','print_params',1,'p_print_params_2','parser.py',804),
  ('single_print_param -> expr','single_print_param',1,'p_single_print_param_1','parser.py',808),
  ('single_print_param -> CONST_STRING','single_print_param',1,'p_single_print_param_2','parser.py',812),
  ('conditional -> IF LPAREN expr RPAREN instruction_block ELSE instruction_block','conditional',7,'p_conditional_1','parser.py',816),
  ('conditional -> IF LPAREN expr RPAREN instruction_block','conditional',5,'p_conditional_2','parser.py',820),
  ('loop -> while','loop',1,'p_loop_1','parser.py',824),
  ('loop -> for','loop',1,'p_loop_2','parser.py',828),
  ('while -> WHILE LPAREN expr RPAREN instruction_block','while',5,'p_while','parser.py',832),
  ('for -> FROM LPAREN ID ASGMT CONST_INT COLON CONST_INT COLON CONST_INT RPAREN instruction_block','for',11,'p_for_1','parser.py',836),
  ('for -> FROM LPAREN ID ASGMT CONST_INT COLON CONST_INT RPAREN instruction_block','for',9,'p_for_2','parser.py',840),
  ('return -> RETURN expr SEMI','return',3,'p_return_1','parser.py',844),
  ('return -> RETURN SEMI','return',2,'p_return_2','parser.py',848),
  ('expr -> expr OR and_expr','expr',3,'p_expr_1','parser.py',852),
  ('expr -> and_expr','expr',1,'p_expr_2','parser.py',856),
  ('and_expr -> equality_expr AND equality_expr','and_expr',3,'p_and_expr_1','parser.py',860),
  ('and_expr -> equality_expr','and_expr',1,'p_and_expr_2','parser.py',864),
  ('equality_expr -> relational_expr EQUAL relational_expr','equality_expr',3,'p_equality_expr_1','parser.py',868),
  ('equality_expr -> relational_expr NEQUAL relational_expr','equality_expr',3,'p_equality_expr_2','parser.py',872),
  ('equality_expr -> relational_expr','equality_expr',1,'p_equality_expr_3','parser.py',876),
  ('relational_expr -> additive_expr LTHAN_EQUAL additive_expr','relational_expr',3,'p_relational_expr_1','parser.py',880),
  ('relational_expr -> additive_expr LTHAN additive_expr','relational_expr',3,'p_relational_expr_2','parser.py',884),
  ('relational_expr -> additive_expr GTHAN_EQUAL additive_expr','relational_expr',3,'p_relational_expr_3','parser.py',888),
  ('relational_expr -> additive_expr GTHAN additive_expr','relational_expr',3,'p_relational_expr_4','parser.py',892),
  ('relational_expr -> additive_expr','relational_expr',1,'p_relational_expr_5','parser.py',896),
  ('additive_expr -> multiplicative_expr PLUS multiplicative_expr','additive_expr',3,'p_additive_expr_1','parser.py',900),
  ('additive_expr -> multiplicative_expr MINUS multiplicative_expr','additive_expr',3,'p_additive_expr_2','parser.py',904),
  ('additive_expr -> multiplicative_expr','additive_expr',1,'p_additive_expr_3','parser.py',908),
  ('multiplicative_expr -> unary_expr TIMES unary_expr','multiplicative_expr',3,'p_multiplicative_expr_1','parser.py',912),
  ('multiplicative_expr -> unary_expr DIVIDE unary_expr','multiplicative_expr',3,'p_multiplicative_expr_2','parser.py',916),
  ('multiplicative_expr -> unary_expr MODULO unary_expr','multiplicative_expr',3,'p_multiplicative_expr_3','parser.py',920),
  ('multiplicative_expr -> unary_expr','multiplicative_expr',1,'p_multiplicative_expr_4','parser.py',924),
  ('unary_expr -> MINUS postfix_expr','unary_expr',2,'p_unary_expr_1','parser.py',928),
  ('unary_expr -> PLUS postfix_expr','unary_expr',2,'p_unary_expr_2','parser.py',932),
  ('unary_expr -> NOT postfix_expr','unary_expr',2,'p_unary_expr_3','parser.py',936),
  ('unary_expr -> postfix_expr','unary_expr',1,'p_unary_expr_4','parser.py',940),
  ('postfix_expr -> LPAREN expr RPAREN','postfix_expr',3,'p_postfix_expr_1','parser.py',944),
  ('postfix_expr -> variable_access','postfix_expr',1,'p_postfix_expr_2','parser.py',948),
  ('postfix_expr -> function_call','postfix_expr',1,'p_postfix_expr_3','parser.py',952),
  ('postfix_expr -> constant','postfix_expr',1,'p_postfix_expr_4','parser.py',956),
  ('constant -> CONST_INT','constant',1,'p_constant_1','parser.py',960),
  ('constant -> CONST_REAL','constant',1,'p_constant_2','parser.py',964),
  ('constant -> CONST_CHAR','constant',1,'p_constant_3','parser.py',968),
  ('constant -> constant_bool','constant',1,'p_constant_4','parser.py',972),
  ('constant_bool -> TRUE','constant_bool',1,'p_constant_bool_1','parser.py',976),
  ('constant_bool -> FALSE','constant_bool',1,'p_constant_bool_2','parser.py',980),
  ('type -> INT','type',1,'p_type_1','parser.py',984),
  ('type -> REAL','type',1,'p_type_2','parser.py',989),
  ('type -> CHAR','type',1,'p_type_3','parser.py',994),
  ('type -> BOOL','type',1,'p_type_4','parser.py',999),
]
