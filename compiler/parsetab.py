
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASGMT BOOL CHAR COLON COMMA CONST_CHAR CONST_INT CONST_REAL CONST_STRING DIVIDE ELSE EQUAL FALSE FROM FUNCTION GLOBAL GTHAN GTHAN_EQUAL ID IF INT LBRACE LBRACKET LOCAL LPAREN LTHAN LTHAN_EQUAL MINUS MODULO NEQUAL NOT OR PLUS PRINT RBRACE RBRACKET READ REAL RETURN RPAREN SEMI START TIMES TRUE VARIABLES VOID WHILEstart : global_variables_declaration functions_definition entry_point_definitionstart : global_variables_declaration entry_point_definitionstart : functions_definition entry_point_definitionstart : entry_point_definitionglobal_variables_declaration : GLOBAL variables_declarationfunctions_definition : functions_definition single_function_definitionfunctions_definition : single_function_definitionsingle_function_definition : FUNCTION type ID LPAREN function_definition_params RPAREN local_variables_declaration instruction_blocksingle_function_definition : FUNCTION type ID LPAREN function_definition_params RPAREN instruction_blocksingle_function_definition : FUNCTION type ID LPAREN RPAREN local_variables_declaration instruction_blocksingle_function_definition : FUNCTION type ID LPAREN RPAREN instruction_blocksingle_function_definition : FUNCTION VOID ID LPAREN function_definition_params RPAREN local_variables_declaration instruction_blocksingle_function_definition : FUNCTION VOID ID LPAREN function_definition_params RPAREN instruction_blocksingle_function_definition : FUNCTION VOID ID LPAREN RPAREN local_variables_declaration instruction_blocksingle_function_definition : FUNCTION VOID ID LPAREN RPAREN instruction_blockfunction_definition_params : function_definition_params COMMA single_function_definition_paramfunction_definition_params : single_function_definition_paramsingle_function_definition_param : type IDentry_point_definition : START LPAREN RPAREN local_variables_declaration instruction_blockentry_point_definition : START LPAREN RPAREN instruction_blocklocal_variables_declaration : LOCAL variables_declarationvariables_declaration : VARIABLES COLON distinct_type_variables_declarationdistinct_type_variables_declaration : distinct_type_variables_declaration shared_type_variables_declarationdistinct_type_variables_declaration : shared_type_variables_declarationshared_type_variables_declaration : type shared_type_variables_declaration_list SEMIshared_type_variables_declaration_list : shared_type_variables_declaration_list COMMA single_variable_declarationshared_type_variables_declaration_list : single_variable_declarationsingle_variable_declaration : ID dim_definition dim_definitionsingle_variable_declaration : ID dim_definitionsingle_variable_declaration : IDdim_definition : LBRACKET CONST_INT RBRACKETinstruction_block : LBRACE statements RBRACEinstruction_block : LBRACE RBRACEstatements : single_statementsingle_statement : assignmentsingle_statement : function_callsingle_statement : readsingle_statement : printsingle_statement : conditionalsingle_statement : loopsingle_statement : returnassignment : variable_access ASGMT expr SEMIassignment : variable_access ASGMT readvariable_access : ID dim_access dim_accessvariable_access : ID dim_accessvariable_access : IDdim_access : LBRACKET expr RBRACKETfunction_call : ID LPAREN function_call_params RPAREN SEMIfunction_call : ID LPAREN RPAREN SEMIfunction_call_params : function_call_params COMMA single_function_call_paramfunction_call_params : single_function_call_paramsingle_function_call_param : exprread : READ LPAREN RPAREN SEMIprint : PRINT LPAREN print_params RPAREN SEMIprint : PRINT LPAREN RPAREN SEMIprint_params : print_params COMMA single_print_paramprint_params : single_print_paramsingle_print_param : exprsingle_print_param : CONST_STRINGconditional : IF LPAREN expr RPAREN instruction_block ELSE instruction_blockconditional : IF LPAREN expr RPAREN instruction_blockloop : whileloop : forwhile : WHILE LPAREN expr RPAREN instruction_blockfor : FROM LPAREN ID ASGMT CONST_INT COLON CONST_INT COLON CONST_INT RPAREN instruction_blockfor : FROM LPAREN ID ASGMT CONST_INT COLON CONST_INT RPAREN instruction_blockreturn : RETURN expr SEMIreturn : RETURN SEMIexpr : expr OR and_exprexpr : and_exprand_expr : equality_expr AND equality_exprand_expr : equality_exprequality_expr : relational_expr EQUAL relational_exprequality_expr : relational_expr NEQUAL relational_exprequality_expr : relational_exprrelational_expr : additive_expr LTHAN_EQUAL additive_exprrelational_expr : additive_expr LTHAN additive_exprrelational_expr : additive_expr GTHAN_EQUAL additive_exprrelational_expr : additive_expr GTHAN additive_exprrelational_expr : additive_expradditive_expr : multiplicative_expr PLUS multiplicative_expradditive_expr : multiplicative_expr MINUS multiplicative_expradditive_expr : multiplicative_exprmultiplicative_expr : unary_expr TIMES unary_exprmultiplicative_expr : unary_expr DIVIDE unary_exprmultiplicative_expr : unary_expr MODULO unary_exprmultiplicative_expr : unary_exprunary_expr : MINUS postfix_exprunary_expr : PLUS postfix_exprunary_expr : NOT postfix_exprunary_expr : postfix_exprpostfix_expr : LPAREN expr RPARENpostfix_expr : variable_accesspostfix_expr : function_callpostfix_expr : constantconstant : CONST_INTconstant : CONST_REALconstant : CONST_CHARconstant : constant_boolconstant_bool : TRUEconstant_bool : FALSEtype : INTtype : REALtype : CHARtype : BOOL'
    
_lr_action_items = {'GLOBAL':([0,],[5,]),'START':([0,2,3,6,9,12,13,27,28,36,43,68,72,109,112,152,154,156,157,185,186,],[7,7,7,-7,7,-6,-5,-22,-24,-23,-33,-25,-32,-11,-15,-9,-10,-13,-14,-8,-12,]),'FUNCTION':([0,2,3,6,9,12,13,27,28,36,43,68,72,109,112,152,154,156,157,185,186,],[8,8,8,-7,8,-6,-5,-22,-24,-23,-33,-25,-32,-11,-15,-9,-10,-13,-14,-8,-12,]),'$end':([1,4,10,11,22,31,40,43,72,],[0,-4,-2,-3,-1,-20,-19,-33,-32,]),'VARIABLES':([5,32,],[14,14,]),'LPAREN':([7,25,26,53,54,55,56,59,60,61,73,74,76,78,79,87,88,91,92,96,103,132,133,134,135,136,137,138,139,140,141,144,145,146,161,166,],[15,34,35,74,77,78,79,92,103,104,92,92,92,92,92,92,92,92,92,74,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'VOID':([8,],[17,]),'INT':([8,23,27,28,34,35,36,68,107,],[18,18,18,-24,18,18,-23,-25,18,]),'REAL':([8,23,27,28,34,35,36,68,107,],[19,19,19,-24,19,19,-23,-25,19,]),'CHAR':([8,23,27,28,34,35,36,68,107,],[20,20,20,-24,20,20,-23,-25,20,]),'BOOL':([8,23,27,28,34,35,36,68,107,],[21,21,21,-24,21,21,-23,-25,21,]),'COLON':([14,193,197,],[23,195,198,]),'RPAREN':([15,34,35,63,65,66,74,75,77,78,82,83,84,85,86,89,90,93,94,95,96,97,98,99,100,101,102,105,118,120,121,122,125,127,128,129,130,142,143,147,148,149,153,162,163,169,170,171,172,173,174,175,176,177,178,179,180,181,182,187,188,190,197,200,],[24,64,67,106,-17,110,119,-45,124,126,-70,-72,-75,-80,-83,-87,-91,-93,-94,-95,-46,-96,-97,-98,-99,-100,-101,-18,160,-51,-52,-44,165,-57,-58,-59,168,-89,-88,-90,182,183,-16,-49,-47,-69,-71,-73,-74,-76,-77,-78,-79,-81,-82,-84,-85,-86,-92,-48,-50,-56,199,202,]),'ID':([16,17,18,19,20,21,29,33,59,62,69,73,74,76,78,79,87,88,91,92,103,104,132,133,134,135,136,137,138,139,140,141,144,145,146,161,166,],[25,26,-102,-103,-104,-105,39,53,96,105,39,96,96,96,96,96,96,96,96,96,96,150,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'LOCAL':([24,64,67,106,110,],[32,32,32,32,32,]),'LBRACE':([24,27,28,30,36,41,64,67,68,106,108,110,111,151,155,168,183,194,199,202,],[33,-22,-24,33,-23,-21,33,33,-25,33,33,33,33,33,33,33,33,33,33,33,]),'RBRACE':([33,42,43,44,45,46,47,48,49,50,51,57,58,72,81,117,131,159,162,164,167,187,189,191,192,196,201,203,],[43,72,-33,-34,-35,-36,-37,-38,-39,-40,-41,-62,-63,-32,-68,-43,-67,-42,-49,-53,-55,-48,-54,-61,-64,-60,-66,-65,]),'READ':([33,73,],[54,54,]),'PRINT':([33,],[55,]),'IF':([33,],[56,]),'RETURN':([33,],[59,]),'WHILE':([33,],[60,]),'FROM':([33,],[61,]),'SEMI':([37,38,39,59,70,75,80,82,83,84,85,86,89,90,93,94,95,96,97,98,99,100,101,102,113,114,116,119,122,124,126,142,143,147,158,160,162,163,165,169,170,171,172,173,174,175,176,177,178,179,180,181,182,187,],[68,-27,-30,81,-29,-45,131,-70,-72,-75,-80,-83,-87,-91,-93,-94,-95,-46,-96,-97,-98,-99,-100,-101,-26,-28,159,162,-44,164,167,-89,-88,-90,-31,187,-49,-47,189,-69,-71,-73,-74,-76,-77,-78,-79,-81,-82,-84,-85,-86,-92,-48,]),'COMMA':([37,38,39,63,65,66,70,75,82,83,84,85,86,89,90,93,94,95,96,97,98,99,100,101,102,105,113,114,118,120,121,122,125,127,128,129,142,143,147,153,158,162,163,169,170,171,172,173,174,175,176,177,178,179,180,181,182,187,188,190,],[69,-27,-30,107,-17,107,-29,-45,-70,-72,-75,-80,-83,-87,-91,-93,-94,-95,-46,-96,-97,-98,-99,-100,-101,-18,-26,-28,161,-51,-52,-44,166,-57,-58,-59,-89,-88,-90,-16,-31,-49,-47,-69,-71,-73,-74,-76,-77,-78,-79,-81,-82,-84,-85,-86,-92,-48,-50,-56,]),'LBRACKET':([39,53,70,75,96,158,163,],[71,76,71,76,76,-31,-47,]),'ELSE':([43,72,191,],[-33,-32,194,]),'ASGMT':([52,53,75,122,150,163,],[73,-46,-45,-44,184,-47,]),'MINUS':([59,73,74,75,76,78,79,86,89,90,92,93,94,95,96,97,98,99,100,101,102,103,122,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,161,162,163,166,179,180,181,182,187,],[88,88,88,-45,88,88,88,141,-87,-91,88,-93,-94,-95,-46,-96,-97,-98,-99,-100,-101,88,-44,88,88,88,88,88,88,88,88,88,88,-89,-88,88,88,88,-90,88,-49,-47,88,-84,-85,-86,-92,-48,]),'PLUS':([59,73,74,75,76,78,79,86,89,90,92,93,94,95,96,97,98,99,100,101,102,103,122,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,161,162,163,166,179,180,181,182,187,],[87,87,87,-45,87,87,87,140,-87,-91,87,-93,-94,-95,-46,-96,-97,-98,-99,-100,-101,87,-44,87,87,87,87,87,87,87,87,87,87,-89,-88,87,87,87,-90,87,-49,-47,87,-84,-85,-86,-92,-48,]),'NOT':([59,73,74,76,78,79,92,103,132,133,134,135,136,137,138,139,140,141,144,145,146,161,166,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'CONST_INT':([59,71,73,74,76,78,79,87,88,91,92,103,132,133,134,135,136,137,138,139,140,141,144,145,146,161,166,184,195,198,],[97,115,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,193,197,200,]),'CONST_REAL':([59,73,74,76,78,79,87,88,91,92,103,132,133,134,135,136,137,138,139,140,141,144,145,146,161,166,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'CONST_CHAR':([59,73,74,76,78,79,87,88,91,92,103,132,133,134,135,136,137,138,139,140,141,144,145,146,161,166,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'TRUE':([59,73,74,76,78,79,87,88,91,92,103,132,133,134,135,136,137,138,139,140,141,144,145,146,161,166,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'FALSE':([59,73,74,76,78,79,87,88,91,92,103,132,133,134,135,136,137,138,139,140,141,144,145,146,161,166,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'TIMES':([75,89,90,93,94,95,96,97,98,99,100,101,102,122,142,143,147,162,163,182,187,],[-45,144,-91,-93,-94,-95,-46,-96,-97,-98,-99,-100,-101,-44,-89,-88,-90,-49,-47,-92,-48,]),'DIVIDE':([75,89,90,93,94,95,96,97,98,99,100,101,102,122,142,143,147,162,163,182,187,],[-45,145,-91,-93,-94,-95,-46,-96,-97,-98,-99,-100,-101,-44,-89,-88,-90,-49,-47,-92,-48,]),'MODULO':([75,89,90,93,94,95,96,97,98,99,100,101,102,122,142,143,147,162,163,182,187,],[-45,146,-91,-93,-94,-95,-46,-96,-97,-98,-99,-100,-101,-44,-89,-88,-90,-49,-47,-92,-48,]),'LTHAN_EQUAL':([75,85,86,89,90,93,94,95,96,97,98,99,100,101,102,122,142,143,147,162,163,177,178,179,180,181,182,187,],[-45,136,-83,-87,-91,-93,-94,-95,-46,-96,-97,-98,-99,-100,-101,-44,-89,-88,-90,-49,-47,-81,-82,-84,-85,-86,-92,-48,]),'LTHAN':([75,85,86,89,90,93,94,95,96,97,98,99,100,101,102,122,142,143,147,162,163,177,178,179,180,181,182,187,],[-45,137,-83,-87,-91,-93,-94,-95,-46,-96,-97,-98,-99,-100,-101,-44,-89,-88,-90,-49,-47,-81,-82,-84,-85,-86,-92,-48,]),'GTHAN_EQUAL':([75,85,86,89,90,93,94,95,96,97,98,99,100,101,102,122,142,143,147,162,163,177,178,179,180,181,182,187,],[-45,138,-83,-87,-91,-93,-94,-95,-46,-96,-97,-98,-99,-100,-101,-44,-89,-88,-90,-49,-47,-81,-82,-84,-85,-86,-92,-48,]),'GTHAN':([75,85,86,89,90,93,94,95,96,97,98,99,100,101,102,122,142,143,147,162,163,177,178,179,180,181,182,187,],[-45,139,-83,-87,-91,-93,-94,-95,-46,-96,-97,-98,-99,-100,-101,-44,-89,-88,-90,-49,-47,-81,-82,-84,-85,-86,-92,-48,]),'EQUAL':([75,84,85,86,89,90,93,94,95,96,97,98,99,100,101,102,122,142,143,147,162,163,173,174,175,176,177,178,179,180,181,182,187,],[-45,134,-80,-83,-87,-91,-93,-94,-95,-46,-96,-97,-98,-99,-100,-101,-44,-89,-88,-90,-49,-47,-76,-77,-78,-79,-81,-82,-84,-85,-86,-92,-48,]),'NEQUAL':([75,84,85,86,89,90,93,94,95,96,97,98,99,100,101,102,122,142,143,147,162,163,173,174,175,176,177,178,179,180,181,182,187,],[-45,135,-80,-83,-87,-91,-93,-94,-95,-46,-96,-97,-98,-99,-100,-101,-44,-89,-88,-90,-49,-47,-76,-77,-78,-79,-81,-82,-84,-85,-86,-92,-48,]),'AND':([75,83,84,85,86,89,90,93,94,95,96,97,98,99,100,101,102,122,142,143,147,162,163,171,172,173,174,175,176,177,178,179,180,181,182,187,],[-45,133,-75,-80,-83,-87,-91,-93,-94,-95,-46,-96,-97,-98,-99,-100,-101,-44,-89,-88,-90,-49,-47,-73,-74,-76,-77,-78,-79,-81,-82,-84,-85,-86,-92,-48,]),'OR':([75,80,82,83,84,85,86,89,90,93,94,95,96,97,98,99,100,101,102,116,121,122,123,128,130,142,143,147,148,149,162,163,169,170,171,172,173,174,175,176,177,178,179,180,181,182,187,],[-45,132,-70,-72,-75,-80,-83,-87,-91,-93,-94,-95,-46,-96,-97,-98,-99,-100,-101,132,132,-44,132,132,132,-89,-88,-90,132,132,-49,-47,-69,-71,-73,-74,-76,-77,-78,-79,-81,-82,-84,-85,-86,-92,-48,]),'RBRACKET':([75,82,83,84,85,86,89,90,93,94,95,96,97,98,99,100,101,102,115,122,123,142,143,147,162,163,169,170,171,172,173,174,175,176,177,178,179,180,181,182,187,],[-45,-70,-72,-75,-80,-83,-87,-91,-93,-94,-95,-46,-96,-97,-98,-99,-100,-101,158,-44,163,-89,-88,-90,-49,-47,-69,-71,-73,-74,-76,-77,-78,-79,-81,-82,-84,-85,-86,-92,-48,]),'CONST_STRING':([78,166,],[129,129,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'global_variables_declaration':([0,],[2,]),'functions_definition':([0,2,],[3,9,]),'entry_point_definition':([0,2,3,9,],[4,10,11,22,]),'single_function_definition':([0,2,3,9,],[6,6,12,12,]),'variables_declaration':([5,32,],[13,41,]),'type':([8,23,27,34,35,107,],[16,29,29,62,62,62,]),'distinct_type_variables_declaration':([23,],[27,]),'shared_type_variables_declaration':([23,27,],[28,36,]),'local_variables_declaration':([24,64,67,106,110,],[30,108,111,151,155,]),'instruction_block':([24,30,64,67,106,108,110,111,151,155,168,183,194,199,202,],[31,40,109,112,152,154,156,157,185,186,191,192,196,201,203,]),'shared_type_variables_declaration_list':([29,],[37,]),'single_variable_declaration':([29,69,],[38,113,]),'statements':([33,],[42,]),'single_statement':([33,],[44,]),'assignment':([33,],[45,]),'function_call':([33,59,73,74,76,78,79,87,88,91,92,103,132,133,134,135,136,137,138,139,140,141,144,145,146,161,166,],[46,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'read':([33,73,],[47,117,]),'print':([33,],[48,]),'conditional':([33,],[49,]),'loop':([33,],[50,]),'return':([33,],[51,]),'variable_access':([33,59,73,74,76,78,79,87,88,91,92,103,132,133,134,135,136,137,138,139,140,141,144,145,146,161,166,],[52,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'while':([33,],[57,]),'for':([33,],[58,]),'function_definition_params':([34,35,],[63,66,]),'single_function_definition_param':([34,35,107,],[65,65,153,]),'dim_definition':([39,70,],[70,114,]),'dim_access':([53,75,96,],[75,122,75,]),'expr':([59,73,74,76,78,79,92,103,161,166,],[80,116,121,123,128,130,148,149,121,128,]),'and_expr':([59,73,74,76,78,79,92,103,132,161,166,],[82,82,82,82,82,82,82,82,169,82,82,]),'equality_expr':([59,73,74,76,78,79,92,103,132,133,161,166,],[83,83,83,83,83,83,83,83,83,170,83,83,]),'relational_expr':([59,73,74,76,78,79,92,103,132,133,134,135,161,166,],[84,84,84,84,84,84,84,84,84,84,171,172,84,84,]),'additive_expr':([59,73,74,76,78,79,92,103,132,133,134,135,136,137,138,139,161,166,],[85,85,85,85,85,85,85,85,85,85,85,85,173,174,175,176,85,85,]),'multiplicative_expr':([59,73,74,76,78,79,92,103,132,133,134,135,136,137,138,139,140,141,161,166,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,177,178,86,86,]),'unary_expr':([59,73,74,76,78,79,92,103,132,133,134,135,136,137,138,139,140,141,144,145,146,161,166,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,179,180,181,89,89,]),'postfix_expr':([59,73,74,76,78,79,87,88,91,92,103,132,133,134,135,136,137,138,139,140,141,144,145,146,161,166,],[90,90,90,90,90,90,142,143,147,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'constant':([59,73,74,76,78,79,87,88,91,92,103,132,133,134,135,136,137,138,139,140,141,144,145,146,161,166,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'constant_bool':([59,73,74,76,78,79,87,88,91,92,103,132,133,134,135,136,137,138,139,140,141,144,145,146,161,166,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'function_call_params':([74,],[118,]),'single_function_call_param':([74,161,],[120,188,]),'print_params':([78,],[125,]),'single_print_param':([78,166,],[127,190,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> global_variables_declaration functions_definition entry_point_definition','start',3,'p_start_1','parser.py',17),
  ('start -> global_variables_declaration entry_point_definition','start',2,'p_start_2','parser.py',21),
  ('start -> functions_definition entry_point_definition','start',2,'p_start_3','parser.py',25),
  ('start -> entry_point_definition','start',1,'p_start_4','parser.py',29),
  ('global_variables_declaration -> GLOBAL variables_declaration','global_variables_declaration',2,'p_global_variables_declaration','parser.py',33),
  ('functions_definition -> functions_definition single_function_definition','functions_definition',2,'p_functions_definition_1','parser.py',37),
  ('functions_definition -> single_function_definition','functions_definition',1,'p_functions_definition_2','parser.py',41),
  ('single_function_definition -> FUNCTION type ID LPAREN function_definition_params RPAREN local_variables_declaration instruction_block','single_function_definition',8,'p_single_function_definition_primitive_type_1','parser.py',45),
  ('single_function_definition -> FUNCTION type ID LPAREN function_definition_params RPAREN instruction_block','single_function_definition',7,'p_single_function_definition_primitive_type_2','parser.py',49),
  ('single_function_definition -> FUNCTION type ID LPAREN RPAREN local_variables_declaration instruction_block','single_function_definition',7,'p_single_function_definition_primitive_type_3','parser.py',53),
  ('single_function_definition -> FUNCTION type ID LPAREN RPAREN instruction_block','single_function_definition',6,'p_single_function_definition_primitive_type_4','parser.py',57),
  ('single_function_definition -> FUNCTION VOID ID LPAREN function_definition_params RPAREN local_variables_declaration instruction_block','single_function_definition',8,'p_single_function_definition_void_type_1','parser.py',61),
  ('single_function_definition -> FUNCTION VOID ID LPAREN function_definition_params RPAREN instruction_block','single_function_definition',7,'p_single_function_definition_void_type_2','parser.py',65),
  ('single_function_definition -> FUNCTION VOID ID LPAREN RPAREN local_variables_declaration instruction_block','single_function_definition',7,'p_single_function_definition_void_type_3','parser.py',69),
  ('single_function_definition -> FUNCTION VOID ID LPAREN RPAREN instruction_block','single_function_definition',6,'p_single_function_definition_void_type_4','parser.py',73),
  ('function_definition_params -> function_definition_params COMMA single_function_definition_param','function_definition_params',3,'p_function_definition_params_1','parser.py',77),
  ('function_definition_params -> single_function_definition_param','function_definition_params',1,'p_function_definition_params_2','parser.py',81),
  ('single_function_definition_param -> type ID','single_function_definition_param',2,'p_single_function_definition_param','parser.py',85),
  ('entry_point_definition -> START LPAREN RPAREN local_variables_declaration instruction_block','entry_point_definition',5,'p_entry_point_definition_1','parser.py',89),
  ('entry_point_definition -> START LPAREN RPAREN instruction_block','entry_point_definition',4,'p_entry_point_definition_2','parser.py',93),
  ('local_variables_declaration -> LOCAL variables_declaration','local_variables_declaration',2,'p_local_variables_declaration','parser.py',97),
  ('variables_declaration -> VARIABLES COLON distinct_type_variables_declaration','variables_declaration',3,'p_variables_declaration','parser.py',101),
  ('distinct_type_variables_declaration -> distinct_type_variables_declaration shared_type_variables_declaration','distinct_type_variables_declaration',2,'p_distinct_type_variables_declaration_1','parser.py',105),
  ('distinct_type_variables_declaration -> shared_type_variables_declaration','distinct_type_variables_declaration',1,'p_distinct_type_variables_declaration_2','parser.py',109),
  ('shared_type_variables_declaration -> type shared_type_variables_declaration_list SEMI','shared_type_variables_declaration',3,'p_shared_type_variables_declaration','parser.py',113),
  ('shared_type_variables_declaration_list -> shared_type_variables_declaration_list COMMA single_variable_declaration','shared_type_variables_declaration_list',3,'p_shared_type_variables_declaration_list_1','parser.py',117),
  ('shared_type_variables_declaration_list -> single_variable_declaration','shared_type_variables_declaration_list',1,'p_shared_type_variables_declaration_list_2','parser.py',121),
  ('single_variable_declaration -> ID dim_definition dim_definition','single_variable_declaration',3,'p_single_variable_declaration_1','parser.py',125),
  ('single_variable_declaration -> ID dim_definition','single_variable_declaration',2,'p_single_variable_declaration_2','parser.py',129),
  ('single_variable_declaration -> ID','single_variable_declaration',1,'p_single_variable_declaration_3','parser.py',133),
  ('dim_definition -> LBRACKET CONST_INT RBRACKET','dim_definition',3,'p_dim_definition','parser.py',137),
  ('instruction_block -> LBRACE statements RBRACE','instruction_block',3,'p_instruction_block_1','parser.py',141),
  ('instruction_block -> LBRACE RBRACE','instruction_block',2,'p_instruction_block_2','parser.py',145),
  ('statements -> single_statement','statements',1,'p_statements_1','parser.py',153),
  ('single_statement -> assignment','single_statement',1,'p_single_statement_1','parser.py',157),
  ('single_statement -> function_call','single_statement',1,'p_single_statement_2','parser.py',161),
  ('single_statement -> read','single_statement',1,'p_single_statement_3','parser.py',165),
  ('single_statement -> print','single_statement',1,'p_single_statement_4','parser.py',169),
  ('single_statement -> conditional','single_statement',1,'p_single_statement_5','parser.py',173),
  ('single_statement -> loop','single_statement',1,'p_single_statement_6','parser.py',177),
  ('single_statement -> return','single_statement',1,'p_single_statement_7','parser.py',181),
  ('assignment -> variable_access ASGMT expr SEMI','assignment',4,'p_assignment_1','parser.py',185),
  ('assignment -> variable_access ASGMT read','assignment',3,'p_assignment_2','parser.py',189),
  ('variable_access -> ID dim_access dim_access','variable_access',3,'p_variable_access_1','parser.py',193),
  ('variable_access -> ID dim_access','variable_access',2,'p_variable_access_2','parser.py',197),
  ('variable_access -> ID','variable_access',1,'p_variable_access_3','parser.py',201),
  ('dim_access -> LBRACKET expr RBRACKET','dim_access',3,'p_dim_access','parser.py',205),
  ('function_call -> ID LPAREN function_call_params RPAREN SEMI','function_call',5,'p_function_call_1','parser.py',209),
  ('function_call -> ID LPAREN RPAREN SEMI','function_call',4,'p_function_call_2','parser.py',213),
  ('function_call_params -> function_call_params COMMA single_function_call_param','function_call_params',3,'p_function_call_params_1','parser.py',217),
  ('function_call_params -> single_function_call_param','function_call_params',1,'p_function_call_params_2','parser.py',221),
  ('single_function_call_param -> expr','single_function_call_param',1,'p_single_function_call_param','parser.py',225),
  ('read -> READ LPAREN RPAREN SEMI','read',4,'p_read','parser.py',229),
  ('print -> PRINT LPAREN print_params RPAREN SEMI','print',5,'p_print_1','parser.py',233),
  ('print -> PRINT LPAREN RPAREN SEMI','print',4,'p_print_2','parser.py',237),
  ('print_params -> print_params COMMA single_print_param','print_params',3,'p_print_params_1','parser.py',241),
  ('print_params -> single_print_param','print_params',1,'p_print_params_2','parser.py',245),
  ('single_print_param -> expr','single_print_param',1,'p_single_print_param_1','parser.py',249),
  ('single_print_param -> CONST_STRING','single_print_param',1,'p_single_print_param_2','parser.py',253),
  ('conditional -> IF LPAREN expr RPAREN instruction_block ELSE instruction_block','conditional',7,'p_conditional_1','parser.py',257),
  ('conditional -> IF LPAREN expr RPAREN instruction_block','conditional',5,'p_conditional_2','parser.py',261),
  ('loop -> while','loop',1,'p_loop_1','parser.py',265),
  ('loop -> for','loop',1,'p_loop_2','parser.py',269),
  ('while -> WHILE LPAREN expr RPAREN instruction_block','while',5,'p_while','parser.py',273),
  ('for -> FROM LPAREN ID ASGMT CONST_INT COLON CONST_INT COLON CONST_INT RPAREN instruction_block','for',11,'p_for_1','parser.py',277),
  ('for -> FROM LPAREN ID ASGMT CONST_INT COLON CONST_INT RPAREN instruction_block','for',9,'p_for_2','parser.py',281),
  ('return -> RETURN expr SEMI','return',3,'p_return_1','parser.py',285),
  ('return -> RETURN SEMI','return',2,'p_return_2','parser.py',289),
  ('expr -> expr OR and_expr','expr',3,'p_expr_1','parser.py',293),
  ('expr -> and_expr','expr',1,'p_expr_2','parser.py',297),
  ('and_expr -> equality_expr AND equality_expr','and_expr',3,'p_and_expr_1','parser.py',301),
  ('and_expr -> equality_expr','and_expr',1,'p_and_expr_2','parser.py',305),
  ('equality_expr -> relational_expr EQUAL relational_expr','equality_expr',3,'p_equality_expr_1','parser.py',309),
  ('equality_expr -> relational_expr NEQUAL relational_expr','equality_expr',3,'p_equality_expr_2','parser.py',313),
  ('equality_expr -> relational_expr','equality_expr',1,'p_equality_expr_3','parser.py',317),
  ('relational_expr -> additive_expr LTHAN_EQUAL additive_expr','relational_expr',3,'p_relational_expr_1','parser.py',321),
  ('relational_expr -> additive_expr LTHAN additive_expr','relational_expr',3,'p_relational_expr_2','parser.py',325),
  ('relational_expr -> additive_expr GTHAN_EQUAL additive_expr','relational_expr',3,'p_relational_expr_3','parser.py',329),
  ('relational_expr -> additive_expr GTHAN additive_expr','relational_expr',3,'p_relational_expr_4','parser.py',333),
  ('relational_expr -> additive_expr','relational_expr',1,'p_relational_expr_5','parser.py',337),
  ('additive_expr -> multiplicative_expr PLUS multiplicative_expr','additive_expr',3,'p_additive_expr_1','parser.py',341),
  ('additive_expr -> multiplicative_expr MINUS multiplicative_expr','additive_expr',3,'p_additive_expr_2','parser.py',345),
  ('additive_expr -> multiplicative_expr','additive_expr',1,'p_additive_expr_3','parser.py',349),
  ('multiplicative_expr -> unary_expr TIMES unary_expr','multiplicative_expr',3,'p_multiplicative_expr_1','parser.py',353),
  ('multiplicative_expr -> unary_expr DIVIDE unary_expr','multiplicative_expr',3,'p_multiplicative_expr_2','parser.py',357),
  ('multiplicative_expr -> unary_expr MODULO unary_expr','multiplicative_expr',3,'p_multiplicative_expr_3','parser.py',361),
  ('multiplicative_expr -> unary_expr','multiplicative_expr',1,'p_multiplicative_expr_4','parser.py',365),
  ('unary_expr -> MINUS postfix_expr','unary_expr',2,'p_unary_expr_1','parser.py',369),
  ('unary_expr -> PLUS postfix_expr','unary_expr',2,'p_unary_expr_2','parser.py',373),
  ('unary_expr -> NOT postfix_expr','unary_expr',2,'p_unary_expr_3','parser.py',377),
  ('unary_expr -> postfix_expr','unary_expr',1,'p_unary_expr_4','parser.py',381),
  ('postfix_expr -> LPAREN expr RPAREN','postfix_expr',3,'p_postfix_expr_1','parser.py',385),
  ('postfix_expr -> variable_access','postfix_expr',1,'p_postfix_expr_2','parser.py',389),
  ('postfix_expr -> function_call','postfix_expr',1,'p_postfix_expr_3','parser.py',393),
  ('postfix_expr -> constant','postfix_expr',1,'p_postfix_expr_4','parser.py',397),
  ('constant -> CONST_INT','constant',1,'p_constant_1','parser.py',401),
  ('constant -> CONST_REAL','constant',1,'p_constant_2','parser.py',405),
  ('constant -> CONST_CHAR','constant',1,'p_constant_3','parser.py',409),
  ('constant -> constant_bool','constant',1,'p_constant_4','parser.py',413),
  ('constant_bool -> TRUE','constant_bool',1,'p_constant_bool_1','parser.py',417),
  ('constant_bool -> FALSE','constant_bool',1,'p_constant_bool_2','parser.py',421),
  ('type -> INT','type',1,'p_type_1','parser.py',425),
  ('type -> REAL','type',1,'p_type_2','parser.py',429),
  ('type -> CHAR','type',1,'p_type_3','parser.py',433),
  ('type -> BOOL','type',1,'p_type_4','parser.py',437),
]
