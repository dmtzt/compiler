
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASGMT BOOL CHAR COLON COMMA CONST_CHAR CONST_INT CONST_REAL CONST_STRING DIVIDE ELSE EQUAL FALSE FROM FUNCTION GLOBAL GTHAN GTHAN_EQUAL ID IF INT LBRACE LBRACKET LOCAL LPAREN LTHAN LTHAN_EQUAL MINUS MODULO NEQUAL NOT OR PLUS PRINT RBRACE RBRACKET READ REAL RETURN RPAREN SEMI START TIMES TRUE VARIABLES VOID WHILEprogram : init startinit :start : global_variables_declaration functions_definition entry_point_definitionstart : global_variables_declaration entry_point_definitionstart : functions_definition entry_point_definitionstart : entry_point_definitionglobal_variables_declaration : GLOBAL parsed_global_scope variables_declarationparsed_global_scope :functions_definition : functions_definition single_function_definitionfunctions_definition : single_function_definitionsingle_function_definition : FUNCTION type parsed_function_return_type ID parsed_function_id LPAREN function_definition_params RPAREN local_variables_declaration instruction_blocksingle_function_definition : FUNCTION type parsed_function_return_type ID parsed_function_id LPAREN function_definition_params RPAREN instruction_blocksingle_function_definition : FUNCTION type parsed_function_return_type ID parsed_function_id LPAREN RPAREN local_variables_declaration instruction_blocksingle_function_definition : FUNCTION type parsed_function_return_type ID parsed_function_id LPAREN RPAREN instruction_blocksingle_function_definition : FUNCTION VOID parsed_function_void_return_type ID parsed_function_id LPAREN function_definition_params RPAREN local_variables_declaration instruction_blocksingle_function_definition : FUNCTION VOID parsed_function_void_return_type ID parsed_function_id LPAREN function_definition_params RPAREN instruction_blocksingle_function_definition : FUNCTION VOID parsed_function_void_return_type ID parsed_function_id LPAREN RPAREN local_variables_declaration instruction_blocksingle_function_definition : FUNCTION VOID parsed_function_void_return_type ID parsed_function_id LPAREN RPAREN instruction_blockparsed_function_id :parsed_function_return_type :parsed_function_void_return_type  :function_definition_params : function_definition_params COMMA single_function_definition_paramfunction_definition_params : single_function_definition_paramsingle_function_definition_param : type IDentry_point_definition : START parsed_main_id LPAREN RPAREN local_variables_declaration instruction_blockentry_point_definition : START parsed_main_id LPAREN RPAREN instruction_blockparsed_main_id :local_variables_declaration : LOCAL variables_declarationvariables_declaration : VARIABLES COLON distinct_type_variables_declarationdistinct_type_variables_declaration : distinct_type_variables_declaration shared_type_variables_declarationdistinct_type_variables_declaration : shared_type_variables_declarationshared_type_variables_declaration : type parsed_type shared_type_variables_declaration_list SEMIparsed_type :shared_type_variables_declaration_list : shared_type_variables_declaration_list COMMA single_variable_declarationshared_type_variables_declaration_list : single_variable_declarationsingle_variable_declaration : ID dim_definition dim_definitionsingle_variable_declaration : ID dim_definitionsingle_variable_declaration : IDdim_definition : LBRACKET CONST_INT RBRACKETinstruction_block : LBRACE statements RBRACEinstruction_block : LBRACE RBRACEstatements : statements single_statementstatements : single_statementsingle_statement : assignmentsingle_statement : function_callsingle_statement : printsingle_statement : conditionalsingle_statement : loopsingle_statement : returnassignment : variable_access ASGMT parsed_asgmt expr SEMIassignment : variable_access ASGMT parsed_asgmt READ LPAREN RPAREN SEMIparsed_asgmt :variable_access : ID parsed_id_variable_access dims_accessparsed_id_variable_access :dims_access : single_dim_access single_dim_accessdims_access : single_dim_accessdims_access : emptysingle_dim_access : LBRACKET expr RBRACKETfunction_call : ID LPAREN function_call_params RPAREN SEMIfunction_call : ID LPAREN RPAREN SEMIfunction_call_params : function_call_params COMMA single_function_call_paramfunction_call_params : single_function_call_paramsingle_function_call_param : exprprint : PRINT LPAREN print_params RPAREN SEMIprint : PRINT LPAREN RPAREN SEMIprint_params : print_params COMMA single_print_paramprint_params : single_print_paramsingle_print_param : exprconditional : IF LPAREN expr RPAREN parsed_if_expression instruction_block ELSE parsed_else instruction_blockconditional : IF LPAREN expr RPAREN parsed_if_expression instruction_blockparsed_if_expression :parsed_else :loop : whileloop : forwhile : WHILE LPAREN expr RPAREN instruction_blockfor : FROM LPAREN ID ASGMT CONST_INT COLON CONST_INT COLON CONST_INT RPAREN instruction_blockfor : FROM LPAREN ID ASGMT CONST_INT COLON CONST_INT RPAREN instruction_blockreturn : RETURN expr SEMIreturn : RETURN SEMIexpr : expr OR and_exprexpr : and_exprand_expr : equality_expr AND equality_exprand_expr : equality_exprequality_expr : relational_expr EQUAL parsed_equal relational_exprparsed_equal :equality_expr : relational_expr NEQUAL parsed_nequal relational_exprparsed_nequal :equality_expr : relational_exprrelational_expr : additive_expr LTHAN_EQUAL parsed_lthan_equal additive_exprparsed_lthan_equal :relational_expr : additive_expr LTHAN parsed_lthan additive_exprparsed_lthan :relational_expr : additive_expr GTHAN_EQUAL parsed_gthan_equal additive_exprparsed_gthan_equal :relational_expr : additive_expr GTHAN parsed_gthan additive_exprparsed_gthan :relational_expr : additive_expradditive_expr : additive_expr PLUS parsed_plus multiplicative_exprparsed_plus :additive_expr : additive_expr MINUS parsed_minus multiplicative_exprparsed_minus :additive_expr : multiplicative_exprmultiplicative_expr : multiplicative_expr TIMES parsed_times unary_exprparsed_times :multiplicative_expr : multiplicative_expr DIVIDE parsed_divide unary_exprparsed_divide :multiplicative_expr : multiplicative_expr MODULO parsed_modulo unary_exprparsed_modulo :multiplicative_expr : unary_exprunary_expr : MINUS postfix_exprunary_expr : PLUS postfix_exprunary_expr : NOT postfix_exprunary_expr : postfix_exprpostfix_expr : LPAREN expr RPARENpostfix_expr : variable_accesspostfix_expr : function_callpostfix_expr : constantconstant : CONST_INTconstant : CONST_REALconstant : CONST_CHARconstant : CONST_STRINGconstant : constant_boolconstant_bool : TRUEconstant_bool : FALSEtype : INTtype : REALtype : CHARtype : BOOLempty :'
    
_lr_action_items = {'GLOBAL':([0,2,],[-2,7,]),'START':([0,2,4,5,8,11,14,24,33,34,42,47,69,108,150,153,185,187,189,190,213,214,],[-2,9,9,9,-10,9,-9,-7,-29,-31,-30,-41,-40,-32,-14,-18,-12,-13,-16,-17,-11,-15,]),'FUNCTION':([0,2,4,5,8,11,14,24,33,34,42,47,69,108,150,153,185,187,189,190,213,214,],[-2,10,10,10,-10,10,-9,-7,-29,-31,-30,-41,-40,-32,-14,-18,-12,-13,-16,-17,-11,-15,]),'$end':([1,3,6,12,13,23,37,44,47,69,],[0,-1,-6,-4,-5,-3,-26,-25,-41,-40,]),'VARIABLES':([7,15,38,],[-8,25,25,]),'LPAREN':([9,16,31,32,40,41,56,57,58,61,62,63,71,72,74,75,82,84,87,88,92,100,112,120,127,128,129,130,131,132,133,134,135,136,138,139,140,158,160,165,170,171,172,173,174,175,176,177,178,179,180,],[-27,26,-19,-19,64,65,72,74,75,88,100,101,-52,88,88,88,88,88,88,88,72,88,88,88,88,88,-85,-87,-90,-92,-94,-96,-99,-101,-104,-106,-108,193,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'VOID':([10,],[18,]),'INT':([10,29,33,34,42,64,65,108,148,],[19,19,19,-31,-30,19,19,-32,19,]),'REAL':([10,29,33,34,42,64,65,108,148,],[20,20,20,-31,-30,20,20,-32,20,]),'CHAR':([10,29,33,34,42,64,65,108,148,],[21,21,21,-31,-30,21,21,-32,21,]),'BOOL':([10,29,33,34,42,64,65,108,148,],[22,22,22,-31,-30,22,22,-32,22,]),'ID':([17,18,19,20,21,22,27,28,35,39,43,46,47,48,49,50,51,52,53,54,59,60,61,69,70,71,72,74,75,77,82,84,87,88,100,101,102,109,112,120,126,127,128,129,130,131,132,133,134,135,136,138,139,140,160,161,165,166,170,171,172,173,174,175,176,177,178,179,180,192,194,197,211,216,218,224,226,228,],[-20,-21,-125,-126,-127,-128,31,32,-33,56,68,56,-41,-43,-44,-45,-46,-47,-48,-49,-73,-74,92,-40,-42,-52,92,92,92,-79,92,92,92,92,92,145,146,68,92,92,-78,92,92,-85,-87,-90,-92,-94,-96,-99,-101,-104,-106,-108,92,-60,92,-65,92,92,92,92,92,92,92,92,92,92,92,-50,-59,-64,-75,-70,-51,-69,-77,-76,]),'COLON':([25,212,220,],[29,217,222,]),'RPAREN':([26,64,65,72,73,74,78,79,80,81,83,85,86,89,90,91,92,93,94,95,96,97,98,99,103,105,106,113,115,116,117,118,119,121,123,124,125,137,141,142,143,144,146,161,162,168,169,181,186,193,194,195,196,198,200,201,202,203,204,205,206,207,208,209,210,220,225,],[30,104,107,114,-129,122,-81,-83,-88,-97,-102,-109,-113,-115,-116,-117,-54,-118,-119,-120,-121,-122,-123,-124,147,-23,151,159,-62,-63,-53,-56,-57,164,-67,-68,167,-111,-110,-112,181,182,-24,-60,-55,-80,-82,-114,-22,215,-59,-61,-58,-66,-84,-86,-89,-91,-93,-95,-98,-100,-103,-105,-107,223,227,]),'LOCAL':([30,104,107,147,151,],[38,38,38,38,38,]),'LBRACE':([30,33,34,36,42,45,104,107,108,147,149,151,152,167,182,184,188,199,219,221,223,227,],[39,-29,-31,39,-30,-28,39,39,-32,39,39,39,39,-71,39,39,39,39,-72,39,39,39,]),'RBRACE':([39,46,47,48,49,50,51,52,53,54,59,60,69,70,77,126,161,166,192,194,197,211,216,218,224,226,228,],[47,69,-41,-43,-44,-45,-46,-47,-48,-49,-73,-74,-40,-42,-79,-78,-60,-65,-50,-59,-64,-75,-70,-51,-69,-77,-76,]),'PRINT':([39,46,47,48,49,50,51,52,53,54,59,60,69,70,77,126,161,166,192,194,197,211,216,218,224,226,228,],[57,57,-41,-43,-44,-45,-46,-47,-48,-49,-73,-74,-40,-42,-79,-78,-60,-65,-50,-59,-64,-75,-70,-51,-69,-77,-76,]),'IF':([39,46,47,48,49,50,51,52,53,54,59,60,69,70,77,126,161,166,192,194,197,211,216,218,224,226,228,],[58,58,-41,-43,-44,-45,-46,-47,-48,-49,-73,-74,-40,-42,-79,-78,-60,-65,-50,-59,-64,-75,-70,-51,-69,-77,-76,]),'RETURN':([39,46,47,48,49,50,51,52,53,54,59,60,69,70,77,126,161,166,192,194,197,211,216,218,224,226,228,],[61,61,-41,-43,-44,-45,-46,-47,-48,-49,-73,-74,-40,-42,-79,-78,-60,-65,-50,-59,-64,-75,-70,-51,-69,-77,-76,]),'WHILE':([39,46,47,48,49,50,51,52,53,54,59,60,69,70,77,126,161,166,192,194,197,211,216,218,224,226,228,],[62,62,-41,-43,-44,-45,-46,-47,-48,-49,-73,-74,-40,-42,-79,-78,-60,-65,-50,-59,-64,-75,-70,-51,-69,-77,-76,]),'FROM':([39,46,47,48,49,50,51,52,53,54,59,60,69,70,77,126,161,166,192,194,197,211,216,218,224,226,228,],[63,63,-41,-43,-44,-45,-46,-47,-48,-49,-73,-74,-40,-42,-79,-78,-60,-65,-50,-59,-64,-75,-70,-51,-69,-77,-76,]),'ELSE':([47,69,216,],[-41,-40,219,]),'ASGMT':([55,56,73,117,118,119,145,162,196,],[71,-54,-129,-53,-56,-57,183,-55,-58,]),'LBRACKET':([56,68,73,92,110,118,191,196,],[-54,111,120,-54,111,120,-39,-58,]),'SEMI':([61,66,67,68,73,76,78,79,80,81,83,85,86,89,90,91,92,93,94,95,96,97,98,99,110,114,117,118,119,122,137,141,142,154,155,157,159,161,162,164,168,169,181,191,194,196,200,201,202,203,204,205,206,207,208,209,210,215,],[77,108,-35,-38,-129,126,-81,-83,-88,-97,-102,-109,-113,-115,-116,-117,-54,-118,-119,-120,-121,-122,-123,-124,-37,161,-53,-56,-57,166,-111,-110,-112,-34,-36,192,194,-60,-55,197,-80,-82,-114,-39,-59,-58,-84,-86,-89,-91,-93,-95,-98,-100,-103,-105,-107,218,]),'MINUS':([61,71,72,73,74,75,81,83,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,112,117,118,119,120,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,160,161,162,165,170,171,172,173,174,175,176,177,178,179,180,181,194,196,202,203,204,205,206,207,208,209,210,],[84,-52,84,-129,84,84,136,-102,-109,-113,84,-115,-116,-117,-54,-118,-119,-120,-121,-122,-123,-124,84,84,-53,-56,-57,84,84,84,-85,-87,-90,-92,-94,-96,-99,-101,-111,-104,-106,-108,-110,-112,84,-60,-55,84,84,84,84,84,84,84,84,84,84,84,84,-114,-59,-58,136,136,136,136,-98,-100,-103,-105,-107,]),'PLUS':([61,71,72,73,74,75,81,83,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,112,117,118,119,120,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,160,161,162,165,170,171,172,173,174,175,176,177,178,179,180,181,194,196,202,203,204,205,206,207,208,209,210,],[82,-52,82,-129,82,82,135,-102,-109,-113,82,-115,-116,-117,-54,-118,-119,-120,-121,-122,-123,-124,82,82,-53,-56,-57,82,82,82,-85,-87,-90,-92,-94,-96,-99,-101,-111,-104,-106,-108,-110,-112,82,-60,-55,82,82,82,82,82,82,82,82,82,82,82,82,-114,-59,-58,135,135,135,135,-98,-100,-103,-105,-107,]),'NOT':([61,71,72,74,75,88,100,112,120,127,128,129,130,131,132,133,134,135,136,138,139,140,160,165,170,171,172,173,174,175,176,177,178,179,180,],[87,-52,87,87,87,87,87,87,87,87,87,-85,-87,-90,-92,-94,-96,-99,-101,-104,-106,-108,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'CONST_INT':([61,71,72,74,75,82,84,87,88,100,111,112,120,127,128,129,130,131,132,133,134,135,136,138,139,140,160,165,170,171,172,173,174,175,176,177,178,179,180,183,217,222,],[93,-52,93,93,93,93,93,93,93,93,156,93,93,93,93,-85,-87,-90,-92,-94,-96,-99,-101,-104,-106,-108,93,93,93,93,93,93,93,93,93,93,93,93,93,212,220,225,]),'CONST_REAL':([61,71,72,74,75,82,84,87,88,100,112,120,127,128,129,130,131,132,133,134,135,136,138,139,140,160,165,170,171,172,173,174,175,176,177,178,179,180,],[94,-52,94,94,94,94,94,94,94,94,94,94,94,94,-85,-87,-90,-92,-94,-96,-99,-101,-104,-106,-108,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'CONST_CHAR':([61,71,72,74,75,82,84,87,88,100,112,120,127,128,129,130,131,132,133,134,135,136,138,139,140,160,165,170,171,172,173,174,175,176,177,178,179,180,],[95,-52,95,95,95,95,95,95,95,95,95,95,95,95,-85,-87,-90,-92,-94,-96,-99,-101,-104,-106,-108,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'CONST_STRING':([61,71,72,74,75,82,84,87,88,100,112,120,127,128,129,130,131,132,133,134,135,136,138,139,140,160,165,170,171,172,173,174,175,176,177,178,179,180,],[96,-52,96,96,96,96,96,96,96,96,96,96,96,96,-85,-87,-90,-92,-94,-96,-99,-101,-104,-106,-108,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'TRUE':([61,71,72,74,75,82,84,87,88,100,112,120,127,128,129,130,131,132,133,134,135,136,138,139,140,160,165,170,171,172,173,174,175,176,177,178,179,180,],[98,-52,98,98,98,98,98,98,98,98,98,98,98,98,-85,-87,-90,-92,-94,-96,-99,-101,-104,-106,-108,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'FALSE':([61,71,72,74,75,82,84,87,88,100,112,120,127,128,129,130,131,132,133,134,135,136,138,139,140,160,165,170,171,172,173,174,175,176,177,178,179,180,],[99,-52,99,99,99,99,99,99,99,99,99,99,99,99,-85,-87,-90,-92,-94,-96,-99,-101,-104,-106,-108,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'COMMA':([66,67,68,73,78,79,80,81,83,85,86,89,90,91,92,93,94,95,96,97,98,99,103,105,106,110,113,115,116,117,118,119,121,123,124,137,141,142,146,154,155,161,162,168,169,181,186,191,194,195,196,198,200,201,202,203,204,205,206,207,208,209,210,],[109,-35,-38,-129,-81,-83,-88,-97,-102,-109,-113,-115,-116,-117,-54,-118,-119,-120,-121,-122,-123,-124,148,-23,148,-37,160,-62,-63,-53,-56,-57,165,-67,-68,-111,-110,-112,-24,-34,-36,-60,-55,-80,-82,-114,-22,-39,-59,-61,-58,-66,-84,-86,-89,-91,-93,-95,-98,-100,-103,-105,-107,]),'READ':([71,112,],[-52,158,]),'TIMES':([73,83,85,86,89,90,91,92,93,94,95,96,97,98,99,117,118,119,137,141,142,161,162,181,194,196,206,207,208,209,210,],[-129,138,-109,-113,-115,-116,-117,-54,-118,-119,-120,-121,-122,-123,-124,-53,-56,-57,-111,-110,-112,-60,-55,-114,-59,-58,138,138,-103,-105,-107,]),'DIVIDE':([73,83,85,86,89,90,91,92,93,94,95,96,97,98,99,117,118,119,137,141,142,161,162,181,194,196,206,207,208,209,210,],[-129,139,-109,-113,-115,-116,-117,-54,-118,-119,-120,-121,-122,-123,-124,-53,-56,-57,-111,-110,-112,-60,-55,-114,-59,-58,139,139,-103,-105,-107,]),'MODULO':([73,83,85,86,89,90,91,92,93,94,95,96,97,98,99,117,118,119,137,141,142,161,162,181,194,196,206,207,208,209,210,],[-129,140,-109,-113,-115,-116,-117,-54,-118,-119,-120,-121,-122,-123,-124,-53,-56,-57,-111,-110,-112,-60,-55,-114,-59,-58,140,140,-103,-105,-107,]),'LTHAN_EQUAL':([73,81,83,85,86,89,90,91,92,93,94,95,96,97,98,99,117,118,119,137,141,142,161,162,181,194,196,206,207,208,209,210,],[-129,131,-102,-109,-113,-115,-116,-117,-54,-118,-119,-120,-121,-122,-123,-124,-53,-56,-57,-111,-110,-112,-60,-55,-114,-59,-58,-98,-100,-103,-105,-107,]),'LTHAN':([73,81,83,85,86,89,90,91,92,93,94,95,96,97,98,99,117,118,119,137,141,142,161,162,181,194,196,206,207,208,209,210,],[-129,132,-102,-109,-113,-115,-116,-117,-54,-118,-119,-120,-121,-122,-123,-124,-53,-56,-57,-111,-110,-112,-60,-55,-114,-59,-58,-98,-100,-103,-105,-107,]),'GTHAN_EQUAL':([73,81,83,85,86,89,90,91,92,93,94,95,96,97,98,99,117,118,119,137,141,142,161,162,181,194,196,206,207,208,209,210,],[-129,133,-102,-109,-113,-115,-116,-117,-54,-118,-119,-120,-121,-122,-123,-124,-53,-56,-57,-111,-110,-112,-60,-55,-114,-59,-58,-98,-100,-103,-105,-107,]),'GTHAN':([73,81,83,85,86,89,90,91,92,93,94,95,96,97,98,99,117,118,119,137,141,142,161,162,181,194,196,206,207,208,209,210,],[-129,134,-102,-109,-113,-115,-116,-117,-54,-118,-119,-120,-121,-122,-123,-124,-53,-56,-57,-111,-110,-112,-60,-55,-114,-59,-58,-98,-100,-103,-105,-107,]),'EQUAL':([73,80,81,83,85,86,89,90,91,92,93,94,95,96,97,98,99,117,118,119,137,141,142,161,162,181,194,196,202,203,204,205,206,207,208,209,210,],[-129,129,-97,-102,-109,-113,-115,-116,-117,-54,-118,-119,-120,-121,-122,-123,-124,-53,-56,-57,-111,-110,-112,-60,-55,-114,-59,-58,-89,-91,-93,-95,-98,-100,-103,-105,-107,]),'NEQUAL':([73,80,81,83,85,86,89,90,91,92,93,94,95,96,97,98,99,117,118,119,137,141,142,161,162,181,194,196,202,203,204,205,206,207,208,209,210,],[-129,130,-97,-102,-109,-113,-115,-116,-117,-54,-118,-119,-120,-121,-122,-123,-124,-53,-56,-57,-111,-110,-112,-60,-55,-114,-59,-58,-89,-91,-93,-95,-98,-100,-103,-105,-107,]),'AND':([73,79,80,81,83,85,86,89,90,91,92,93,94,95,96,97,98,99,117,118,119,137,141,142,161,162,181,194,196,200,201,202,203,204,205,206,207,208,209,210,],[-129,128,-88,-97,-102,-109,-113,-115,-116,-117,-54,-118,-119,-120,-121,-122,-123,-124,-53,-56,-57,-111,-110,-112,-60,-55,-114,-59,-58,-84,-86,-89,-91,-93,-95,-98,-100,-103,-105,-107,]),'OR':([73,76,78,79,80,81,83,85,86,89,90,91,92,93,94,95,96,97,98,99,116,117,118,119,124,125,137,141,142,143,144,157,161,162,163,168,169,181,194,196,200,201,202,203,204,205,206,207,208,209,210,],[-129,127,-81,-83,-88,-97,-102,-109,-113,-115,-116,-117,-54,-118,-119,-120,-121,-122,-123,-124,127,-53,-56,-57,127,127,-111,-110,-112,127,127,127,-60,-55,127,-80,-82,-114,-59,-58,-84,-86,-89,-91,-93,-95,-98,-100,-103,-105,-107,]),'RBRACKET':([73,78,79,80,81,83,85,86,89,90,91,92,93,94,95,96,97,98,99,117,118,119,137,141,142,156,161,162,163,168,169,181,194,196,200,201,202,203,204,205,206,207,208,209,210,],[-129,-81,-83,-88,-97,-102,-109,-113,-115,-116,-117,-54,-118,-119,-120,-121,-122,-123,-124,-53,-56,-57,-111,-110,-112,191,-60,-55,196,-80,-82,-114,-59,-58,-84,-86,-89,-91,-93,-95,-98,-100,-103,-105,-107,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'init':([0,],[2,]),'start':([2,],[3,]),'global_variables_declaration':([2,],[4,]),'functions_definition':([2,4,],[5,11,]),'entry_point_definition':([2,4,5,11,],[6,12,13,23,]),'single_function_definition':([2,4,5,11,],[8,8,14,14,]),'parsed_global_scope':([7,],[15,]),'parsed_main_id':([9,],[16,]),'type':([10,29,33,64,65,148,],[17,35,35,102,102,102,]),'variables_declaration':([15,38,],[24,45,]),'parsed_function_return_type':([17,],[27,]),'parsed_function_void_return_type':([18,],[28,]),'distinct_type_variables_declaration':([29,],[33,]),'shared_type_variables_declaration':([29,33,],[34,42,]),'local_variables_declaration':([30,104,107,147,151,],[36,149,152,184,188,]),'instruction_block':([30,36,104,107,147,149,151,152,182,184,188,199,221,223,227,],[37,44,150,153,185,187,189,190,211,213,214,216,224,226,228,]),'parsed_function_id':([31,32,],[40,41,]),'parsed_type':([35,],[43,]),'statements':([39,],[46,]),'single_statement':([39,46,],[48,70,]),'assignment':([39,46,],[49,49,]),'function_call':([39,46,61,72,74,75,82,84,87,88,100,112,120,127,128,160,165,170,171,172,173,174,175,176,177,178,179,180,],[50,50,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'print':([39,46,],[51,51,]),'conditional':([39,46,],[52,52,]),'loop':([39,46,],[53,53,]),'return':([39,46,],[54,54,]),'variable_access':([39,46,61,72,74,75,82,84,87,88,100,112,120,127,128,160,165,170,171,172,173,174,175,176,177,178,179,180,],[55,55,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'while':([39,46,],[59,59,]),'for':([39,46,],[60,60,]),'shared_type_variables_declaration_list':([43,],[66,]),'single_variable_declaration':([43,109,],[67,154,]),'parsed_id_variable_access':([56,92,],[73,73,]),'expr':([61,72,74,75,88,100,112,120,160,165,],[76,116,124,125,143,144,157,163,116,124,]),'and_expr':([61,72,74,75,88,100,112,120,127,160,165,],[78,78,78,78,78,78,78,78,168,78,78,]),'equality_expr':([61,72,74,75,88,100,112,120,127,128,160,165,],[79,79,79,79,79,79,79,79,79,169,79,79,]),'relational_expr':([61,72,74,75,88,100,112,120,127,128,160,165,170,171,],[80,80,80,80,80,80,80,80,80,80,80,80,200,201,]),'additive_expr':([61,72,74,75,88,100,112,120,127,128,160,165,170,171,172,173,174,175,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,202,203,204,205,]),'multiplicative_expr':([61,72,74,75,88,100,112,120,127,128,160,165,170,171,172,173,174,175,176,177,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,206,207,]),'unary_expr':([61,72,74,75,88,100,112,120,127,128,160,165,170,171,172,173,174,175,176,177,178,179,180,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,208,209,210,]),'postfix_expr':([61,72,74,75,82,84,87,88,100,112,120,127,128,160,165,170,171,172,173,174,175,176,177,178,179,180,],[86,86,86,86,137,141,142,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'constant':([61,72,74,75,82,84,87,88,100,112,120,127,128,160,165,170,171,172,173,174,175,176,177,178,179,180,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'constant_bool':([61,72,74,75,82,84,87,88,100,112,120,127,128,160,165,170,171,172,173,174,175,176,177,178,179,180,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'function_definition_params':([64,65,],[103,106,]),'single_function_definition_param':([64,65,148,],[105,105,186,]),'dim_definition':([68,110,],[110,155,]),'parsed_asgmt':([71,],[112,]),'function_call_params':([72,],[113,]),'single_function_call_param':([72,160,],[115,195,]),'dims_access':([73,],[117,]),'single_dim_access':([73,118,],[118,162,]),'empty':([73,],[119,]),'print_params':([74,],[121,]),'single_print_param':([74,165,],[123,198,]),'parsed_equal':([129,],[170,]),'parsed_nequal':([130,],[171,]),'parsed_lthan_equal':([131,],[172,]),'parsed_lthan':([132,],[173,]),'parsed_gthan_equal':([133,],[174,]),'parsed_gthan':([134,],[175,]),'parsed_plus':([135,],[176,]),'parsed_minus':([136,],[177,]),'parsed_times':([138,],[178,]),'parsed_divide':([139,],[179,]),'parsed_modulo':([140,],[180,]),'parsed_if_expression':([167,],[199,]),'parsed_else':([219,],[221,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> init start','program',2,'p_program','parser.py',875),
  ('init -> <empty>','init',0,'p_init','parser.py',881),
  ('start -> global_variables_declaration functions_definition entry_point_definition','start',3,'p_start_1','parser.py',887),
  ('start -> global_variables_declaration entry_point_definition','start',2,'p_start_2','parser.py',891),
  ('start -> functions_definition entry_point_definition','start',2,'p_start_3','parser.py',895),
  ('start -> entry_point_definition','start',1,'p_start_4','parser.py',899),
  ('global_variables_declaration -> GLOBAL parsed_global_scope variables_declaration','global_variables_declaration',3,'p_global_variables_declaration','parser.py',903),
  ('parsed_global_scope -> <empty>','parsed_global_scope',0,'p_parsed_global_scope','parser.py',907),
  ('functions_definition -> functions_definition single_function_definition','functions_definition',2,'p_functions_definition_1','parser.py',912),
  ('functions_definition -> single_function_definition','functions_definition',1,'p_functions_definition_2','parser.py',916),
  ('single_function_definition -> FUNCTION type parsed_function_return_type ID parsed_function_id LPAREN function_definition_params RPAREN local_variables_declaration instruction_block','single_function_definition',10,'p_single_function_definition_primitive_type_1','parser.py',920),
  ('single_function_definition -> FUNCTION type parsed_function_return_type ID parsed_function_id LPAREN function_definition_params RPAREN instruction_block','single_function_definition',9,'p_single_function_definition_primitive_type_2','parser.py',924),
  ('single_function_definition -> FUNCTION type parsed_function_return_type ID parsed_function_id LPAREN RPAREN local_variables_declaration instruction_block','single_function_definition',9,'p_single_function_definition_primitive_type_3','parser.py',928),
  ('single_function_definition -> FUNCTION type parsed_function_return_type ID parsed_function_id LPAREN RPAREN instruction_block','single_function_definition',8,'p_single_function_definition_primitive_type_4','parser.py',932),
  ('single_function_definition -> FUNCTION VOID parsed_function_void_return_type ID parsed_function_id LPAREN function_definition_params RPAREN local_variables_declaration instruction_block','single_function_definition',10,'p_single_function_definition_void_type_1','parser.py',936),
  ('single_function_definition -> FUNCTION VOID parsed_function_void_return_type ID parsed_function_id LPAREN function_definition_params RPAREN instruction_block','single_function_definition',9,'p_single_function_definition_void_type_2','parser.py',940),
  ('single_function_definition -> FUNCTION VOID parsed_function_void_return_type ID parsed_function_id LPAREN RPAREN local_variables_declaration instruction_block','single_function_definition',9,'p_single_function_definition_void_type_3','parser.py',944),
  ('single_function_definition -> FUNCTION VOID parsed_function_void_return_type ID parsed_function_id LPAREN RPAREN instruction_block','single_function_definition',8,'p_single_function_definition_void_type_4','parser.py',948),
  ('parsed_function_id -> <empty>','parsed_function_id',0,'p_parsed_function_id','parser.py',952),
  ('parsed_function_return_type -> <empty>','parsed_function_return_type',0,'p_parsed_function_return_type','parser.py',963),
  ('parsed_function_void_return_type -> <empty>','parsed_function_void_return_type',0,'p_parsed_function_void_return_type','parser.py',969),
  ('function_definition_params -> function_definition_params COMMA single_function_definition_param','function_definition_params',3,'p_function_definition_params_1','parser.py',975),
  ('function_definition_params -> single_function_definition_param','function_definition_params',1,'p_function_definition_params_2','parser.py',979),
  ('single_function_definition_param -> type ID','single_function_definition_param',2,'p_single_function_definition_param','parser.py',983),
  ('entry_point_definition -> START parsed_main_id LPAREN RPAREN local_variables_declaration instruction_block','entry_point_definition',6,'p_entry_point_definition_1','parser.py',997),
  ('entry_point_definition -> START parsed_main_id LPAREN RPAREN instruction_block','entry_point_definition',5,'p_entry_point_definition_2','parser.py',1001),
  ('parsed_main_id -> <empty>','parsed_main_id',0,'p_parsed_main_id','parser.py',1005),
  ('local_variables_declaration -> LOCAL variables_declaration','local_variables_declaration',2,'p_local_variables_declaration','parser.py',1010),
  ('variables_declaration -> VARIABLES COLON distinct_type_variables_declaration','variables_declaration',3,'p_variables_declaration','parser.py',1014),
  ('distinct_type_variables_declaration -> distinct_type_variables_declaration shared_type_variables_declaration','distinct_type_variables_declaration',2,'p_distinct_type_variables_declaration_1','parser.py',1018),
  ('distinct_type_variables_declaration -> shared_type_variables_declaration','distinct_type_variables_declaration',1,'p_distinct_type_variables_declaration_2','parser.py',1022),
  ('shared_type_variables_declaration -> type parsed_type shared_type_variables_declaration_list SEMI','shared_type_variables_declaration',4,'p_shared_type_variables_declaration','parser.py',1026),
  ('parsed_type -> <empty>','parsed_type',0,'p_parsed_type','parser.py',1030),
  ('shared_type_variables_declaration_list -> shared_type_variables_declaration_list COMMA single_variable_declaration','shared_type_variables_declaration_list',3,'p_shared_type_variables_declaration_list_1','parser.py',1036),
  ('shared_type_variables_declaration_list -> single_variable_declaration','shared_type_variables_declaration_list',1,'p_shared_type_variables_declaration_list_2','parser.py',1040),
  ('single_variable_declaration -> ID dim_definition dim_definition','single_variable_declaration',3,'p_single_variable_declaration_1','parser.py',1044),
  ('single_variable_declaration -> ID dim_definition','single_variable_declaration',2,'p_single_variable_declaration_2','parser.py',1048),
  ('single_variable_declaration -> ID','single_variable_declaration',1,'p_single_variable_declaration_3','parser.py',1052),
  ('dim_definition -> LBRACKET CONST_INT RBRACKET','dim_definition',3,'p_dim_definition','parser.py',1067),
  ('instruction_block -> LBRACE statements RBRACE','instruction_block',3,'p_instruction_block_1','parser.py',1071),
  ('instruction_block -> LBRACE RBRACE','instruction_block',2,'p_instruction_block_2','parser.py',1075),
  ('statements -> statements single_statement','statements',2,'p_statements_1','parser.py',1079),
  ('statements -> single_statement','statements',1,'p_statements_2','parser.py',1083),
  ('single_statement -> assignment','single_statement',1,'p_single_statement_1','parser.py',1087),
  ('single_statement -> function_call','single_statement',1,'p_single_statement_2','parser.py',1091),
  ('single_statement -> print','single_statement',1,'p_single_statement_4','parser.py',1099),
  ('single_statement -> conditional','single_statement',1,'p_single_statement_5','parser.py',1103),
  ('single_statement -> loop','single_statement',1,'p_single_statement_6','parser.py',1107),
  ('single_statement -> return','single_statement',1,'p_single_statement_7','parser.py',1111),
  ('assignment -> variable_access ASGMT parsed_asgmt expr SEMI','assignment',5,'p_assignment_1','parser.py',1115),
  ('assignment -> variable_access ASGMT parsed_asgmt READ LPAREN RPAREN SEMI','assignment',7,'p_assignment_2','parser.py',1125),
  ('parsed_asgmt -> <empty>','parsed_asgmt',0,'p_parsed_asgmt','parser.py',1134),
  ('variable_access -> ID parsed_id_variable_access dims_access','variable_access',3,'p_variable_access','parser.py',1139),
  ('parsed_id_variable_access -> <empty>','parsed_id_variable_access',0,'p_parsed_id_variable_access','parser.py',1143),
  ('dims_access -> single_dim_access single_dim_access','dims_access',2,'p_dims_access_1','parser.py',1153),
  ('dims_access -> single_dim_access','dims_access',1,'p_dims_access_2','parser.py',1157),
  ('dims_access -> empty','dims_access',1,'p_dims_access_3','parser.py',1161),
  ('single_dim_access -> LBRACKET expr RBRACKET','single_dim_access',3,'p_single_dim_access','parser.py',1165),
  ('function_call -> ID LPAREN function_call_params RPAREN SEMI','function_call',5,'p_function_call_1','parser.py',1169),
  ('function_call -> ID LPAREN RPAREN SEMI','function_call',4,'p_function_call_2','parser.py',1173),
  ('function_call_params -> function_call_params COMMA single_function_call_param','function_call_params',3,'p_function_call_params_1','parser.py',1177),
  ('function_call_params -> single_function_call_param','function_call_params',1,'p_function_call_params_2','parser.py',1181),
  ('single_function_call_param -> expr','single_function_call_param',1,'p_single_function_call_param','parser.py',1185),
  ('print -> PRINT LPAREN print_params RPAREN SEMI','print',5,'p_print_1','parser.py',1196),
  ('print -> PRINT LPAREN RPAREN SEMI','print',4,'p_print_2','parser.py',1200),
  ('print_params -> print_params COMMA single_print_param','print_params',3,'p_print_params_1','parser.py',1204),
  ('print_params -> single_print_param','print_params',1,'p_print_params_2','parser.py',1208),
  ('single_print_param -> expr','single_print_param',1,'p_single_print_param_1','parser.py',1212),
  ('conditional -> IF LPAREN expr RPAREN parsed_if_expression instruction_block ELSE parsed_else instruction_block','conditional',9,'p_conditional_1','parser.py',1220),
  ('conditional -> IF LPAREN expr RPAREN parsed_if_expression instruction_block','conditional',6,'p_conditional_2','parser.py',1229),
  ('parsed_if_expression -> <empty>','parsed_if_expression',0,'p_parsed_if_expression','parser.py',1238),
  ('parsed_else -> <empty>','parsed_else',0,'p_parsed_else','parser.py',1250),
  ('loop -> while','loop',1,'p_loop_1','parser.py',1265),
  ('loop -> for','loop',1,'p_loop_2','parser.py',1269),
  ('while -> WHILE LPAREN expr RPAREN instruction_block','while',5,'p_while','parser.py',1273),
  ('for -> FROM LPAREN ID ASGMT CONST_INT COLON CONST_INT COLON CONST_INT RPAREN instruction_block','for',11,'p_for_1','parser.py',1277),
  ('for -> FROM LPAREN ID ASGMT CONST_INT COLON CONST_INT RPAREN instruction_block','for',9,'p_for_2','parser.py',1281),
  ('return -> RETURN expr SEMI','return',3,'p_return_1','parser.py',1285),
  ('return -> RETURN SEMI','return',2,'p_return_2','parser.py',1289),
  ('expr -> expr OR and_expr','expr',3,'p_expr_1','parser.py',1293),
  ('expr -> and_expr','expr',1,'p_expr_2','parser.py',1297),
  ('and_expr -> equality_expr AND equality_expr','and_expr',3,'p_and_expr_1','parser.py',1301),
  ('and_expr -> equality_expr','and_expr',1,'p_and_expr_2','parser.py',1305),
  ('equality_expr -> relational_expr EQUAL parsed_equal relational_expr','equality_expr',4,'p_equality_expr_1','parser.py',1309),
  ('parsed_equal -> <empty>','parsed_equal',0,'p_parsed_equal','parser.py',1322),
  ('equality_expr -> relational_expr NEQUAL parsed_nequal relational_expr','equality_expr',4,'p_equality_expr_2','parser.py',1327),
  ('parsed_nequal -> <empty>','parsed_nequal',0,'p_parsed_nequal','parser.py',1340),
  ('equality_expr -> relational_expr','equality_expr',1,'p_equality_expr_3','parser.py',1345),
  ('relational_expr -> additive_expr LTHAN_EQUAL parsed_lthan_equal additive_expr','relational_expr',4,'p_relational_expr_1','parser.py',1349),
  ('parsed_lthan_equal -> <empty>','parsed_lthan_equal',0,'p_parsed_lthan_equal','parser.py',1362),
  ('relational_expr -> additive_expr LTHAN parsed_lthan additive_expr','relational_expr',4,'p_relational_expr_2','parser.py',1367),
  ('parsed_lthan -> <empty>','parsed_lthan',0,'p_parsed_lthan','parser.py',1380),
  ('relational_expr -> additive_expr GTHAN_EQUAL parsed_gthan_equal additive_expr','relational_expr',4,'p_relational_expr_3','parser.py',1385),
  ('parsed_gthan_equal -> <empty>','parsed_gthan_equal',0,'p_parsed_gthan_equal','parser.py',1398),
  ('relational_expr -> additive_expr GTHAN parsed_gthan additive_expr','relational_expr',4,'p_relational_expr_4','parser.py',1403),
  ('parsed_gthan -> <empty>','parsed_gthan',0,'p_parsed_gthan','parser.py',1416),
  ('relational_expr -> additive_expr','relational_expr',1,'p_relational_expr_5','parser.py',1421),
  ('additive_expr -> additive_expr PLUS parsed_plus multiplicative_expr','additive_expr',4,'p_additive_expr_1','parser.py',1425),
  ('parsed_plus -> <empty>','parsed_plus',0,'p_parsed_plus','parser.py',1438),
  ('additive_expr -> additive_expr MINUS parsed_minus multiplicative_expr','additive_expr',4,'p_additive_expr_2','parser.py',1443),
  ('parsed_minus -> <empty>','parsed_minus',0,'p_parsed_minus','parser.py',1456),
  ('additive_expr -> multiplicative_expr','additive_expr',1,'p_additive_expr_3','parser.py',1461),
  ('multiplicative_expr -> multiplicative_expr TIMES parsed_times unary_expr','multiplicative_expr',4,'p_multiplicative_expr_1','parser.py',1465),
  ('parsed_times -> <empty>','parsed_times',0,'p_parsed_times','parser.py',1478),
  ('multiplicative_expr -> multiplicative_expr DIVIDE parsed_divide unary_expr','multiplicative_expr',4,'p_multiplicative_expr_2','parser.py',1483),
  ('parsed_divide -> <empty>','parsed_divide',0,'p_parsed_divide','parser.py',1496),
  ('multiplicative_expr -> multiplicative_expr MODULO parsed_modulo unary_expr','multiplicative_expr',4,'p_multiplicative_expr_3','parser.py',1501),
  ('parsed_modulo -> <empty>','parsed_modulo',0,'p_parsed_modulo','parser.py',1514),
  ('multiplicative_expr -> unary_expr','multiplicative_expr',1,'p_multiplicative_expr_4','parser.py',1519),
  ('unary_expr -> MINUS postfix_expr','unary_expr',2,'p_unary_expr_1','parser.py',1523),
  ('unary_expr -> PLUS postfix_expr','unary_expr',2,'p_unary_expr_2','parser.py',1527),
  ('unary_expr -> NOT postfix_expr','unary_expr',2,'p_unary_expr_3','parser.py',1531),
  ('unary_expr -> postfix_expr','unary_expr',1,'p_unary_expr_4','parser.py',1535),
  ('postfix_expr -> LPAREN expr RPAREN','postfix_expr',3,'p_postfix_expr_1','parser.py',1539),
  ('postfix_expr -> variable_access','postfix_expr',1,'p_postfix_expr_2','parser.py',1543),
  ('postfix_expr -> function_call','postfix_expr',1,'p_postfix_expr_3','parser.py',1547),
  ('postfix_expr -> constant','postfix_expr',1,'p_postfix_expr_4','parser.py',1551),
  ('constant -> CONST_INT','constant',1,'p_constant_1','parser.py',1555),
  ('constant -> CONST_REAL','constant',1,'p_constant_2','parser.py',1565),
  ('constant -> CONST_CHAR','constant',1,'p_constant_3','parser.py',1575),
  ('constant -> CONST_STRING','constant',1,'p_constant_4','parser.py',1585),
  ('constant -> constant_bool','constant',1,'p_constant_5','parser.py',1595),
  ('constant_bool -> TRUE','constant_bool',1,'p_constant_bool_1','parser.py',1605),
  ('constant_bool -> FALSE','constant_bool',1,'p_constant_bool_2','parser.py',1610),
  ('type -> INT','type',1,'p_type_1','parser.py',1615),
  ('type -> REAL','type',1,'p_type_2','parser.py',1620),
  ('type -> CHAR','type',1,'p_type_3','parser.py',1625),
  ('type -> BOOL','type',1,'p_type_4','parser.py',1630),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',1635),
]
