Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    ASGMT
    BOOL_FALSE
    BOOL_TRUE
    CONST_CHAR
    CONST_FLOAT
    CONST_STRING
    DIVIDE
    ELSE
    EQUAL
    FROM
    GTHAN
    GTHAN_EQUAL
    IF
    LTHAN
    LTHAN_EQUAL
    MINUS
    MODULO
    NEQUAL
    NOT
    OR
    PLUS
    PRINT
    READ
    TIMES
    WHILE

Grammar

Rule 0     S' -> start
Rule 1     start -> global_variables_declaration function_definition entry_point_definition
Rule 2     global_variables_declaration -> GLOBAL variables_declaration
Rule 3     global_variables_declaration -> empty
Rule 4     function_definition -> function_definition function_definition
Rule 5     function_definition -> FUNCTION type ID LPAREN RPAREN local_variables_declaration instruction_block
Rule 6     function_definition -> FUNCTION VOID ID LPAREN RPAREN local_variables_declaration instruction_block
Rule 7     function_definition -> FUNCTION type ID LPAREN function_definition_param RPAREN local_variables_declaration instruction_block
Rule 8     function_definition -> FUNCTION VOID ID LPAREN function_definition_param RPAREN local_variables_declaration instruction_block
Rule 9     function_definition -> empty
Rule 10    function_definition_param -> function_definition_param COMMA function_definition_param
Rule 11    function_definition_param -> type ID dims_definition
Rule 12    dims_definition -> dims_definition dims_definition
Rule 13    dims_definition -> LBRACKET CONST_INT RBRACKET
Rule 14    dims_definition -> empty
Rule 15    entry_point_definition -> START LPAREN RPAREN local_variables_declaration instruction_block
Rule 16    local_variables_declaration -> LOCAL variables_declaration
Rule 17    local_variables_declaration -> empty
Rule 18    instruction_block -> LBRACE statement RBRACE
Rule 19    variables_declaration -> VARIABLES COLON variable_declaration
Rule 20    variable_declaration -> variable_declaration variable_declaration
Rule 21    variable_declaration -> type ID SEMI
Rule 22    type -> INT
Rule 23    type -> REAL
Rule 24    type -> CHAR
Rule 25    type -> BOOL
Rule 26    statement -> empty
Rule 27    empty -> <empty>

Terminals, with rules where they appear

AND                  : 
ASGMT                : 
BOOL                 : 25
BOOL_FALSE           : 
BOOL_TRUE            : 
CHAR                 : 24
COLON                : 19
COMMA                : 10
CONST_CHAR           : 
CONST_FLOAT          : 
CONST_INT            : 13
CONST_STRING         : 
DIVIDE               : 
ELSE                 : 
EQUAL                : 
FROM                 : 
FUNCTION             : 5 6 7 8
GLOBAL               : 2
GTHAN                : 
GTHAN_EQUAL          : 
ID                   : 5 6 7 8 11 21
IF                   : 
INT                  : 22
LBRACE               : 18
LBRACKET             : 13
LOCAL                : 16
LPAREN               : 5 6 7 8 15
LTHAN                : 
LTHAN_EQUAL          : 
MINUS                : 
MODULO               : 
NEQUAL               : 
NOT                  : 
OR                   : 
PLUS                 : 
PRINT                : 
RBRACE               : 18
RBRACKET             : 13
READ                 : 
REAL                 : 23
RPAREN               : 5 6 7 8 15
SEMI                 : 21
START                : 15
TIMES                : 
VARIABLES            : 19
VOID                 : 6 8
WHILE                : 
error                : 

Nonterminals, with rules where they appear

dims_definition      : 11 12 12
empty                : 3 9 14 17 26
entry_point_definition : 1
function_definition  : 1 4 4
function_definition_param : 7 8 10 10
global_variables_declaration : 1
instruction_block    : 5 6 7 8 15
local_variables_declaration : 5 6 7 8 15
start                : 0
statement            : 18
type                 : 5 7 11 21
variable_declaration : 19 20 20
variables_declaration : 2 16

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . global_variables_declaration function_definition entry_point_definition
    (2) global_variables_declaration -> . GLOBAL variables_declaration
    (3) global_variables_declaration -> . empty
    (27) empty -> .

    GLOBAL          shift and go to state 3
    FUNCTION        reduce using rule 27 (empty -> .)
    START           reduce using rule 27 (empty -> .)

    start                          shift and go to state 1
    global_variables_declaration   shift and go to state 2
    empty                          shift and go to state 4

state 1

    (0) S' -> start .



state 2

    (1) start -> global_variables_declaration . function_definition entry_point_definition
    (4) function_definition -> . function_definition function_definition
    (5) function_definition -> . FUNCTION type ID LPAREN RPAREN local_variables_declaration instruction_block
    (6) function_definition -> . FUNCTION VOID ID LPAREN RPAREN local_variables_declaration instruction_block
    (7) function_definition -> . FUNCTION type ID LPAREN function_definition_param RPAREN local_variables_declaration instruction_block
    (8) function_definition -> . FUNCTION VOID ID LPAREN function_definition_param RPAREN local_variables_declaration instruction_block
    (9) function_definition -> . empty
    (27) empty -> .

  ! shift/reduce conflict for FUNCTION resolved as shift
    FUNCTION        shift and go to state 6
    START           reduce using rule 27 (empty -> .)

  ! FUNCTION        [ reduce using rule 27 (empty -> .) ]

    function_definition            shift and go to state 5
    empty                          shift and go to state 7

state 3

    (2) global_variables_declaration -> GLOBAL . variables_declaration
    (19) variables_declaration -> . VARIABLES COLON variable_declaration

    VARIABLES       shift and go to state 9

    variables_declaration          shift and go to state 8

state 4

    (3) global_variables_declaration -> empty .

    FUNCTION        reduce using rule 3 (global_variables_declaration -> empty .)
    START           reduce using rule 3 (global_variables_declaration -> empty .)


state 5

    (1) start -> global_variables_declaration function_definition . entry_point_definition
    (4) function_definition -> function_definition . function_definition
    (15) entry_point_definition -> . START LPAREN RPAREN local_variables_declaration instruction_block
    (4) function_definition -> . function_definition function_definition
    (5) function_definition -> . FUNCTION type ID LPAREN RPAREN local_variables_declaration instruction_block
    (6) function_definition -> . FUNCTION VOID ID LPAREN RPAREN local_variables_declaration instruction_block
    (7) function_definition -> . FUNCTION type ID LPAREN function_definition_param RPAREN local_variables_declaration instruction_block
    (8) function_definition -> . FUNCTION VOID ID LPAREN function_definition_param RPAREN local_variables_declaration instruction_block
    (9) function_definition -> . empty
    (27) empty -> .

  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for START resolved as shift
    START           shift and go to state 12
    FUNCTION        shift and go to state 6

  ! FUNCTION        [ reduce using rule 27 (empty -> .) ]
  ! START           [ reduce using rule 27 (empty -> .) ]

    function_definition            shift and go to state 10
    entry_point_definition         shift and go to state 11
    empty                          shift and go to state 7

state 6

    (5) function_definition -> FUNCTION . type ID LPAREN RPAREN local_variables_declaration instruction_block
    (6) function_definition -> FUNCTION . VOID ID LPAREN RPAREN local_variables_declaration instruction_block
    (7) function_definition -> FUNCTION . type ID LPAREN function_definition_param RPAREN local_variables_declaration instruction_block
    (8) function_definition -> FUNCTION . VOID ID LPAREN function_definition_param RPAREN local_variables_declaration instruction_block
    (22) type -> . INT
    (23) type -> . REAL
    (24) type -> . CHAR
    (25) type -> . BOOL

    VOID            shift and go to state 14
    INT             shift and go to state 15
    REAL            shift and go to state 16
    CHAR            shift and go to state 17
    BOOL            shift and go to state 18

    type                           shift and go to state 13

state 7

    (9) function_definition -> empty .

    START           reduce using rule 9 (function_definition -> empty .)
    FUNCTION        reduce using rule 9 (function_definition -> empty .)


state 8

    (2) global_variables_declaration -> GLOBAL variables_declaration .

    FUNCTION        reduce using rule 2 (global_variables_declaration -> GLOBAL variables_declaration .)
    START           reduce using rule 2 (global_variables_declaration -> GLOBAL variables_declaration .)


state 9

    (19) variables_declaration -> VARIABLES . COLON variable_declaration

    COLON           shift and go to state 19


state 10

    (4) function_definition -> function_definition function_definition .
    (4) function_definition -> function_definition . function_definition
    (4) function_definition -> . function_definition function_definition
    (5) function_definition -> . FUNCTION type ID LPAREN RPAREN local_variables_declaration instruction_block
    (6) function_definition -> . FUNCTION VOID ID LPAREN RPAREN local_variables_declaration instruction_block
    (7) function_definition -> . FUNCTION type ID LPAREN function_definition_param RPAREN local_variables_declaration instruction_block
    (8) function_definition -> . FUNCTION VOID ID LPAREN function_definition_param RPAREN local_variables_declaration instruction_block
    (9) function_definition -> . empty
    (27) empty -> .

  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! reduce/reduce conflict for START resolved using rule 4 (function_definition -> function_definition function_definition .)
    START           reduce using rule 4 (function_definition -> function_definition function_definition .)
    FUNCTION        shift and go to state 6

  ! FUNCTION        [ reduce using rule 4 (function_definition -> function_definition function_definition .) ]
  ! FUNCTION        [ reduce using rule 27 (empty -> .) ]
  ! START           [ reduce using rule 27 (empty -> .) ]

    function_definition            shift and go to state 10
    empty                          shift and go to state 7

state 11

    (1) start -> global_variables_declaration function_definition entry_point_definition .

    $end            reduce using rule 1 (start -> global_variables_declaration function_definition entry_point_definition .)


state 12

    (15) entry_point_definition -> START . LPAREN RPAREN local_variables_declaration instruction_block

    LPAREN          shift and go to state 20


state 13

    (5) function_definition -> FUNCTION type . ID LPAREN RPAREN local_variables_declaration instruction_block
    (7) function_definition -> FUNCTION type . ID LPAREN function_definition_param RPAREN local_variables_declaration instruction_block

    ID              shift and go to state 21


state 14

    (6) function_definition -> FUNCTION VOID . ID LPAREN RPAREN local_variables_declaration instruction_block
    (8) function_definition -> FUNCTION VOID . ID LPAREN function_definition_param RPAREN local_variables_declaration instruction_block

    ID              shift and go to state 22


state 15

    (22) type -> INT .

    ID              reduce using rule 22 (type -> INT .)


state 16

    (23) type -> REAL .

    ID              reduce using rule 23 (type -> REAL .)


state 17

    (24) type -> CHAR .

    ID              reduce using rule 24 (type -> CHAR .)


state 18

    (25) type -> BOOL .

    ID              reduce using rule 25 (type -> BOOL .)


state 19

    (19) variables_declaration -> VARIABLES COLON . variable_declaration
    (20) variable_declaration -> . variable_declaration variable_declaration
    (21) variable_declaration -> . type ID SEMI
    (22) type -> . INT
    (23) type -> . REAL
    (24) type -> . CHAR
    (25) type -> . BOOL

    INT             shift and go to state 15
    REAL            shift and go to state 16
    CHAR            shift and go to state 17
    BOOL            shift and go to state 18

    variable_declaration           shift and go to state 23
    type                           shift and go to state 24

state 20

    (15) entry_point_definition -> START LPAREN . RPAREN local_variables_declaration instruction_block

    RPAREN          shift and go to state 25


state 21

    (5) function_definition -> FUNCTION type ID . LPAREN RPAREN local_variables_declaration instruction_block
    (7) function_definition -> FUNCTION type ID . LPAREN function_definition_param RPAREN local_variables_declaration instruction_block

    LPAREN          shift and go to state 26


state 22

    (6) function_definition -> FUNCTION VOID ID . LPAREN RPAREN local_variables_declaration instruction_block
    (8) function_definition -> FUNCTION VOID ID . LPAREN function_definition_param RPAREN local_variables_declaration instruction_block

    LPAREN          shift and go to state 27


state 23

    (19) variables_declaration -> VARIABLES COLON variable_declaration .
    (20) variable_declaration -> variable_declaration . variable_declaration
    (20) variable_declaration -> . variable_declaration variable_declaration
    (21) variable_declaration -> . type ID SEMI
    (22) type -> . INT
    (23) type -> . REAL
    (24) type -> . CHAR
    (25) type -> . BOOL

    FUNCTION        reduce using rule 19 (variables_declaration -> VARIABLES COLON variable_declaration .)
    START           reduce using rule 19 (variables_declaration -> VARIABLES COLON variable_declaration .)
    LBRACE          reduce using rule 19 (variables_declaration -> VARIABLES COLON variable_declaration .)
    INT             shift and go to state 15
    REAL            shift and go to state 16
    CHAR            shift and go to state 17
    BOOL            shift and go to state 18

    variable_declaration           shift and go to state 28
    type                           shift and go to state 24

state 24

    (21) variable_declaration -> type . ID SEMI

    ID              shift and go to state 29


state 25

    (15) entry_point_definition -> START LPAREN RPAREN . local_variables_declaration instruction_block
    (16) local_variables_declaration -> . LOCAL variables_declaration
    (17) local_variables_declaration -> . empty
    (27) empty -> .

    LOCAL           shift and go to state 31
    LBRACE          reduce using rule 27 (empty -> .)

    local_variables_declaration    shift and go to state 30
    empty                          shift and go to state 32

state 26

    (5) function_definition -> FUNCTION type ID LPAREN . RPAREN local_variables_declaration instruction_block
    (7) function_definition -> FUNCTION type ID LPAREN . function_definition_param RPAREN local_variables_declaration instruction_block
    (10) function_definition_param -> . function_definition_param COMMA function_definition_param
    (11) function_definition_param -> . type ID dims_definition
    (22) type -> . INT
    (23) type -> . REAL
    (24) type -> . CHAR
    (25) type -> . BOOL

    RPAREN          shift and go to state 34
    INT             shift and go to state 15
    REAL            shift and go to state 16
    CHAR            shift and go to state 17
    BOOL            shift and go to state 18

    type                           shift and go to state 33
    function_definition_param      shift and go to state 35

state 27

    (6) function_definition -> FUNCTION VOID ID LPAREN . RPAREN local_variables_declaration instruction_block
    (8) function_definition -> FUNCTION VOID ID LPAREN . function_definition_param RPAREN local_variables_declaration instruction_block
    (10) function_definition_param -> . function_definition_param COMMA function_definition_param
    (11) function_definition_param -> . type ID dims_definition
    (22) type -> . INT
    (23) type -> . REAL
    (24) type -> . CHAR
    (25) type -> . BOOL

    RPAREN          shift and go to state 36
    INT             shift and go to state 15
    REAL            shift and go to state 16
    CHAR            shift and go to state 17
    BOOL            shift and go to state 18

    function_definition_param      shift and go to state 37
    type                           shift and go to state 33

state 28

    (20) variable_declaration -> variable_declaration variable_declaration .
    (20) variable_declaration -> variable_declaration . variable_declaration
    (20) variable_declaration -> . variable_declaration variable_declaration
    (21) variable_declaration -> . type ID SEMI
    (22) type -> . INT
    (23) type -> . REAL
    (24) type -> . CHAR
    (25) type -> . BOOL

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for REAL resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    FUNCTION        reduce using rule 20 (variable_declaration -> variable_declaration variable_declaration .)
    START           reduce using rule 20 (variable_declaration -> variable_declaration variable_declaration .)
    LBRACE          reduce using rule 20 (variable_declaration -> variable_declaration variable_declaration .)
    INT             shift and go to state 15
    REAL            shift and go to state 16
    CHAR            shift and go to state 17
    BOOL            shift and go to state 18

  ! INT             [ reduce using rule 20 (variable_declaration -> variable_declaration variable_declaration .) ]
  ! REAL            [ reduce using rule 20 (variable_declaration -> variable_declaration variable_declaration .) ]
  ! CHAR            [ reduce using rule 20 (variable_declaration -> variable_declaration variable_declaration .) ]
  ! BOOL            [ reduce using rule 20 (variable_declaration -> variable_declaration variable_declaration .) ]

    variable_declaration           shift and go to state 28
    type                           shift and go to state 24

state 29

    (21) variable_declaration -> type ID . SEMI

    SEMI            shift and go to state 38


state 30

    (15) entry_point_definition -> START LPAREN RPAREN local_variables_declaration . instruction_block
    (18) instruction_block -> . LBRACE statement RBRACE

    LBRACE          shift and go to state 40

    instruction_block              shift and go to state 39

state 31

    (16) local_variables_declaration -> LOCAL . variables_declaration
    (19) variables_declaration -> . VARIABLES COLON variable_declaration

    VARIABLES       shift and go to state 9

    variables_declaration          shift and go to state 41

state 32

    (17) local_variables_declaration -> empty .

    LBRACE          reduce using rule 17 (local_variables_declaration -> empty .)


state 33

    (11) function_definition_param -> type . ID dims_definition

    ID              shift and go to state 42


state 34

    (5) function_definition -> FUNCTION type ID LPAREN RPAREN . local_variables_declaration instruction_block
    (16) local_variables_declaration -> . LOCAL variables_declaration
    (17) local_variables_declaration -> . empty
    (27) empty -> .

    LOCAL           shift and go to state 31
    LBRACE          reduce using rule 27 (empty -> .)

    local_variables_declaration    shift and go to state 43
    empty                          shift and go to state 32

state 35

    (7) function_definition -> FUNCTION type ID LPAREN function_definition_param . RPAREN local_variables_declaration instruction_block
    (10) function_definition_param -> function_definition_param . COMMA function_definition_param

    RPAREN          shift and go to state 44
    COMMA           shift and go to state 45


state 36

    (6) function_definition -> FUNCTION VOID ID LPAREN RPAREN . local_variables_declaration instruction_block
    (16) local_variables_declaration -> . LOCAL variables_declaration
    (17) local_variables_declaration -> . empty
    (27) empty -> .

    LOCAL           shift and go to state 31
    LBRACE          reduce using rule 27 (empty -> .)

    local_variables_declaration    shift and go to state 46
    empty                          shift and go to state 32

state 37

    (8) function_definition -> FUNCTION VOID ID LPAREN function_definition_param . RPAREN local_variables_declaration instruction_block
    (10) function_definition_param -> function_definition_param . COMMA function_definition_param

    RPAREN          shift and go to state 47
    COMMA           shift and go to state 45


state 38

    (21) variable_declaration -> type ID SEMI .

    INT             reduce using rule 21 (variable_declaration -> type ID SEMI .)
    REAL            reduce using rule 21 (variable_declaration -> type ID SEMI .)
    CHAR            reduce using rule 21 (variable_declaration -> type ID SEMI .)
    BOOL            reduce using rule 21 (variable_declaration -> type ID SEMI .)
    FUNCTION        reduce using rule 21 (variable_declaration -> type ID SEMI .)
    START           reduce using rule 21 (variable_declaration -> type ID SEMI .)
    LBRACE          reduce using rule 21 (variable_declaration -> type ID SEMI .)


state 39

    (15) entry_point_definition -> START LPAREN RPAREN local_variables_declaration instruction_block .

    $end            reduce using rule 15 (entry_point_definition -> START LPAREN RPAREN local_variables_declaration instruction_block .)


state 40

    (18) instruction_block -> LBRACE . statement RBRACE
    (26) statement -> . empty
    (27) empty -> .

    RBRACE          reduce using rule 27 (empty -> .)

    statement                      shift and go to state 48
    empty                          shift and go to state 49

state 41

    (16) local_variables_declaration -> LOCAL variables_declaration .

    LBRACE          reduce using rule 16 (local_variables_declaration -> LOCAL variables_declaration .)


state 42

    (11) function_definition_param -> type ID . dims_definition
    (12) dims_definition -> . dims_definition dims_definition
    (13) dims_definition -> . LBRACKET CONST_INT RBRACKET
    (14) dims_definition -> . empty
    (27) empty -> .

  ! shift/reduce conflict for LBRACKET resolved as shift
    LBRACKET        shift and go to state 51
    RPAREN          reduce using rule 27 (empty -> .)
    COMMA           reduce using rule 27 (empty -> .)

  ! LBRACKET        [ reduce using rule 27 (empty -> .) ]

    dims_definition                shift and go to state 50
    empty                          shift and go to state 52

state 43

    (5) function_definition -> FUNCTION type ID LPAREN RPAREN local_variables_declaration . instruction_block
    (18) instruction_block -> . LBRACE statement RBRACE

    LBRACE          shift and go to state 40

    instruction_block              shift and go to state 53

state 44

    (7) function_definition -> FUNCTION type ID LPAREN function_definition_param RPAREN . local_variables_declaration instruction_block
    (16) local_variables_declaration -> . LOCAL variables_declaration
    (17) local_variables_declaration -> . empty
    (27) empty -> .

    LOCAL           shift and go to state 31
    LBRACE          reduce using rule 27 (empty -> .)

    local_variables_declaration    shift and go to state 54
    empty                          shift and go to state 32

state 45

    (10) function_definition_param -> function_definition_param COMMA . function_definition_param
    (10) function_definition_param -> . function_definition_param COMMA function_definition_param
    (11) function_definition_param -> . type ID dims_definition
    (22) type -> . INT
    (23) type -> . REAL
    (24) type -> . CHAR
    (25) type -> . BOOL

    INT             shift and go to state 15
    REAL            shift and go to state 16
    CHAR            shift and go to state 17
    BOOL            shift and go to state 18

    function_definition_param      shift and go to state 55
    type                           shift and go to state 33

state 46

    (6) function_definition -> FUNCTION VOID ID LPAREN RPAREN local_variables_declaration . instruction_block
    (18) instruction_block -> . LBRACE statement RBRACE

    LBRACE          shift and go to state 40

    instruction_block              shift and go to state 56

state 47

    (8) function_definition -> FUNCTION VOID ID LPAREN function_definition_param RPAREN . local_variables_declaration instruction_block
    (16) local_variables_declaration -> . LOCAL variables_declaration
    (17) local_variables_declaration -> . empty
    (27) empty -> .

    LOCAL           shift and go to state 31
    LBRACE          reduce using rule 27 (empty -> .)

    local_variables_declaration    shift and go to state 57
    empty                          shift and go to state 32

state 48

    (18) instruction_block -> LBRACE statement . RBRACE

    RBRACE          shift and go to state 58


state 49

    (26) statement -> empty .

    RBRACE          reduce using rule 26 (statement -> empty .)


state 50

    (11) function_definition_param -> type ID dims_definition .
    (12) dims_definition -> dims_definition . dims_definition
    (12) dims_definition -> . dims_definition dims_definition
    (13) dims_definition -> . LBRACKET CONST_INT RBRACKET
    (14) dims_definition -> . empty
    (27) empty -> .

  ! shift/reduce conflict for LBRACKET resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 11 (function_definition_param -> type ID dims_definition .)
  ! reduce/reduce conflict for COMMA resolved using rule 11 (function_definition_param -> type ID dims_definition .)
    RPAREN          reduce using rule 11 (function_definition_param -> type ID dims_definition .)
    COMMA           reduce using rule 11 (function_definition_param -> type ID dims_definition .)
    LBRACKET        shift and go to state 51

  ! LBRACKET        [ reduce using rule 27 (empty -> .) ]
  ! RPAREN          [ reduce using rule 27 (empty -> .) ]
  ! COMMA           [ reduce using rule 27 (empty -> .) ]

    dims_definition                shift and go to state 59
    empty                          shift and go to state 52

state 51

    (13) dims_definition -> LBRACKET . CONST_INT RBRACKET

    CONST_INT       shift and go to state 60


state 52

    (14) dims_definition -> empty .

    LBRACKET        reduce using rule 14 (dims_definition -> empty .)
    RPAREN          reduce using rule 14 (dims_definition -> empty .)
    COMMA           reduce using rule 14 (dims_definition -> empty .)


state 53

    (5) function_definition -> FUNCTION type ID LPAREN RPAREN local_variables_declaration instruction_block .

    START           reduce using rule 5 (function_definition -> FUNCTION type ID LPAREN RPAREN local_variables_declaration instruction_block .)
    FUNCTION        reduce using rule 5 (function_definition -> FUNCTION type ID LPAREN RPAREN local_variables_declaration instruction_block .)


state 54

    (7) function_definition -> FUNCTION type ID LPAREN function_definition_param RPAREN local_variables_declaration . instruction_block
    (18) instruction_block -> . LBRACE statement RBRACE

    LBRACE          shift and go to state 40

    instruction_block              shift and go to state 61

state 55

    (10) function_definition_param -> function_definition_param COMMA function_definition_param .
    (10) function_definition_param -> function_definition_param . COMMA function_definition_param

  ! shift/reduce conflict for COMMA resolved as shift
    RPAREN          reduce using rule 10 (function_definition_param -> function_definition_param COMMA function_definition_param .)
    COMMA           shift and go to state 45

  ! COMMA           [ reduce using rule 10 (function_definition_param -> function_definition_param COMMA function_definition_param .) ]


state 56

    (6) function_definition -> FUNCTION VOID ID LPAREN RPAREN local_variables_declaration instruction_block .

    START           reduce using rule 6 (function_definition -> FUNCTION VOID ID LPAREN RPAREN local_variables_declaration instruction_block .)
    FUNCTION        reduce using rule 6 (function_definition -> FUNCTION VOID ID LPAREN RPAREN local_variables_declaration instruction_block .)


state 57

    (8) function_definition -> FUNCTION VOID ID LPAREN function_definition_param RPAREN local_variables_declaration . instruction_block
    (18) instruction_block -> . LBRACE statement RBRACE

    LBRACE          shift and go to state 40

    instruction_block              shift and go to state 62

state 58

    (18) instruction_block -> LBRACE statement RBRACE .

    $end            reduce using rule 18 (instruction_block -> LBRACE statement RBRACE .)
    START           reduce using rule 18 (instruction_block -> LBRACE statement RBRACE .)
    FUNCTION        reduce using rule 18 (instruction_block -> LBRACE statement RBRACE .)


state 59

    (12) dims_definition -> dims_definition dims_definition .
    (12) dims_definition -> dims_definition . dims_definition
    (12) dims_definition -> . dims_definition dims_definition
    (13) dims_definition -> . LBRACKET CONST_INT RBRACKET
    (14) dims_definition -> . empty
    (27) empty -> .

  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 12 (dims_definition -> dims_definition dims_definition .)
  ! reduce/reduce conflict for COMMA resolved using rule 12 (dims_definition -> dims_definition dims_definition .)
    RPAREN          reduce using rule 12 (dims_definition -> dims_definition dims_definition .)
    COMMA           reduce using rule 12 (dims_definition -> dims_definition dims_definition .)
    LBRACKET        shift and go to state 51

  ! LBRACKET        [ reduce using rule 12 (dims_definition -> dims_definition dims_definition .) ]
  ! LBRACKET        [ reduce using rule 27 (empty -> .) ]
  ! RPAREN          [ reduce using rule 27 (empty -> .) ]
  ! COMMA           [ reduce using rule 27 (empty -> .) ]

    dims_definition                shift and go to state 59
    empty                          shift and go to state 52

state 60

    (13) dims_definition -> LBRACKET CONST_INT . RBRACKET

    RBRACKET        shift and go to state 63


state 61

    (7) function_definition -> FUNCTION type ID LPAREN function_definition_param RPAREN local_variables_declaration instruction_block .

    START           reduce using rule 7 (function_definition -> FUNCTION type ID LPAREN function_definition_param RPAREN local_variables_declaration instruction_block .)
    FUNCTION        reduce using rule 7 (function_definition -> FUNCTION type ID LPAREN function_definition_param RPAREN local_variables_declaration instruction_block .)


state 62

    (8) function_definition -> FUNCTION VOID ID LPAREN function_definition_param RPAREN local_variables_declaration instruction_block .

    START           reduce using rule 8 (function_definition -> FUNCTION VOID ID LPAREN function_definition_param RPAREN local_variables_declaration instruction_block .)
    FUNCTION        reduce using rule 8 (function_definition -> FUNCTION VOID ID LPAREN function_definition_param RPAREN local_variables_declaration instruction_block .)


state 63

    (13) dims_definition -> LBRACKET CONST_INT RBRACKET .

    LBRACKET        reduce using rule 13 (dims_definition -> LBRACKET CONST_INT RBRACKET .)
    RPAREN          reduce using rule 13 (dims_definition -> LBRACKET CONST_INT RBRACKET .)
    COMMA           reduce using rule 13 (dims_definition -> LBRACKET CONST_INT RBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNCTION in state 2 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 5 resolved as shift
WARNING: shift/reduce conflict for START in state 5 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 10 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 10 resolved as shift
WARNING: shift/reduce conflict for INT in state 28 resolved as shift
WARNING: shift/reduce conflict for REAL in state 28 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 28 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 28 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 42 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 50 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 55 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 59 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 59 resolved as shift
WARNING: reduce/reduce conflict in state 10 resolved using rule (function_definition -> function_definition function_definition)
WARNING: rejected rule (empty -> <empty>) in state 10
WARNING: reduce/reduce conflict in state 50 resolved using rule (function_definition_param -> type ID dims_definition)
WARNING: rejected rule (empty -> <empty>) in state 50
WARNING: reduce/reduce conflict in state 59 resolved using rule (dims_definition -> dims_definition dims_definition)
WARNING: rejected rule (empty -> <empty>) in state 59
